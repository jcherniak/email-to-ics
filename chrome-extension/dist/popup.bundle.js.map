{
  "version": 3,
  "sources": ["../node_modules/ical.js/dist/ical.js", "../popup.js"],
  "sourcesContent": ["/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch */\n\n/**\n * Represents the BINARY value type, which contains extra methods for encoding and decoding.\n *\n * @memberof ICAL\n */\nclass Binary {\n  /**\n   * Creates a binary value from the given string.\n   *\n   * @param {String} aString        The binary value string\n   * @return {Binary}               The binary value instance\n   */\n  static fromString(aString) {\n    return new Binary(aString);\n  }\n\n  /**\n   * Creates a new ICAL.Binary instance\n   *\n   * @param {String} aValue     The binary data for this value\n   */\n  constructor(aValue) {\n    this.value = aValue;\n  }\n\n  /**\n   * The type name, to be used in the jCal object.\n   * @default \"binary\"\n   * @constant\n   */\n  icaltype = \"binary\";\n\n  /**\n   * Base64 decode the current value\n   *\n   * @return {String}         The base64-decoded value\n   */\n  decodeValue() {\n    return this._b64_decode(this.value);\n  }\n\n  /**\n   * Encodes the passed parameter with base64 and sets the internal\n   * value to the result.\n   *\n   * @param {String} aValue      The raw binary value to encode\n   */\n  setEncodedValue(aValue) {\n    this.value = this._b64_encode(aValue);\n  }\n\n  _b64_encode(data) {\n    // http://kevin.vanzonneveld.net\n    // +   original by: Tyler Akins (http://rumkin.com)\n    // +   improved by: Bayron Guevara\n    // +   improved by: Thunder.m\n    // +   improved by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n    // +   bugfixed by: Pellentesque Malesuada\n    // +   improved by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n    // +   improved by: Rafa\u0142 Kukawski (http://kukawski.pl)\n    // *     example 1: base64_encode('Kevin van Zonneveld');\n    // *     returns 1: 'S2V2aW4gdmFuIFpvbm5ldmVsZA=='\n    // mozilla has this native\n    // - but breaks in 2.0.0.12!\n    //if (typeof this.window['atob'] == 'function') {\n    //    return atob(data);\n    //}\n    let b64 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\" +\n              \"abcdefghijklmnopqrstuvwxyz0123456789+/=\";\n    let o1, o2, o3, h1, h2, h3, h4, bits, i = 0,\n      ac = 0,\n      enc = \"\",\n      tmp_arr = [];\n\n    if (!data) {\n      return data;\n    }\n\n    do { // pack three octets into four hexets\n      o1 = data.charCodeAt(i++);\n      o2 = data.charCodeAt(i++);\n      o3 = data.charCodeAt(i++);\n\n      bits = o1 << 16 | o2 << 8 | o3;\n\n      h1 = bits >> 18 & 0x3f;\n      h2 = bits >> 12 & 0x3f;\n      h3 = bits >> 6 & 0x3f;\n      h4 = bits & 0x3f;\n\n      // use hexets to index into b64, and append result to encoded string\n      tmp_arr[ac++] = b64.charAt(h1) + b64.charAt(h2) + b64.charAt(h3) + b64.charAt(h4);\n    } while (i < data.length);\n\n    enc = tmp_arr.join('');\n\n    let r = data.length % 3;\n\n    return (r ? enc.slice(0, r - 3) : enc) + '==='.slice(r || 3);\n\n  }\n\n  _b64_decode(data) {\n    // http://kevin.vanzonneveld.net\n    // +   original by: Tyler Akins (http://rumkin.com)\n    // +   improved by: Thunder.m\n    // +      input by: Aman Gupta\n    // +   improved by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n    // +   bugfixed by: Onno Marsman\n    // +   bugfixed by: Pellentesque Malesuada\n    // +   improved by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n    // +      input by: Brett Zamir (http://brett-zamir.me)\n    // +   bugfixed by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n    // *     example 1: base64_decode('S2V2aW4gdmFuIFpvbm5ldmVsZA==');\n    // *     returns 1: 'Kevin van Zonneveld'\n    // mozilla has this native\n    // - but breaks in 2.0.0.12!\n    //if (typeof this.window['btoa'] == 'function') {\n    //    return btoa(data);\n    //}\n    let b64 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\" +\n              \"abcdefghijklmnopqrstuvwxyz0123456789+/=\";\n    let o1, o2, o3, h1, h2, h3, h4, bits, i = 0,\n      ac = 0,\n      dec = \"\",\n      tmp_arr = [];\n\n    if (!data) {\n      return data;\n    }\n\n    data += '';\n\n    do { // unpack four hexets into three octets using index points in b64\n      h1 = b64.indexOf(data.charAt(i++));\n      h2 = b64.indexOf(data.charAt(i++));\n      h3 = b64.indexOf(data.charAt(i++));\n      h4 = b64.indexOf(data.charAt(i++));\n\n      bits = h1 << 18 | h2 << 12 | h3 << 6 | h4;\n\n      o1 = bits >> 16 & 0xff;\n      o2 = bits >> 8 & 0xff;\n      o3 = bits & 0xff;\n\n      if (h3 == 64) {\n        tmp_arr[ac++] = String.fromCharCode(o1);\n      } else if (h4 == 64) {\n        tmp_arr[ac++] = String.fromCharCode(o1, o2);\n      } else {\n        tmp_arr[ac++] = String.fromCharCode(o1, o2, o3);\n      }\n    } while (i < data.length);\n\n    dec = tmp_arr.join('');\n\n    return dec;\n  }\n\n  /**\n   * The string representation of this value\n   * @return {String}\n   */\n  toString() {\n    return this.value;\n  }\n}\n\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch */\n\n\nconst DURATION_LETTERS = /([PDWHMTS]{1,1})/;\nconst DATA_PROPS_TO_COPY = [\"weeks\", \"days\", \"hours\", \"minutes\", \"seconds\", \"isNegative\"];\n\n/**\n * This class represents the \"duration\" value type, with various calculation\n * and manipulation methods.\n *\n * @memberof ICAL\n */\nclass Duration {\n  /**\n   * Returns a new ICAL.Duration instance from the passed seconds value.\n   *\n   * @param {Number} aSeconds       The seconds to create the instance from\n   * @return {Duration}             The newly created duration instance\n   */\n  static fromSeconds(aSeconds) {\n    return (new Duration()).fromSeconds(aSeconds);\n  }\n\n  /**\n   * Checks if the given string is an iCalendar duration value.\n   *\n   * @param {String} value      The raw ical value\n   * @return {Boolean}          True, if the given value is of the\n   *                              duration ical type\n   */\n  static isValueString(string) {\n    return (string[0] === 'P' || string[1] === 'P');\n  }\n\n  /**\n   * Creates a new {@link ICAL.Duration} instance from the passed string.\n   *\n   * @param {String} aStr       The string to parse\n   * @return {Duration}         The created duration instance\n   */\n  static fromString(aStr) {\n    let pos = 0;\n    let dict = Object.create(null);\n    let chunks = 0;\n\n    while ((pos = aStr.search(DURATION_LETTERS)) !== -1) {\n      let type = aStr[pos];\n      let numeric = aStr.slice(0, Math.max(0, pos));\n      aStr = aStr.slice(pos + 1);\n\n      chunks += parseDurationChunk(type, numeric, dict);\n    }\n\n    if (chunks < 2) {\n      // There must be at least a chunk with \"P\" and some unit chunk\n      throw new Error(\n        'invalid duration value: Not enough duration components in \"' + aStr + '\"'\n      );\n    }\n\n    return new Duration(dict);\n  }\n\n  /**\n   * Creates a new ICAL.Duration instance from the given data object.\n   *\n   * @param {Object} aData                An object with members of the duration\n   * @param {Number=} aData.weeks         Duration in weeks\n   * @param {Number=} aData.days          Duration in days\n   * @param {Number=} aData.hours         Duration in hours\n   * @param {Number=} aData.minutes       Duration in minutes\n   * @param {Number=} aData.seconds       Duration in seconds\n   * @param {Boolean=} aData.isNegative   If true, the duration is negative\n   * @return {Duration}                   The createad duration instance\n   */\n  static fromData(aData) {\n    return new Duration(aData);\n  }\n\n  /**\n   * Creates a new ICAL.Duration instance.\n   *\n   * @param {Object} data                 An object with members of the duration\n   * @param {Number=} data.weeks          Duration in weeks\n   * @param {Number=} data.days           Duration in days\n   * @param {Number=} data.hours          Duration in hours\n   * @param {Number=} data.minutes        Duration in minutes\n   * @param {Number=} data.seconds        Duration in seconds\n   * @param {Boolean=} data.isNegative    If true, the duration is negative\n   */\n  constructor(data) {\n    this.wrappedJSObject = this;\n    this.fromData(data);\n  }\n\n  /**\n   * The weeks in this duration\n   * @type {Number}\n   * @default 0\n   */\n  weeks = 0;\n\n  /**\n   * The days in this duration\n   * @type {Number}\n   * @default 0\n   */\n  days = 0;\n\n  /**\n   * The days in this duration\n   * @type {Number}\n   * @default 0\n   */\n  hours = 0;\n\n  /**\n   * The minutes in this duration\n   * @type {Number}\n   * @default 0\n   */\n  minutes = 0;\n\n  /**\n   * The seconds in this duration\n   * @type {Number}\n   * @default 0\n   */\n  seconds = 0;\n\n  /**\n   * The seconds in this duration\n   * @type {Boolean}\n   * @default false\n   */\n  isNegative = false;\n\n  /**\n   * The class identifier.\n   * @constant\n   * @type {String}\n   * @default \"icalduration\"\n   */\n  icalclass = \"icalduration\";\n\n  /**\n   * The type name, to be used in the jCal object.\n   * @constant\n   * @type {String}\n   * @default \"duration\"\n   */\n  icaltype = \"duration\";\n\n  /**\n   * Returns a clone of the duration object.\n   *\n   * @return {Duration}      The cloned object\n   */\n  clone() {\n    return Duration.fromData(this);\n  }\n\n  /**\n   * The duration value expressed as a number of seconds.\n   *\n   * @return {Number}             The duration value in seconds\n   */\n  toSeconds() {\n    let seconds = this.seconds + 60 * this.minutes + 3600 * this.hours +\n                  86400 * this.days + 7 * 86400 * this.weeks;\n    return (this.isNegative ? -seconds : seconds);\n  }\n\n  /**\n   * Reads the passed seconds value into this duration object. Afterwards,\n   * members like {@link ICAL.Duration#days days} and {@link ICAL.Duration#weeks weeks} will be set up\n   * accordingly.\n   *\n   * @param {Number} aSeconds     The duration value in seconds\n   * @return {Duration}           Returns this instance\n   */\n  fromSeconds(aSeconds) {\n    let secs = Math.abs(aSeconds);\n\n    this.isNegative = (aSeconds < 0);\n    this.days = trunc(secs / 86400);\n\n    // If we have a flat number of weeks, use them.\n    if (this.days % 7 == 0) {\n      this.weeks = this.days / 7;\n      this.days = 0;\n    } else {\n      this.weeks = 0;\n    }\n\n    secs -= (this.days + 7 * this.weeks) * 86400;\n\n    this.hours = trunc(secs / 3600);\n    secs -= this.hours * 3600;\n\n    this.minutes = trunc(secs / 60);\n    secs -= this.minutes * 60;\n\n    this.seconds = secs;\n    return this;\n  }\n\n  /**\n   * Sets up the current instance using members from the passed data object.\n   *\n   * @param {Object} aData                An object with members of the duration\n   * @param {Number=} aData.weeks         Duration in weeks\n   * @param {Number=} aData.days          Duration in days\n   * @param {Number=} aData.hours         Duration in hours\n   * @param {Number=} aData.minutes       Duration in minutes\n   * @param {Number=} aData.seconds       Duration in seconds\n   * @param {Boolean=} aData.isNegative   If true, the duration is negative\n   */\n  fromData(aData) {\n    for (let prop of DATA_PROPS_TO_COPY) {\n      if (aData && prop in aData) {\n        this[prop] = aData[prop];\n      } else {\n        this[prop] = 0;\n      }\n    }\n  }\n\n  /**\n   * Resets the duration instance to the default values, i.e. PT0S\n   */\n  reset() {\n    this.isNegative = false;\n    this.weeks = 0;\n    this.days = 0;\n    this.hours = 0;\n    this.minutes = 0;\n    this.seconds = 0;\n  }\n\n  /**\n   * Compares the duration instance with another one.\n   *\n   * @param {Duration} aOther             The instance to compare with\n   * @return {Number}                     -1, 0 or 1 for less/equal/greater\n   */\n  compare(aOther) {\n    let thisSeconds = this.toSeconds();\n    let otherSeconds = aOther.toSeconds();\n    return (thisSeconds > otherSeconds) - (thisSeconds < otherSeconds);\n  }\n\n  /**\n   * Normalizes the duration instance. For example, a duration with a value\n   * of 61 seconds will be normalized to 1 minute and 1 second.\n   */\n  normalize() {\n    this.fromSeconds(this.toSeconds());\n  }\n\n  /**\n   * The string representation of this duration.\n   * @return {String}\n   */\n  toString() {\n    if (this.toSeconds() == 0) {\n      return \"PT0S\";\n    } else {\n      let str = \"\";\n      if (this.isNegative) str += \"-\";\n      str += \"P\";\n      let hasWeeks = false;\n      if (this.weeks) {\n        if (this.days || this.hours || this.minutes || this.seconds) {\n          str += (this.weeks * 7 + this.days) + \"D\";\n        } else {\n          str += (this.weeks + \"W\");\n          hasWeeks = true;\n        }\n      } else if (this.days) {\n        str += (this.days + \"D\");\n      }\n\n      if (!hasWeeks) {\n        if (this.hours || this.minutes || this.seconds) {\n          str += \"T\";\n          if (this.hours) {\n            str += this.hours + \"H\";\n          }\n\n          if (this.minutes) {\n            str += this.minutes + \"M\";\n          }\n\n          if (this.seconds) {\n            str += this.seconds + \"S\";\n          }\n        }\n      }\n\n      return str;\n    }\n  }\n\n  /**\n   * The iCalendar string representation of this duration.\n   * @return {String}\n   */\n  toICALString() {\n    return this.toString();\n  }\n}\n\n/**\n * Internal helper function to handle a chunk of a duration.\n *\n * @private\n * @param {String} letter type of duration chunk\n * @param {String} number numeric value or -/+\n * @param {Object} dict target to assign values to\n */\nfunction parseDurationChunk(letter, number, object) {\n  let type;\n  switch (letter) {\n    case 'P':\n      if (number && number === '-') {\n        object.isNegative = true;\n      } else {\n        object.isNegative = false;\n      }\n      // period\n      break;\n    case 'D':\n      type = 'days';\n      break;\n    case 'W':\n      type = 'weeks';\n      break;\n    case 'H':\n      type = 'hours';\n      break;\n    case 'M':\n      type = 'minutes';\n      break;\n    case 'S':\n      type = 'seconds';\n      break;\n    default:\n      // Not a valid chunk\n      return 0;\n  }\n\n  if (type) {\n    if (!number && number !== 0) {\n      throw new Error(\n        'invalid duration value: Missing number before \"' + letter + '\"'\n      );\n    }\n    let num = parseInt(number, 10);\n    if (isStrictlyNaN(num)) {\n      throw new Error(\n        'invalid duration value: Invalid number \"' + number + '\" before \"' + letter + '\"'\n      );\n    }\n    object[type] = num;\n  }\n\n  return 1;\n}\n\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch */\n\n\n/**\n * This lets typescript resolve our custom types in the\n * generated d.ts files (jsdoc typedefs are converted to typescript types).\n * Ignore prevents the typedefs from being documented more than once.\n * @ignore\n * @typedef {import(\"./types.js\").jCalComponent} jCalComponent\n * Imports the 'occurrenceDetails' type from the \"types.js\" module\n */\n\n/**\n * This class represents the \"period\" value type, with various calculation and manipulation methods.\n *\n * @memberof ICAL\n */\nclass Period {\n  /**\n   * Creates a new {@link ICAL.Period} instance from the passed string.\n   *\n   * @param {String} str            The string to parse\n   * @param {Property} prop         The property this period will be on\n   * @return {Period}               The created period instance\n   */\n  static fromString(str, prop) {\n    let parts = str.split('/');\n\n    if (parts.length !== 2) {\n      throw new Error(\n        'Invalid string value: \"' + str + '\" must contain a \"/\" char.'\n      );\n    }\n\n    let options = {\n      start: Time.fromDateTimeString(parts[0], prop)\n    };\n\n    let end = parts[1];\n\n    if (Duration.isValueString(end)) {\n      options.duration = Duration.fromString(end);\n    } else {\n      options.end = Time.fromDateTimeString(end, prop);\n    }\n\n    return new Period(options);\n  }\n\n  /**\n   * Creates a new {@link ICAL.Period} instance from the given data object.\n   * The passed data object cannot contain both and end date and a duration.\n   *\n   * @param {Object} aData                  An object with members of the period\n   * @param {Time=} aData.start             The start of the period\n   * @param {Time=} aData.end               The end of the period\n   * @param {Duration=} aData.duration      The duration of the period\n   * @return {Period}                       The period instance\n   */\n  static fromData(aData) {\n    return new Period(aData);\n  }\n\n  /**\n   * Returns a new period instance from the given jCal data array. The first\n   * member is always the start date string, the second member is either a\n   * duration or end date string.\n   *\n   * @param {jCalComponent} aData           The jCal data array\n   * @param {Property} aProp                The property this jCal data is on\n   * @param {Boolean} aLenient              If true, data value can be both date and date-time\n   * @return {Period}                       The period instance\n   */\n  static fromJSON(aData, aProp, aLenient) {\n    function fromDateOrDateTimeString(aValue, dateProp) {\n      if (aLenient) {\n        return Time.fromString(aValue, dateProp);\n      } else {\n        return Time.fromDateTimeString(aValue, dateProp);\n      }\n    }\n\n    if (Duration.isValueString(aData[1])) {\n      return Period.fromData({\n        start: fromDateOrDateTimeString(aData[0], aProp),\n        duration: Duration.fromString(aData[1])\n      });\n    } else {\n      return Period.fromData({\n        start: fromDateOrDateTimeString(aData[0], aProp),\n        end: fromDateOrDateTimeString(aData[1], aProp)\n      });\n    }\n  }\n\n  /**\n   * Creates a new ICAL.Period instance. The passed data object cannot contain both and end date and\n   * a duration.\n   *\n   * @param {Object} aData                  An object with members of the period\n   * @param {Time=} aData.start             The start of the period\n   * @param {Time=} aData.end               The end of the period\n   * @param {Duration=} aData.duration      The duration of the period\n   */\n  constructor(aData) {\n    this.wrappedJSObject = this;\n\n    if (aData && 'start' in aData) {\n      if (aData.start && !(aData.start instanceof Time)) {\n        throw new TypeError('.start must be an instance of ICAL.Time');\n      }\n      this.start = aData.start;\n    }\n\n    if (aData && aData.end && aData.duration) {\n      throw new Error('cannot accept both end and duration');\n    }\n\n    if (aData && 'end' in aData) {\n      if (aData.end && !(aData.end instanceof Time)) {\n        throw new TypeError('.end must be an instance of ICAL.Time');\n      }\n      this.end = aData.end;\n    }\n\n    if (aData && 'duration' in aData) {\n      if (aData.duration && !(aData.duration instanceof Duration)) {\n        throw new TypeError('.duration must be an instance of ICAL.Duration');\n      }\n      this.duration = aData.duration;\n    }\n  }\n\n\n  /**\n   * The start of the period\n   * @type {Time}\n   */\n  start = null;\n\n  /**\n   * The end of the period\n   * @type {Time}\n   */\n  end = null;\n\n  /**\n   * The duration of the period\n   * @type {Duration}\n   */\n  duration = null;\n\n  /**\n   * The class identifier.\n   * @constant\n   * @type {String}\n   * @default \"icalperiod\"\n   */\n  icalclass = \"icalperiod\";\n\n  /**\n   * The type name, to be used in the jCal object.\n   * @constant\n   * @type {String}\n   * @default \"period\"\n   */\n  icaltype = \"period\";\n\n  /**\n   * Returns a clone of the duration object.\n   *\n   * @return {Period}      The cloned object\n   */\n  clone() {\n    return Period.fromData({\n      start: this.start ? this.start.clone() : null,\n      end: this.end ? this.end.clone() : null,\n      duration: this.duration ? this.duration.clone() : null\n    });\n  }\n\n  /**\n   * Calculates the duration of the period, either directly or by subtracting\n   * start from end date.\n   *\n   * @return {Duration}      The calculated duration\n   */\n  getDuration() {\n    if (this.duration) {\n      return this.duration;\n    } else {\n      return this.end.subtractDate(this.start);\n    }\n  }\n\n  /**\n   * Calculates the end date of the period, either directly or by adding\n   * duration to start date.\n   *\n   * @return {Time}          The calculated end date\n   */\n  getEnd() {\n    if (this.end) {\n      return this.end;\n    } else {\n      let end = this.start.clone();\n      end.addDuration(this.duration);\n      return end;\n    }\n  }\n\n  /**\n   * Compare this period with a date or other period. To maintain the logic where a.compare(b)\n   * returns 1 when a > b, this function will return 1 when the period is after the date, 0 when the\n   * date is within the period, and -1 when the period is before the date. When comparing two\n   * periods, as soon as they overlap in any way this will return 0.\n   *\n   * @param {ICAL.Time|ICAL.Period} dt    The date or other period to compare with\n   */\n  compare(dt) {\n    if (dt.compare(this.start) < 0) {\n      return 1;\n    } else if (dt.compare(this.getEnd()) > 0) {\n      return -1;\n    } else {\n      return 0;\n    }\n  }\n\n  /**\n   * The string representation of this period.\n   * @return {String}\n   */\n  toString() {\n    return this.start + \"/\" + (this.end || this.duration);\n  }\n\n  /**\n   * The jCal representation of this period type.\n   * @return {Object}\n   */\n  toJSON() {\n    return [this.start.toString(), (this.end || this.duration).toString()];\n  }\n\n  /**\n   * The iCalendar string representation of this period.\n   * @return {String}\n   */\n  toICALString() {\n    return this.start.toICALString() + \"/\" +\n           (this.end || this.duration).toICALString();\n  }\n}\n\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch */\n\n\n/**\n * This lets typescript resolve our custom types in the\n * generated d.ts files (jsdoc typedefs are converted to typescript types).\n * Ignore prevents the typedefs from being documented more than once.\n *\n * @ignore\n * @typedef {import(\"./types.js\").weekDay} weekDay\n * Imports the 'weekDay' type from the \"types.js\" module\n *\n * @ignore\n * @typedef {import(\"./types.js\").timeInit} timeInit\n * Imports the 'timeInit' type from the \"types.js\" module\n */\n\n/**\n * @classdesc\n * iCalendar Time representation (similar to JS Date object).  Fully\n * independent of system (OS) timezone / time.  Unlike JS Date, the month\n * January is 1, not zero.\n *\n * @example\n * var time = new ICAL.Time({\n *   year: 2012,\n *   month: 10,\n *   day: 11\n *   minute: 0,\n *   second: 0,\n *   isDate: false\n * });\n *\n *\n * @memberof ICAL\n*/\nclass Time {\n  static _dowCache = {};\n  static _wnCache = {};\n\n  /**\n   * Returns the days in the given month\n   *\n   * @param {Number} month      The month to check\n   * @param {Number} year       The year to check\n   * @return {Number}           The number of days in the month\n   */\n  static daysInMonth(month, year) {\n    let _daysInMonth = [0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n    let days = 30;\n\n    if (month < 1 || month > 12) return days;\n\n    days = _daysInMonth[month];\n\n    if (month == 2) {\n      days += Time.isLeapYear(year);\n    }\n\n    return days;\n  }\n\n  /**\n   * Checks if the year is a leap year\n   *\n   * @param {Number} year       The year to check\n   * @return {Boolean}          True, if the year is a leap year\n   */\n  static isLeapYear(year) {\n    if (year <= 1752) {\n      return ((year % 4) == 0);\n    } else {\n      return (((year % 4 == 0) && (year % 100 != 0)) || (year % 400 == 0));\n    }\n  }\n\n  /**\n   * Create a new ICAL.Time from the day of year and year. The date is returned\n   * in floating timezone.\n   *\n   * @param {Number} aDayOfYear     The day of year\n   * @param {Number} aYear          The year to create the instance in\n   * @return {Time}                 The created instance with the calculated date\n   */\n  static fromDayOfYear(aDayOfYear, aYear) {\n    let year = aYear;\n    let doy = aDayOfYear;\n    let tt = new Time();\n    tt.auto_normalize = false;\n    let is_leap = (Time.isLeapYear(year) ? 1 : 0);\n\n    if (doy < 1) {\n      year--;\n      is_leap = (Time.isLeapYear(year) ? 1 : 0);\n      doy += Time.daysInYearPassedMonth[is_leap][12];\n      return Time.fromDayOfYear(doy, year);\n    } else if (doy > Time.daysInYearPassedMonth[is_leap][12]) {\n      is_leap = (Time.isLeapYear(year) ? 1 : 0);\n      doy -= Time.daysInYearPassedMonth[is_leap][12];\n      year++;\n      return Time.fromDayOfYear(doy, year);\n    }\n\n    tt.year = year;\n    tt.isDate = true;\n\n    for (let month = 11; month >= 0; month--) {\n      if (doy > Time.daysInYearPassedMonth[is_leap][month]) {\n        tt.month = month + 1;\n        tt.day = doy - Time.daysInYearPassedMonth[is_leap][month];\n        break;\n      }\n    }\n\n    tt.auto_normalize = true;\n    return tt;\n  }\n\n  /**\n   * Returns a new ICAL.Time instance from a date string, e.g 2015-01-02.\n   *\n   * @deprecated                Use {@link ICAL.Time.fromDateString} instead\n   * @param {String} str        The string to create from\n   * @return {Time}             The date/time instance\n   */\n  static fromStringv2(str) {\n    return new Time({\n      year: parseInt(str.slice(0, 4), 10),\n      month: parseInt(str.slice(5, 7), 10),\n      day: parseInt(str.slice(8, 10), 10),\n      isDate: true\n    });\n  }\n\n  /**\n   * Returns a new ICAL.Time instance from a date string, e.g 2015-01-02.\n   *\n   * @param {String} aValue     The string to create from\n   * @return {Time}             The date/time instance\n   */\n  static fromDateString(aValue) {\n    // Dates should have no timezone.\n    // Google likes to sometimes specify Z on dates\n    // we specifically ignore that to avoid issues.\n\n    // YYYY-MM-DD\n    // 2012-10-10\n    return new Time({\n      year: strictParseInt(aValue.slice(0, 4)),\n      month: strictParseInt(aValue.slice(5, 7)),\n      day: strictParseInt(aValue.slice(8, 10)),\n      isDate: true\n    });\n  }\n\n  /**\n   * Returns a new ICAL.Time instance from a date-time string, e.g\n   * 2015-01-02T03:04:05. If a property is specified, the timezone is set up\n   * from the property's TZID parameter.\n   *\n   * @param {String} aValue         The string to create from\n   * @param {Property=} prop        The property the date belongs to\n   * @return {Time}                 The date/time instance\n   */\n  static fromDateTimeString(aValue, prop) {\n    if (aValue.length < 19) {\n      throw new Error(\n        'invalid date-time value: \"' + aValue + '\"'\n      );\n    }\n\n    let zone;\n    let zoneId;\n\n    if (aValue.slice(-1) === 'Z') {\n      zone = Timezone.utcTimezone;\n    } else if (prop) {\n      zoneId = prop.getParameter('tzid');\n\n      if (prop.parent) {\n        if (prop.parent.name === 'standard' || prop.parent.name === 'daylight') {\n          // Per RFC 5545 3.8.2.4 and 3.8.2.2, start/end date-times within\n          // these components MUST be specified in local time.\n          zone = Timezone.localTimezone;\n        } else if (zoneId) {\n          // If the desired time zone is defined within the component tree,\n          // fetch its definition and prefer that.\n          zone = prop.parent.getTimeZoneByID(zoneId);\n        }\n      }\n    }\n\n    const timeData = {\n      year: strictParseInt(aValue.slice(0, 4)),\n      month: strictParseInt(aValue.slice(5, 7)),\n      day: strictParseInt(aValue.slice(8, 10)),\n      hour: strictParseInt(aValue.slice(11, 13)),\n      minute: strictParseInt(aValue.slice(14, 16)),\n      second: strictParseInt(aValue.slice(17, 19)),\n    };\n\n    // Although RFC 5545 requires that all TZIDs used within a file have a\n    // corresponding time zone definition, we may not be parsing the full file\n    // or we may be dealing with a non-compliant file; in either case, we can\n    // check our own time zone service for the TZID in a last-ditch effort.\n    if (zoneId && !zone) {\n      timeData.timezone = zoneId;\n    }\n\n    // 2012-10-10T10:10:10(Z)?\n    return new Time(timeData, zone);\n  }\n\n  /**\n   * Returns a new ICAL.Time instance from a date or date-time string,\n   *\n   * @param {String} aValue         The string to create from\n   * @param {Property=} prop        The property the date belongs to\n   * @return {Time}                 The date/time instance\n   */\n  static fromString(aValue, aProperty) {\n    if (aValue.length > 10) {\n      return Time.fromDateTimeString(aValue, aProperty);\n    } else {\n      return Time.fromDateString(aValue);\n    }\n  }\n\n  /**\n   * Creates a new ICAL.Time instance from the given Javascript Date.\n   *\n   * @param {?Date} aDate             The Javascript Date to read, or null to reset\n   * @param {Boolean} [useUTC=false]  If true, the UTC values of the date will be used\n   */\n  static fromJSDate(aDate, useUTC) {\n    let tt = new Time();\n    return tt.fromJSDate(aDate, useUTC);\n  }\n\n  /**\n   * Creates a new ICAL.Time instance from the the passed data object.\n   *\n   * @param {timeInit} aData          Time initialization\n   * @param {Timezone=} aZone         Timezone this position occurs in\n   */\n  static fromData = function fromData(aData, aZone) {\n    let t = new Time();\n    return t.fromData(aData, aZone);\n  };\n\n  /**\n   * Creates a new ICAL.Time instance from the current moment.\n   * The instance is \u201Cfloating\u201D - has no timezone relation.\n   * To create an instance considering the time zone, call\n   * ICAL.Time.fromJSDate(new Date(), true)\n   * @return {Time}\n   */\n  static now() {\n    return Time.fromJSDate(new Date(), false);\n  }\n\n  /**\n   * Returns the date on which ISO week number 1 starts.\n   *\n   * @see Time#weekNumber\n   * @param {Number} aYear                  The year to search in\n   * @param {weekDay=} aWeekStart           The week start weekday, used for calculation.\n   * @return {Time}                         The date on which week number 1 starts\n   */\n  static weekOneStarts(aYear, aWeekStart) {\n    let t = Time.fromData({\n      year: aYear,\n      month: 1,\n      day: 1,\n      isDate: true\n    });\n\n    let dow = t.dayOfWeek();\n    let wkst = aWeekStart || Time.DEFAULT_WEEK_START;\n    if (dow > Time.THURSDAY) {\n      t.day += 7;\n    }\n    if (wkst > Time.THURSDAY) {\n      t.day -= 7;\n    }\n\n    t.day -= dow - wkst;\n\n    return t;\n  }\n\n  /**\n   * Get the dominical letter for the given year. Letters range from A - G for\n   * common years, and AG to GF for leap years.\n   *\n   * @param {Number} yr           The year to retrieve the letter for\n   * @return {String}             The dominical letter.\n   */\n  static getDominicalLetter(yr) {\n    let LTRS = \"GFEDCBA\";\n    let dom = (yr + (yr / 4 | 0) + (yr / 400 | 0) - (yr / 100 | 0) - 1) % 7;\n    let isLeap = Time.isLeapYear(yr);\n    if (isLeap) {\n      return LTRS[(dom + 6) % 7] + LTRS[dom];\n    } else {\n      return LTRS[dom];\n    }\n  }\n\n  static #epochTime = null;\n  /**\n   * January 1st, 1970 as an ICAL.Time.\n   * @type {Time}\n   * @constant\n   * @instance\n   */\n  static get epochTime() {\n    if (!this.#epochTime) {\n      this.#epochTime = Time.fromData({\n        year: 1970,\n        month: 1,\n        day: 1,\n        hour: 0,\n        minute: 0,\n        second: 0,\n        isDate: false,\n        timezone: \"Z\"\n      });\n    }\n    return this.#epochTime;\n  }\n\n  static _cmp_attr(a, b, attr) {\n    if (a[attr] > b[attr]) return 1;\n    if (a[attr] < b[attr]) return -1;\n    return 0;\n  }\n\n  /**\n   * The days that have passed in the year after a given month. The array has\n   * two members, one being an array of passed days for non-leap years, the\n   * other analog for leap years.\n   * @example\n   * var isLeapYear = ICAL.Time.isLeapYear(year);\n   * var passedDays = ICAL.Time.daysInYearPassedMonth[isLeapYear][month];\n   * @type {Array.<Array.<Number>>}\n   */\n  static daysInYearPassedMonth = [\n    [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334, 365],\n    [0, 31, 60, 91, 121, 152, 182, 213, 244, 274, 305, 335, 366]\n  ];\n\n  static SUNDAY = 1;\n  static MONDAY = 2;\n  static TUESDAY = 3;\n  static WEDNESDAY = 4;\n  static THURSDAY = 5;\n  static FRIDAY = 6;\n  static SATURDAY = 7;\n\n  /**\n   * The default weekday for the WKST part.\n   * @constant\n   * @default ICAL.Time.MONDAY\n   */\n  static DEFAULT_WEEK_START = 2; // MONDAY\n\n  /**\n   * Creates a new ICAL.Time instance.\n   *\n   * @param {timeInit} data           Time initialization\n   * @param {Timezone} zone           timezone this position occurs in\n   */\n  constructor(data, zone) {\n    this.wrappedJSObject = this;\n\n    /**\n     * @type {timeInit}\n     * @private\n     */\n    this._time = Object.create(null);\n\n    /* time defaults */\n    this._time.year = 0;\n    this._time.month = 1;\n    this._time.day = 1;\n    this._time.hour = 0;\n    this._time.minute = 0;\n    this._time.second = 0;\n    this._time.isDate = false;\n\n    this.fromData(data, zone);\n  }\n\n  /**\n   * The class identifier.\n   * @constant\n   * @type {String}\n   * @default \"icaltime\"\n   */\n  icalclass = \"icaltime\";\n  _cachedUnixTime = null;\n\n  /**\n   * The type name, to be used in the jCal object. This value may change and\n   * is strictly defined by the {@link ICAL.Time#isDate isDate} member.\n   * @type {String}\n   * @default \"date-time\"\n   */\n  get icaltype() {\n    return this.isDate ? 'date' : 'date-time';\n  }\n\n  /**\n   * The timezone for this time.\n   * @type {Timezone}\n   */\n  zone = null;\n\n  /**\n   * Internal uses to indicate that a change has been made and the next read\n   * operation must attempt to normalize the value (for example changing the\n   * day to 33).\n   *\n   * @type {Boolean}\n   * @private\n   */\n  _pendingNormalization = false;\n\n  /**\n   * The year of this date.\n   * @type {Number}\n   */\n  get year() {\n    return this._getTimeAttr('year');\n  }\n\n  set year(val) {\n    this._setTimeAttr('year', val);\n  }\n\n  /**\n   * The month of this date.\n   * @type {Number}\n   */\n  get month() {\n    return this._getTimeAttr('month');\n  }\n\n  set month(val) {\n    this._setTimeAttr('month', val);\n  }\n\n  /**\n   * The day of this date.\n   * @type {Number}\n   */\n  get day() {\n    return this._getTimeAttr('day');\n  }\n\n  set day(val) {\n    this._setTimeAttr('day', val);\n  }\n\n  /**\n   * The hour of this date-time.\n   * @type {Number}\n   */\n  get hour() {\n    return this._getTimeAttr('hour');\n  }\n\n  set hour(val) {\n    this._setTimeAttr('hour', val);\n  }\n\n  /**\n   * The minute of this date-time.\n   * @type {Number}\n   */\n  get minute() {\n    return this._getTimeAttr('minute');\n  }\n\n  set minute(val) {\n    this._setTimeAttr('minute', val);\n  }\n\n  /**\n   * The second of this date-time.\n   * @type {Number}\n   */\n  get second() {\n    return this._getTimeAttr('second');\n  }\n\n  set second(val) {\n    this._setTimeAttr('second', val);\n  }\n\n  /**\n   * If true, the instance represents a date (as opposed to a date-time)\n   * @type {Boolean}\n   */\n  get isDate() {\n    return this._getTimeAttr('isDate');\n  }\n\n  set isDate(val) {\n    this._setTimeAttr('isDate', val);\n  }\n\n  /**\n   * @private\n   * @param {String} attr             Attribute to get (one of: year, month,\n   *                                  day, hour, minute, second, isDate)\n   * @return {Number|Boolean}         Current value for the attribute\n   */\n  _getTimeAttr(attr) {\n    if (this._pendingNormalization) {\n      this._normalize();\n      this._pendingNormalization = false;\n    }\n\n    return this._time[attr];\n  }\n\n  /**\n   * @private\n   * @param {String} attr             Attribute to set (one of: year, month,\n   *                                  day, hour, minute, second, isDate)\n   * @param {Number|Boolean} val      New value for the attribute\n   */\n  _setTimeAttr(attr, val) {\n    // Check if isDate will be set and if was not set to normalize date.\n    // This avoids losing days when seconds, minutes and hours are zeroed\n    // what normalize will do when time is a date.\n    if (attr === \"isDate\" && val && !this._time.isDate) {\n      this.adjust(0, 0, 0, 0);\n    }\n    this._cachedUnixTime = null;\n    this._pendingNormalization = true;\n    this._time[attr] = val;\n  }\n\n  /**\n   * Returns a clone of the time object.\n   *\n   * @return {Time}              The cloned object\n   */\n  clone() {\n    return new Time(this._time, this.zone);\n  }\n\n  /**\n   * Reset the time instance to epoch time\n   */\n  reset() {\n    this.fromData(Time.epochTime);\n    this.zone = Timezone.utcTimezone;\n  }\n\n  /**\n   * Reset the time instance to the given date/time values.\n   *\n   * @param {Number} year             The year to set\n   * @param {Number} month            The month to set\n   * @param {Number} day              The day to set\n   * @param {Number} hour             The hour to set\n   * @param {Number} minute           The minute to set\n   * @param {Number} second           The second to set\n   * @param {Timezone} timezone       The timezone to set\n   */\n  resetTo(year, month, day, hour, minute, second, timezone) {\n    this.fromData({\n      year: year,\n      month: month,\n      day: day,\n      hour: hour,\n      minute: minute,\n      second: second,\n      zone: timezone\n    });\n  }\n\n  /**\n   * Set up the current instance from the Javascript date value.\n   *\n   * @param {?Date} aDate             The Javascript Date to read, or null to reset\n   * @param {Boolean} [useUTC=false]  If true, the UTC values of the date will be used\n   */\n  fromJSDate(aDate, useUTC) {\n    if (!aDate) {\n      this.reset();\n    } else {\n      if (useUTC) {\n        this.zone = Timezone.utcTimezone;\n        this.year = aDate.getUTCFullYear();\n        this.month = aDate.getUTCMonth() + 1;\n        this.day = aDate.getUTCDate();\n        this.hour = aDate.getUTCHours();\n        this.minute = aDate.getUTCMinutes();\n        this.second = aDate.getUTCSeconds();\n      } else {\n        this.zone = Timezone.localTimezone;\n        this.year = aDate.getFullYear();\n        this.month = aDate.getMonth() + 1;\n        this.day = aDate.getDate();\n        this.hour = aDate.getHours();\n        this.minute = aDate.getMinutes();\n        this.second = aDate.getSeconds();\n      }\n    }\n    this._cachedUnixTime = null;\n    return this;\n  }\n\n  /**\n   * Sets up the current instance using members from the passed data object.\n   *\n   * @param {timeInit} aData          Time initialization\n   * @param {Timezone=} aZone         Timezone this position occurs in\n   */\n  fromData(aData, aZone) {\n    if (aData) {\n      for (let [key, value] of Object.entries(aData)) {\n          // ical type cannot be set\n          if (key === 'icaltype') continue;\n        this[key] = value;\n      }\n    }\n\n    if (aZone) {\n      this.zone = aZone;\n    }\n\n    if (aData && !(\"isDate\" in aData)) {\n      this.isDate = !(\"hour\" in aData);\n    } else if (aData && (\"isDate\" in aData)) {\n      this.isDate = aData.isDate;\n    }\n\n    if (aData && \"timezone\" in aData) {\n      let zone = TimezoneService.get(\n        aData.timezone\n      );\n\n      this.zone = zone || Timezone.localTimezone;\n    }\n\n    if (aData && \"zone\" in aData) {\n      this.zone = aData.zone;\n    }\n\n    if (!this.zone) {\n      this.zone = Timezone.localTimezone;\n    }\n\n    this._cachedUnixTime = null;\n    return this;\n  }\n\n  /**\n   * Calculate the day of week.\n   * @param {weekDay=} aWeekStart\n   *        The week start weekday, defaults to SUNDAY\n   * @return {weekDay}\n   */\n  dayOfWeek(aWeekStart) {\n    let firstDow = aWeekStart || Time.SUNDAY;\n    let dowCacheKey = (this.year << 12) + (this.month << 8) + (this.day << 3) + firstDow;\n    if (dowCacheKey in Time._dowCache) {\n      return Time._dowCache[dowCacheKey];\n    }\n\n    // Using Zeller's algorithm\n    let q = this.day;\n    let m = this.month + (this.month < 3 ? 12 : 0);\n    let Y = this.year - (this.month < 3 ? 1 : 0);\n\n    let h = (q + Y + trunc(((m + 1) * 26) / 10) + trunc(Y / 4));\n    { // eslint-disable-line no-constant-condition\n      h += trunc(Y / 100) * 6 + trunc(Y / 400);\n    }\n\n    // Normalize to 1 = wkst\n    h = ((h + 7 - firstDow) % 7) + 1;\n    Time._dowCache[dowCacheKey] = h;\n    return h;\n  }\n\n  /**\n   * Calculate the day of year.\n   * @return {Number}\n   */\n  dayOfYear() {\n    let is_leap = (Time.isLeapYear(this.year) ? 1 : 0);\n    let diypm = Time.daysInYearPassedMonth;\n    return diypm[is_leap][this.month - 1] + this.day;\n  }\n\n  /**\n   * Returns a copy of the current date/time, rewound to the start of the\n   * week. The resulting ICAL.Time instance is of icaltype date, even if this\n   * is a date-time.\n   *\n   * @param {weekDay=} aWeekStart\n   *        The week start weekday, defaults to SUNDAY\n   * @return {Time}      The start of the week (cloned)\n   */\n  startOfWeek(aWeekStart) {\n    let firstDow = aWeekStart || Time.SUNDAY;\n    let result = this.clone();\n    result.day -= ((this.dayOfWeek() + 7 - firstDow) % 7);\n    result.isDate = true;\n    result.hour = 0;\n    result.minute = 0;\n    result.second = 0;\n    return result;\n  }\n\n  /**\n   * Returns a copy of the current date/time, shifted to the end of the week.\n   * The resulting ICAL.Time instance is of icaltype date, even if this is a\n   * date-time.\n   *\n   * @param {weekDay=} aWeekStart\n   *        The week start weekday, defaults to SUNDAY\n   * @return {Time}      The end of the week (cloned)\n   */\n  endOfWeek(aWeekStart) {\n    let firstDow = aWeekStart || Time.SUNDAY;\n    let result = this.clone();\n    result.day += (7 - this.dayOfWeek() + firstDow - Time.SUNDAY) % 7;\n    result.isDate = true;\n    result.hour = 0;\n    result.minute = 0;\n    result.second = 0;\n    return result;\n  }\n\n  /**\n   * Returns a copy of the current date/time, rewound to the start of the\n   * month. The resulting ICAL.Time instance is of icaltype date, even if\n   * this is a date-time.\n   *\n   * @return {Time}      The start of the month (cloned)\n   */\n  startOfMonth() {\n    let result = this.clone();\n    result.day = 1;\n    result.isDate = true;\n    result.hour = 0;\n    result.minute = 0;\n    result.second = 0;\n    return result;\n  }\n\n  /**\n   * Returns a copy of the current date/time, shifted to the end of the\n   * month.  The resulting ICAL.Time instance is of icaltype date, even if\n   * this is a date-time.\n   *\n   * @return {Time}      The end of the month (cloned)\n   */\n  endOfMonth() {\n    let result = this.clone();\n    result.day = Time.daysInMonth(result.month, result.year);\n    result.isDate = true;\n    result.hour = 0;\n    result.minute = 0;\n    result.second = 0;\n    return result;\n  }\n\n  /**\n   * Returns a copy of the current date/time, rewound to the start of the\n   * year. The resulting ICAL.Time instance is of icaltype date, even if\n   * this is a date-time.\n   *\n   * @return {Time}      The start of the year (cloned)\n   */\n  startOfYear() {\n    let result = this.clone();\n    result.day = 1;\n    result.month = 1;\n    result.isDate = true;\n    result.hour = 0;\n    result.minute = 0;\n    result.second = 0;\n    return result;\n  }\n\n  /**\n   * Returns a copy of the current date/time, shifted to the end of the\n   * year.  The resulting ICAL.Time instance is of icaltype date, even if\n   * this is a date-time.\n   *\n   * @return {Time}      The end of the year (cloned)\n   */\n  endOfYear() {\n    let result = this.clone();\n    result.day = 31;\n    result.month = 12;\n    result.isDate = true;\n    result.hour = 0;\n    result.minute = 0;\n    result.second = 0;\n    return result;\n  }\n\n  /**\n   * First calculates the start of the week, then returns the day of year for\n   * this date. If the day falls into the previous year, the day is zero or negative.\n   *\n   * @param {weekDay=} aFirstDayOfWeek\n   *        The week start weekday, defaults to SUNDAY\n   * @return {Number}     The calculated day of year\n   */\n  startDoyWeek(aFirstDayOfWeek) {\n    let firstDow = aFirstDayOfWeek || Time.SUNDAY;\n    let delta = this.dayOfWeek() - firstDow;\n    if (delta < 0) delta += 7;\n    return this.dayOfYear() - delta;\n  }\n\n  /**\n   * Get the dominical letter for the current year. Letters range from A - G\n   * for common years, and AG to GF for leap years.\n   *\n   * @param {Number} yr           The year to retrieve the letter for\n   * @return {String}             The dominical letter.\n   */\n  getDominicalLetter() {\n    return Time.getDominicalLetter(this.year);\n  }\n\n  /**\n   * Finds the nthWeekDay relative to the current month (not day).  The\n   * returned value is a day relative the month that this month belongs to so\n   * 1 would indicate the first of the month and 40 would indicate a day in\n   * the following month.\n   *\n   * @param {Number} aDayOfWeek   Day of the week see the day name constants\n   * @param {Number} aPos         Nth occurrence of a given week day values\n   *        of 1 and 0 both indicate the first weekday of that type. aPos may\n   *        be either positive or negative\n   *\n   * @return {Number} numeric value indicating a day relative\n   *                   to the current month of this time object\n   */\n  nthWeekDay(aDayOfWeek, aPos) {\n    let daysInMonth = Time.daysInMonth(this.month, this.year);\n    let weekday;\n    let pos = aPos;\n\n    let start = 0;\n\n    let otherDay = this.clone();\n\n    if (pos >= 0) {\n      otherDay.day = 1;\n\n      // because 0 means no position has been given\n      // 1 and 0 indicate the same day.\n      if (pos != 0) {\n        // remove the extra numeric value\n        pos--;\n      }\n\n      // set current start offset to current day.\n      start = otherDay.day;\n\n      // find the current day of week\n      let startDow = otherDay.dayOfWeek();\n\n      // calculate the difference between current\n      // day of the week and desired day of the week\n      let offset = aDayOfWeek - startDow;\n\n\n      // if the offset goes into the past\n      // week we add 7 so it goes into the next\n      // week. We only want to go forward in time here.\n      if (offset < 0)\n        // this is really important otherwise we would\n        // end up with dates from in the past.\n        offset += 7;\n\n      // add offset to start so start is the same\n      // day of the week as the desired day of week.\n      start += offset;\n\n      // because we are going to add (and multiply)\n      // the numeric value of the day we subtract it\n      // from the start position so not to add it twice.\n      start -= aDayOfWeek;\n\n      // set week day\n      weekday = aDayOfWeek;\n    } else {\n\n      // then we set it to the last day in the current month\n      otherDay.day = daysInMonth;\n\n      // find the ends weekday\n      let endDow = otherDay.dayOfWeek();\n\n      pos++;\n\n      weekday = (endDow - aDayOfWeek);\n\n      if (weekday < 0) {\n        weekday += 7;\n      }\n\n      weekday = daysInMonth - weekday;\n    }\n\n    weekday += pos * 7;\n\n    return start + weekday;\n  }\n\n  /**\n   * Checks if current time is the nth weekday, relative to the current\n   * month.  Will always return false when rule resolves outside of current\n   * month.\n   *\n   * @param {weekDay} aDayOfWeek                 Day of week to check\n   * @param {Number} aPos                        Relative position\n   * @return {Boolean}                           True, if it is the nth weekday\n   */\n  isNthWeekDay(aDayOfWeek, aPos) {\n    let dow = this.dayOfWeek();\n\n    if (aPos === 0 && dow === aDayOfWeek) {\n      return true;\n    }\n\n    // get pos\n    let day = this.nthWeekDay(aDayOfWeek, aPos);\n\n    if (day === this.day) {\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Calculates the ISO 8601 week number. The first week of a year is the\n   * week that contains the first Thursday. The year can have 53 weeks, if\n   * January 1st is a Friday.\n   *\n   * Note there are regions where the first week of the year is the one that\n   * starts on January 1st, which may offset the week number. Also, if a\n   * different week start is specified, this will also affect the week\n   * number.\n   *\n   * @see Time.weekOneStarts\n   * @param {weekDay} aWeekStart                  The weekday the week starts with\n   * @return {Number}                             The ISO week number\n   */\n  weekNumber(aWeekStart) {\n    let wnCacheKey = (this.year << 12) + (this.month << 8) + (this.day << 3) + aWeekStart;\n    if (wnCacheKey in Time._wnCache) {\n      return Time._wnCache[wnCacheKey];\n    }\n    // This function courtesty of Julian Bucknall, published under the MIT license\n    // http://www.boyet.com/articles/publishedarticles/calculatingtheisoweeknumb.html\n    // plus some fixes to be able to use different week starts.\n    let week1;\n\n    let dt = this.clone();\n    dt.isDate = true;\n    let isoyear = this.year;\n\n    if (dt.month == 12 && dt.day > 25) {\n      week1 = Time.weekOneStarts(isoyear + 1, aWeekStart);\n      if (dt.compare(week1) < 0) {\n        week1 = Time.weekOneStarts(isoyear, aWeekStart);\n      } else {\n        isoyear++;\n      }\n    } else {\n      week1 = Time.weekOneStarts(isoyear, aWeekStart);\n      if (dt.compare(week1) < 0) {\n        week1 = Time.weekOneStarts(--isoyear, aWeekStart);\n      }\n    }\n\n    let daysBetween = (dt.subtractDate(week1).toSeconds() / 86400);\n    let answer = trunc(daysBetween / 7) + 1;\n    Time._wnCache[wnCacheKey] = answer;\n    return answer;\n  }\n\n  /**\n   * Adds the duration to the current time. The instance is modified in\n   * place.\n   *\n   * @param {Duration} aDuration         The duration to add\n   */\n  addDuration(aDuration) {\n    let mult = (aDuration.isNegative ? -1 : 1);\n\n    // because of the duration optimizations it is much\n    // more efficient to grab all the values up front\n    // then set them directly (which will avoid a normalization call).\n    // So we don't actually normalize until we need it.\n    let second = this.second;\n    let minute = this.minute;\n    let hour = this.hour;\n    let day = this.day;\n\n    second += mult * aDuration.seconds;\n    minute += mult * aDuration.minutes;\n    hour += mult * aDuration.hours;\n    day += mult * aDuration.days;\n    day += mult * 7 * aDuration.weeks;\n\n    this.second = second;\n    this.minute = minute;\n    this.hour = hour;\n    this.day = day;\n\n    this._cachedUnixTime = null;\n  }\n\n  /**\n   * Subtract the date details (_excluding_ timezone).  Useful for finding\n   * the relative difference between two time objects excluding their\n   * timezone differences.\n   *\n   * @param {Time} aDate     The date to subtract\n   * @return {Duration}      The difference as a duration\n   */\n  subtractDate(aDate) {\n    let unixTime = this.toUnixTime() + this.utcOffset();\n    let other = aDate.toUnixTime() + aDate.utcOffset();\n    return Duration.fromSeconds(unixTime - other);\n  }\n\n  /**\n   * Subtract the date details, taking timezones into account.\n   *\n   * @param {Time} aDate  The date to subtract\n   * @return {Duration}   The difference in duration\n   */\n  subtractDateTz(aDate) {\n    let unixTime = this.toUnixTime();\n    let other = aDate.toUnixTime();\n    return Duration.fromSeconds(unixTime - other);\n  }\n\n  /**\n   * Compares the ICAL.Time instance with another one, or a period.\n   *\n   * @param {ICAL.Time|ICAL.Period} aOther        The instance to compare with\n   * @return {Number}                             -1, 0 or 1 for less/equal/greater\n   */\n  compare(other) {\n    if (other instanceof Period) {\n      return -1 * other.compare(this);\n    } else {\n      let a = this.toUnixTime();\n      let b = other.toUnixTime();\n\n      if (a > b) return 1;\n      if (b > a) return -1;\n      return 0;\n    }\n  }\n\n  /**\n   * Compares only the date part of this instance with another one.\n   *\n   * @param {Time} other                  The instance to compare with\n   * @param {Timezone} tz                 The timezone to compare in\n   * @return {Number}                     -1, 0 or 1 for less/equal/greater\n   */\n  compareDateOnlyTz(other, tz) {\n    let a = this.convertToZone(tz);\n    let b = other.convertToZone(tz);\n    let rc = 0;\n\n    if ((rc = Time._cmp_attr(a, b, \"year\")) != 0) return rc;\n    if ((rc = Time._cmp_attr(a, b, \"month\")) != 0) return rc;\n    if ((rc = Time._cmp_attr(a, b, \"day\")) != 0) return rc;\n\n    return rc;\n  }\n\n  /**\n   * Convert the instance into another timezone. The returned ICAL.Time\n   * instance is always a copy.\n   *\n   * @param {Timezone} zone      The zone to convert to\n   * @return {Time}              The copy, converted to the zone\n   */\n  convertToZone(zone) {\n    let copy = this.clone();\n    let zone_equals = (this.zone.tzid == zone.tzid);\n\n    if (!this.isDate && !zone_equals) {\n      Timezone.convert_time(copy, this.zone, zone);\n    }\n\n    copy.zone = zone;\n    return copy;\n  }\n\n  /**\n   * Calculates the UTC offset of the current date/time in the timezone it is\n   * in.\n   *\n   * @return {Number}     UTC offset in seconds\n   */\n  utcOffset() {\n    if (this.zone == Timezone.localTimezone ||\n        this.zone == Timezone.utcTimezone) {\n      return 0;\n    } else {\n      return this.zone.utcOffset(this);\n    }\n  }\n\n  /**\n   * Returns an RFC 5545 compliant ical representation of this object.\n   *\n   * @return {String} ical date/date-time\n   */\n  toICALString() {\n    let string = this.toString();\n\n    if (string.length > 10) {\n      return design.icalendar.value['date-time'].toICAL(string);\n    } else {\n      return design.icalendar.value.date.toICAL(string);\n    }\n  }\n\n  /**\n   * The string representation of this date/time, in jCal form\n   * (including : and - separators).\n   * @return {String}\n   */\n  toString() {\n    let result = this.year + '-' +\n                 pad2(this.month) + '-' +\n                 pad2(this.day);\n\n    if (!this.isDate) {\n        result += 'T' + pad2(this.hour) + ':' +\n                  pad2(this.minute) + ':' +\n                  pad2(this.second);\n\n      if (this.zone === Timezone.utcTimezone) {\n        result += 'Z';\n      }\n    }\n\n    return result;\n  }\n\n  /**\n   * Converts the current instance to a Javascript date\n   * @return {Date}\n   */\n  toJSDate() {\n    if (this.zone == Timezone.localTimezone) {\n      if (this.isDate) {\n        return new Date(this.year, this.month - 1, this.day);\n      } else {\n        return new Date(this.year, this.month - 1, this.day,\n                        this.hour, this.minute, this.second, 0);\n      }\n    } else {\n      return new Date(this.toUnixTime() * 1000);\n    }\n  }\n\n  _normalize() {\n    if (this._time.isDate) {\n      this._time.hour = 0;\n      this._time.minute = 0;\n      this._time.second = 0;\n    }\n    this.adjust(0, 0, 0, 0);\n\n    return this;\n  }\n\n  /**\n   * Adjust the date/time by the given offset\n   *\n   * @param {Number} aExtraDays       The extra amount of days\n   * @param {Number} aExtraHours      The extra amount of hours\n   * @param {Number} aExtraMinutes    The extra amount of minutes\n   * @param {Number} aExtraSeconds    The extra amount of seconds\n   * @param {Number=} aTime           The time to adjust, defaults to the\n   *                                    current instance.\n   */\n  adjust(aExtraDays, aExtraHours, aExtraMinutes, aExtraSeconds, aTime) {\n\n    let minutesOverflow, hoursOverflow,\n        daysOverflow = 0, yearsOverflow = 0;\n\n    let second, minute, hour, day;\n    let daysInMonth;\n\n    let time = aTime || this._time;\n\n    if (!time.isDate) {\n      second = time.second + aExtraSeconds;\n      time.second = second % 60;\n      minutesOverflow = trunc(second / 60);\n      if (time.second < 0) {\n        time.second += 60;\n        minutesOverflow--;\n      }\n\n      minute = time.minute + aExtraMinutes + minutesOverflow;\n      time.minute = minute % 60;\n      hoursOverflow = trunc(minute / 60);\n      if (time.minute < 0) {\n        time.minute += 60;\n        hoursOverflow--;\n      }\n\n      hour = time.hour + aExtraHours + hoursOverflow;\n\n      time.hour = hour % 24;\n      daysOverflow = trunc(hour / 24);\n      if (time.hour < 0) {\n        time.hour += 24;\n        daysOverflow--;\n      }\n    }\n\n\n    // Adjust month and year first, because we need to know what month the day\n    // is in before adjusting it.\n    if (time.month > 12) {\n      yearsOverflow = trunc((time.month - 1) / 12);\n    } else if (time.month < 1) {\n      yearsOverflow = trunc(time.month / 12) - 1;\n    }\n\n    time.year += yearsOverflow;\n    time.month -= 12 * yearsOverflow;\n\n    // Now take care of the days (and adjust month if needed)\n    day = time.day + aExtraDays + daysOverflow;\n\n    if (day > 0) {\n      for (;;) {\n        daysInMonth = Time.daysInMonth(time.month, time.year);\n        if (day <= daysInMonth) {\n          break;\n        }\n\n        time.month++;\n        if (time.month > 12) {\n          time.year++;\n          time.month = 1;\n        }\n\n        day -= daysInMonth;\n      }\n    } else {\n      while (day <= 0) {\n        if (time.month == 1) {\n          time.year--;\n          time.month = 12;\n        } else {\n          time.month--;\n        }\n\n        day += Time.daysInMonth(time.month, time.year);\n      }\n    }\n\n    time.day = day;\n\n    this._cachedUnixTime = null;\n    return this;\n  }\n\n  /**\n   * Sets up the current instance from unix time, the number of seconds since\n   * January 1st, 1970.\n   *\n   * @param {Number} seconds      The seconds to set up with\n   */\n  fromUnixTime(seconds) {\n    this.zone = Timezone.utcTimezone;\n    // We could use `fromJSDate` here, but this is about twice as fast.\n    // We could also clone `epochTime` and use `adjust` for a more\n    // ical.js-centric approach, but this is about 100 times as fast.\n    let date = new Date(seconds * 1000);\n    this.year = date.getUTCFullYear();\n    this.month = date.getUTCMonth() + 1;\n    this.day = date.getUTCDate();\n    if (this._time.isDate) {\n      this.hour = 0;\n      this.minute = 0;\n      this.second = 0;\n    } else {\n      this.hour = date.getUTCHours();\n      this.minute = date.getUTCMinutes();\n      this.second = date.getUTCSeconds();\n    }\n\n    this._cachedUnixTime = null;\n  }\n\n  /**\n   * Converts the current instance to seconds since January 1st 1970.\n   *\n   * @return {Number}         Seconds since 1970\n   */\n  toUnixTime() {\n    if (this._cachedUnixTime !== null) {\n      return this._cachedUnixTime;\n    }\n    let offset = this.utcOffset();\n\n    // we use the offset trick to ensure\n    // that we are getting the actual UTC time\n    let ms = Date.UTC(\n      this.year,\n      this.month - 1,\n      this.day,\n      this.hour,\n      this.minute,\n      this.second - offset\n    );\n\n    // seconds\n    this._cachedUnixTime = ms / 1000;\n    return this._cachedUnixTime;\n  }\n\n  /**\n   * Converts time to into Object which can be serialized then re-created\n   * using the constructor.\n   *\n   * @example\n   * // toJSON will automatically be called\n   * var json = JSON.stringify(mytime);\n   *\n   * var deserialized = JSON.parse(json);\n   *\n   * var time = new ICAL.Time(deserialized);\n   *\n   * @return {Object}\n   */\n  toJSON() {\n    let copy = [\n      'year',\n      'month',\n      'day',\n      'hour',\n      'minute',\n      'second',\n      'isDate'\n    ];\n\n    let result = Object.create(null);\n\n    let i = 0;\n    let len = copy.length;\n    let prop;\n\n    for (; i < len; i++) {\n      prop = copy[i];\n      result[prop] = this[prop];\n    }\n\n    if (this.zone) {\n      result.timezone = this.zone.tzid;\n    }\n\n    return result;\n  }\n}\n\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch */\n\n\n/**\n * This lets typescript resolve our custom types in the\n * generated d.ts files (jsdoc typedefs are converted to typescript types).\n * Ignore prevents the typedefs from being documented more than once.\n *\n * @ignore\n * @typedef {import(\"./types.js\").parserState} parserState\n * Imports the 'parserState' type from the \"types.js\" module\n * @typedef {import(\"./types.js\").designSet} designSet\n * Imports the 'designSet' type from the \"types.js\" module\n */\n\nconst CHAR = /[^ \\t]/;\nconst VALUE_DELIMITER = ':';\nconst PARAM_DELIMITER = ';';\nconst PARAM_NAME_DELIMITER = '=';\nconst DEFAULT_VALUE_TYPE$1 = 'unknown';\nconst DEFAULT_PARAM_TYPE = 'text';\nconst RFC6868_REPLACE_MAP$1 = { \"^'\": '\"', \"^n\": \"\\n\", \"^^\": \"^\" };\n\n/**\n * Parses iCalendar or vCard data into a raw jCal object. Consult\n * documentation on the {@tutorial layers|layers of parsing} for more\n * details.\n *\n * @function ICAL.parse\n * @memberof ICAL\n * @variation function\n * @todo Fix the API to be more clear on the return type\n * @param {String} input      The string data to parse\n * @return {Object|Object[]}  A single jCal object, or an array thereof\n */\nfunction parse(input) {\n  let state = {};\n  let root = state.component = [];\n\n  state.stack = [root];\n\n  parse._eachLine(input, function(err, line) {\n    parse._handleContentLine(line, state);\n  });\n\n\n  // when there are still items on the stack\n  // throw a fatal error, a component was not closed\n  // correctly in that case.\n  if (state.stack.length > 1) {\n    throw new ParserError(\n      'invalid ical body. component began but did not end'\n    );\n  }\n\n  state = null;\n\n  return (root.length == 1 ? root[0] : root);\n}\n\n/**\n * Parse an iCalendar property value into the jCal for a single property\n *\n * @function ICAL.parse.property\n * @param {String} str\n *   The iCalendar property string to parse\n * @param {designSet=} designSet\n *   The design data to use for this property\n * @return {Object}\n *   The jCal Object containing the property\n */\nparse.property = function(str, designSet) {\n  let state = {\n    component: [[], []],\n    designSet: designSet || design.defaultSet\n  };\n  parse._handleContentLine(str, state);\n  return state.component[1][0];\n};\n\n/**\n * Convenience method to parse a component. You can use ICAL.parse() directly\n * instead.\n *\n * @function ICAL.parse.component\n * @see ICAL.parse(function)\n * @param {String} str    The iCalendar component string to parse\n * @return {Object}       The jCal Object containing the component\n */\nparse.component = function(str) {\n  return parse(str);\n};\n\n\n/**\n * An error that occurred during parsing.\n *\n * @param {String} message        The error message\n * @memberof ICAL.parse\n * @extends {Error}\n */\nclass ParserError extends Error {\n  name = this.constructor.name;\n}\n\n// classes & constants\nparse.ParserError = ParserError;\n\n\n/**\n * Handles a single line of iCalendar/vCard, updating the state.\n *\n * @private\n * @function ICAL.parse._handleContentLine\n * @param {String} line          The content line to process\n * @param {parserState} state    The current state of the line parsing\n */\nparse._handleContentLine = function(line, state) {\n  // break up the parts of the line\n  let valuePos = line.indexOf(VALUE_DELIMITER);\n  let paramPos = line.indexOf(PARAM_DELIMITER);\n\n  let lastParamIndex;\n  let lastValuePos;\n\n  // name of property or begin/end\n  let name;\n  let value;\n  // params is only overridden if paramPos !== -1.\n  // we can't do params = params || {} later on\n  // because it sacrifices ops.\n  let params = {};\n\n  /**\n   * Different property cases\n   *\n   *\n   * 1. RRULE:FREQ=foo\n   *    // FREQ= is not a param but the value\n   *\n   * 2. ATTENDEE;ROLE=REQ-PARTICIPANT;\n   *    // ROLE= is a param because : has not happened yet\n   */\n    // when the parameter delimiter is after the\n    // value delimiter then it is not a parameter.\n\n  if ((paramPos !== -1 && valuePos !== -1)) {\n    // when the parameter delimiter is after the\n    // value delimiter then it is not a parameter.\n    if (paramPos > valuePos) {\n      paramPos = -1;\n    }\n  }\n\n  let parsedParams;\n  if (paramPos !== -1) {\n    name = line.slice(0, Math.max(0, paramPos)).toLowerCase();\n    parsedParams = parse._parseParameters(line.slice(Math.max(0, paramPos)), 0, state.designSet);\n    if (parsedParams[2] == -1) {\n      throw new ParserError(\"Invalid parameters in '\" + line + \"'\");\n    }\n    params = parsedParams[0];\n    // Handle parameter values with multiple entries\n    let parsedParamLength;\n    if (typeof parsedParams[1] === 'string') {\n      parsedParamLength = parsedParams[1].length;\n    } else {\n      parsedParamLength = parsedParams[1].reduce((accumulator, currentValue) => {\n        return accumulator + currentValue.length;\n      }, 0);\n    }\n    lastParamIndex = parsedParamLength + parsedParams[2] + paramPos;\n    if ((lastValuePos =\n      line.slice(Math.max(0, lastParamIndex)).indexOf(VALUE_DELIMITER)) !== -1) {\n      value = line.slice(Math.max(0, lastParamIndex + lastValuePos + 1));\n    } else {\n      throw new ParserError(\"Missing parameter value in '\" + line + \"'\");\n    }\n  } else if (valuePos !== -1) {\n    // without parmeters (BEGIN:VCAENDAR, CLASS:PUBLIC)\n    name = line.slice(0, Math.max(0, valuePos)).toLowerCase();\n    value = line.slice(Math.max(0, valuePos + 1));\n\n    if (name === 'begin') {\n      let newComponent = [value.toLowerCase(), [], []];\n      if (state.stack.length === 1) {\n        state.component.push(newComponent);\n      } else {\n        state.component[2].push(newComponent);\n      }\n      state.stack.push(state.component);\n      state.component = newComponent;\n      if (!state.designSet) {\n        state.designSet = design.getDesignSet(state.component[0]);\n      }\n      return;\n    } else if (name === 'end') {\n      state.component = state.stack.pop();\n      return;\n    }\n    // If it is not begin/end, then this is a property with an empty value,\n    // which should be considered valid.\n  } else {\n    /**\n     * Invalid line.\n     * The rational to throw an error is we will\n     * never be certain that the rest of the file\n     * is sane and it is unlikely that we can serialize\n     * the result correctly either.\n     */\n    throw new ParserError(\n      'invalid line (no token \";\" or \":\") \"' + line + '\"'\n    );\n  }\n\n  let valueType;\n  let multiValue = false;\n  let structuredValue = false;\n  let propertyDetails;\n  let splitName;\n  let ungroupedName;\n\n  // fetch the ungrouped part of the name\n  if (state.designSet.propertyGroups && name.indexOf('.') !== -1) {\n    splitName = name.split('.');\n    params.group = splitName[0];\n    ungroupedName = splitName[1];\n  } else {\n    ungroupedName = name;\n  }\n\n  if (ungroupedName in state.designSet.property) {\n    propertyDetails = state.designSet.property[ungroupedName];\n\n    if ('multiValue' in propertyDetails) {\n      multiValue = propertyDetails.multiValue;\n    }\n\n    if ('structuredValue' in propertyDetails) {\n      structuredValue = propertyDetails.structuredValue;\n    }\n\n    if (value && 'detectType' in propertyDetails) {\n      valueType = propertyDetails.detectType(value);\n    }\n  }\n\n  // attempt to determine value\n  if (!valueType) {\n    if (!('value' in params)) {\n      if (propertyDetails) {\n        valueType = propertyDetails.defaultType;\n      } else {\n        valueType = DEFAULT_VALUE_TYPE$1;\n      }\n    } else {\n      // possible to avoid this?\n      valueType = params.value.toLowerCase();\n    }\n  }\n\n  delete params.value;\n\n  /**\n   * Note on `var result` juggling:\n   *\n   * I observed that building the array in pieces has adverse\n   * effects on performance, so where possible we inline the creation.\n   * It is a little ugly but resulted in ~2000 additional ops/sec.\n   */\n\n  let result;\n  if (multiValue && structuredValue) {\n    value = parse._parseMultiValue(value, structuredValue, valueType, [], multiValue, state.designSet, structuredValue);\n    result = [ungroupedName, params, valueType, value];\n  } else if (multiValue) {\n    result = [ungroupedName, params, valueType];\n    parse._parseMultiValue(value, multiValue, valueType, result, null, state.designSet, false);\n  } else if (structuredValue) {\n    value = parse._parseMultiValue(value, structuredValue, valueType, [], null, state.designSet, structuredValue);\n    result = [ungroupedName, params, valueType, value];\n  } else {\n    value = parse._parseValue(value, valueType, state.designSet, false);\n    result = [ungroupedName, params, valueType, value];\n  }\n  // rfc6350 requires that in vCard 4.0 the first component is the VERSION\n  // component with as value 4.0, note that 3.0 does not have this requirement.\n  if (state.component[0] === 'vcard' && state.component[1].length === 0 &&\n          !(name === 'version' && value === '4.0')) {\n    state.designSet = design.getDesignSet(\"vcard3\");\n  }\n  state.component[1].push(result);\n};\n\n/**\n * Parse a value from the raw value into the jCard/jCal value.\n *\n * @private\n * @function ICAL.parse._parseValue\n * @param {String} value          Original value\n * @param {String} type           Type of value\n * @param {Object} designSet      The design data to use for this value\n * @return {Object} varies on type\n */\nparse._parseValue = function(value, type, designSet, structuredValue) {\n  if (type in designSet.value && 'fromICAL' in designSet.value[type]) {\n    return designSet.value[type].fromICAL(value, structuredValue);\n  }\n  return value;\n};\n\n/**\n * Parse parameters from a string to object.\n *\n * @function ICAL.parse._parseParameters\n * @private\n * @param {String} line               A single unfolded line\n * @param {Number} start              Position to start looking for properties\n * @param {Object} designSet          The design data to use for this property\n * @return {Array}                    Array containing key/valye pairs of parsed parameters, the\n *                                      parsed value, and the position of the last parameter found\n */\nparse._parseParameters = function(line, start, designSet) {\n  let lastParam = start;\n  let pos = 0;\n  let delim = PARAM_NAME_DELIMITER;\n  let result = {};\n  let name, lcname;\n  let value, valuePos = -1;\n  let type, multiValue, mvdelim;\n\n  // find the next '=' sign\n  // use lastParam and pos to find name\n  // check if \" is used if so get value from \"->\"\n  // then increment pos to find next ;\n\n  while ((pos !== false) &&\n         (pos = line.indexOf(delim, pos + 1)) !== -1) {\n\n    name = line.slice(lastParam + 1, pos);\n    if (name.length == 0) {\n      throw new ParserError(\"Empty parameter name in '\" + line + \"'\");\n    }\n    lcname = name.toLowerCase();\n    mvdelim = false;\n    multiValue = false;\n\n    if (lcname in designSet.param && designSet.param[lcname].valueType) {\n      type = designSet.param[lcname].valueType;\n    } else {\n      type = DEFAULT_PARAM_TYPE;\n    }\n\n    if (lcname in designSet.param) {\n      multiValue = designSet.param[lcname].multiValue;\n      if (designSet.param[lcname].multiValueSeparateDQuote) {\n        mvdelim = parse._rfc6868Escape('\"' + multiValue + '\"');\n      }\n    }\n\n    let nextChar = line[pos + 1];\n    if (nextChar === '\"') {\n      valuePos = pos + 2;\n      pos = line.indexOf('\"', valuePos);\n      if (multiValue && pos != -1) {\n          let extendedValue = true;\n          while (extendedValue) {\n            if (line[pos + 1] == multiValue && line[pos + 2] == '\"') {\n              pos = line.indexOf('\"', pos + 3);\n            } else {\n              extendedValue = false;\n            }\n          }\n        }\n      if (pos === -1) {\n        throw new ParserError(\n          'invalid line (no matching double quote) \"' + line + '\"'\n        );\n      }\n      value = line.slice(valuePos, pos);\n      lastParam = line.indexOf(PARAM_DELIMITER, pos);\n      let propValuePos = line.indexOf(VALUE_DELIMITER, pos);\n      // if either no next parameter or delimeter in property value, let's stop here\n      if (lastParam === -1 || (propValuePos !== -1 && lastParam > propValuePos)) {\n        pos = false;\n      }\n    } else {\n      valuePos = pos + 1;\n\n      // move to next \";\"\n      let nextPos = line.indexOf(PARAM_DELIMITER, valuePos);\n      let propValuePos = line.indexOf(VALUE_DELIMITER, valuePos);\n      if (propValuePos !== -1 && nextPos > propValuePos) {\n        // this is a delimiter in the property value, let's stop here\n        nextPos = propValuePos;\n        pos = false;\n      } else if (nextPos === -1) {\n        // no \";\"\n        if (propValuePos === -1) {\n          nextPos = line.length;\n        } else {\n          nextPos = propValuePos;\n        }\n        pos = false;\n      } else {\n        lastParam = nextPos;\n        pos = nextPos;\n      }\n\n      value = line.slice(valuePos, nextPos);\n    }\n\n    const length_before = value.length;\n    value = parse._rfc6868Escape(value);\n    valuePos += length_before - value.length;\n    if (multiValue) {\n      let delimiter = mvdelim || multiValue;\n      value = parse._parseMultiValue(value, delimiter, type, [], null, designSet);\n    } else {\n      value = parse._parseValue(value, type, designSet);\n    }\n\n    if (multiValue && (lcname in result)) {\n      if (Array.isArray(result[lcname])) {\n        result[lcname].push(value);\n      } else {\n        result[lcname] = [\n          result[lcname],\n          value\n        ];\n      }\n    } else {\n      result[lcname] = value;\n    }\n  }\n  return [result, value, valuePos];\n};\n\n/**\n * Internal helper for rfc6868. Exposing this on ICAL.parse so that\n * hackers can disable the rfc6868 parsing if the really need to.\n *\n * @function ICAL.parse._rfc6868Escape\n * @param {String} val        The value to escape\n * @return {String}           The escaped value\n */\nparse._rfc6868Escape = function(val) {\n  return val.replace(/\\^['n^]/g, function(x) {\n    return RFC6868_REPLACE_MAP$1[x];\n  });\n};\n\n/**\n * Parse a multi value string. This function is used either for parsing\n * actual multi-value property's values, or for handling parameter values. It\n * can be used for both multi-value properties and structured value properties.\n *\n * @private\n * @function ICAL.parse._parseMultiValue\n * @param {String} buffer           The buffer containing the full value\n * @param {String} delim            The multi-value delimiter\n * @param {String} type             The value type to be parsed\n * @param {Array.<?>} result        The array to append results to, varies on value type\n * @param {String} innerMulti       The inner delimiter to split each value with\n * @param {designSet} designSet     The design data for this value\n * @return {?|Array.<?>}            Either an array of results, or the first result\n */\nparse._parseMultiValue = function(buffer, delim, type, result, innerMulti, designSet, structuredValue) {\n  let pos = 0;\n  let lastPos = 0;\n  let value;\n  if (delim.length === 0) {\n    return buffer;\n  }\n\n  // split each piece\n  while ((pos = unescapedIndexOf(buffer, delim, lastPos)) !== -1) {\n    value = buffer.slice(lastPos, pos);\n    if (innerMulti) {\n      value = parse._parseMultiValue(value, innerMulti, type, [], null, designSet, structuredValue);\n    } else {\n      value = parse._parseValue(value, type, designSet, structuredValue);\n    }\n    result.push(value);\n    lastPos = pos + delim.length;\n  }\n\n  // on the last piece take the rest of string\n  value = buffer.slice(lastPos);\n  if (innerMulti) {\n    value = parse._parseMultiValue(value, innerMulti, type, [], null, designSet, structuredValue);\n  } else {\n    value = parse._parseValue(value, type, designSet, structuredValue);\n  }\n  result.push(value);\n\n  return result.length == 1 ? result[0] : result;\n};\n\n/**\n * Process a complete buffer of iCalendar/vCard data line by line, correctly\n * unfolding content. Each line will be processed with the given callback\n *\n * @private\n * @function ICAL.parse._eachLine\n * @param {String} buffer                         The buffer to process\n * @param {function(?String, String)} callback    The callback for each line\n */\nparse._eachLine = function(buffer, callback) {\n  let len = buffer.length;\n  let lastPos = buffer.search(CHAR);\n  let pos = lastPos;\n  let line;\n  let firstChar;\n\n  let newlineOffset;\n\n  do {\n    pos = buffer.indexOf('\\n', lastPos) + 1;\n\n    if (pos > 1 && buffer[pos - 2] === '\\r') {\n      newlineOffset = 2;\n    } else {\n      newlineOffset = 1;\n    }\n\n    if (pos === 0) {\n      pos = len;\n      newlineOffset = 0;\n    }\n\n    firstChar = buffer[lastPos];\n\n    if (firstChar === ' ' || firstChar === '\\t') {\n      // add to line\n      line += buffer.slice(lastPos + 1, pos - newlineOffset);\n    } else {\n      if (line)\n        callback(null, line);\n      // push line\n      line = buffer.slice(lastPos, pos - newlineOffset);\n    }\n\n    lastPos = pos;\n  } while (pos !== len);\n\n  // extra ending line\n  line = line.trim();\n\n  if (line.length)\n    callback(null, line);\n};\n\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch */\n\n\nconst OPTIONS = [\"tzid\", \"location\", \"tznames\", \"latitude\", \"longitude\"];\n\n/**\n * Timezone representation.\n *\n * @example\n * var vcalendar;\n * var timezoneComp = vcalendar.getFirstSubcomponent('vtimezone');\n * var tzid = timezoneComp.getFirstPropertyValue('tzid');\n *\n * var timezone = new ICAL.Timezone({\n *   component: timezoneComp,\n *   tzid\n * });\n *\n * @memberof ICAL\n */\nclass Timezone {\n  static _compare_change_fn(a, b) {\n    if (a.year < b.year) return -1;\n    else if (a.year > b.year) return 1;\n\n    if (a.month < b.month) return -1;\n    else if (a.month > b.month) return 1;\n\n    if (a.day < b.day) return -1;\n    else if (a.day > b.day) return 1;\n\n    if (a.hour < b.hour) return -1;\n    else if (a.hour > b.hour) return 1;\n\n    if (a.minute < b.minute) return -1;\n    else if (a.minute > b.minute) return 1;\n\n    if (a.second < b.second) return -1;\n    else if (a.second > b.second) return 1;\n\n    return 0;\n  }\n\n  /**\n   * Convert the date/time from one zone to the next.\n   *\n   * @param {Time} tt                  The time to convert\n   * @param {Timezone} from_zone       The source zone to convert from\n   * @param {Timezone} to_zone         The target zone to convert to\n   * @return {Time}                    The converted date/time object\n   */\n  static convert_time(tt, from_zone, to_zone) {\n    if (tt.isDate ||\n        from_zone.tzid == to_zone.tzid ||\n        from_zone == Timezone.localTimezone ||\n        to_zone == Timezone.localTimezone) {\n      tt.zone = to_zone;\n      return tt;\n    }\n\n    let utcOffset = from_zone.utcOffset(tt);\n    tt.adjust(0, 0, 0, - utcOffset);\n\n    utcOffset = to_zone.utcOffset(tt);\n    tt.adjust(0, 0, 0, utcOffset);\n\n    return null;\n  }\n\n  /**\n   * Creates a new ICAL.Timezone instance from the passed data object.\n   *\n   * @param {Component|Object} aData options for class\n   * @param {String|Component} aData.component\n   *        If aData is a simple object, then this member can be set to either a\n   *        string containing the component data, or an already parsed\n   *        ICAL.Component\n   * @param {String} aData.tzid      The timezone identifier\n   * @param {String} aData.location  The timezone locationw\n   * @param {String} aData.tznames   An alternative string representation of the\n   *                                  timezone\n   * @param {Number} aData.latitude  The latitude of the timezone\n   * @param {Number} aData.longitude The longitude of the timezone\n   */\n  static fromData(aData) {\n    let tt = new Timezone();\n    return tt.fromData(aData);\n  }\n\n  /**\n   * The instance describing the UTC timezone\n   * @type {Timezone}\n   * @constant\n   * @instance\n   */\n  static #utcTimezone = null;\n  static get utcTimezone() {\n    if (!this.#utcTimezone) {\n      this.#utcTimezone = Timezone.fromData({\n        tzid: \"UTC\"\n      });\n    }\n    return this.#utcTimezone;\n  }\n\n  /**\n   * The instance describing the local timezone\n   * @type {Timezone}\n   * @constant\n   * @instance\n   */\n  static #localTimezone = null;\n  static get localTimezone() {\n    if (!this.#localTimezone) {\n      this.#localTimezone = Timezone.fromData({\n        tzid: \"floating\"\n      });\n    }\n    return this.#localTimezone;\n  }\n\n  /**\n   * Adjust a timezone change object.\n   * @private\n   * @param {Object} change     The timezone change object\n   * @param {Number} days       The extra amount of days\n   * @param {Number} hours      The extra amount of hours\n   * @param {Number} minutes    The extra amount of minutes\n   * @param {Number} seconds    The extra amount of seconds\n   */\n  static adjust_change(change, days, hours, minutes, seconds) {\n    return Time.prototype.adjust.call(\n      change,\n      days,\n      hours,\n      minutes,\n      seconds,\n      change\n    );\n  }\n\n  static _minimumExpansionYear = -1;\n  static EXTRA_COVERAGE = 5;\n\n  /**\n   * Creates a new ICAL.Timezone instance, by passing in a tzid and component.\n   *\n   * @param {Component|Object} data options for class\n   * @param {String|Component} data.component\n   *        If data is a simple object, then this member can be set to either a\n   *        string containing the component data, or an already parsed\n   *        ICAL.Component\n   * @param {String} data.tzid      The timezone identifier\n   * @param {String} data.location  The timezone locationw\n   * @param {String} data.tznames   An alternative string representation of the\n   *                                  timezone\n   * @param {Number} data.latitude  The latitude of the timezone\n   * @param {Number} data.longitude The longitude of the timezone\n   */\n  constructor(data) {\n    this.wrappedJSObject = this;\n    this.fromData(data);\n  }\n\n\n  /**\n   * Timezone identifier\n   * @type {String}\n   */\n  tzid = \"\";\n\n  /**\n   * Timezone location\n   * @type {String}\n   */\n  location = \"\";\n\n  /**\n   * Alternative timezone name, for the string representation\n   * @type {String}\n   */\n  tznames = \"\";\n\n  /**\n   * The primary latitude for the timezone.\n   * @type {Number}\n   */\n  latitude = 0.0;\n\n  /**\n   * The primary longitude for the timezone.\n   * @type {Number}\n   */\n  longitude = 0.0;\n\n  /**\n   * The vtimezone component for this timezone.\n   * @type {Component}\n   */\n  component = null;\n\n  /**\n   * The year this timezone has been expanded to. All timezone transition\n   * dates until this year are known and can be used for calculation\n   *\n   * @private\n   * @type {Number}\n   */\n  expandedUntilYear = 0;\n\n  /**\n   * The class identifier.\n   * @constant\n   * @type {String}\n   * @default \"icaltimezone\"\n   */\n  icalclass = \"icaltimezone\";\n\n  /**\n   * Sets up the current instance using members from the passed data object.\n   *\n   * @param {Component|Object} aData options for class\n   * @param {String|Component} aData.component\n   *        If aData is a simple object, then this member can be set to either a\n   *        string containing the component data, or an already parsed\n   *        ICAL.Component\n   * @param {String} aData.tzid      The timezone identifier\n   * @param {String} aData.location  The timezone locationw\n   * @param {String} aData.tznames   An alternative string representation of the\n   *                                  timezone\n   * @param {Number} aData.latitude  The latitude of the timezone\n   * @param {Number} aData.longitude The longitude of the timezone\n   */\n  fromData(aData) {\n    this.expandedUntilYear = 0;\n    this.changes = [];\n\n    if (aData instanceof Component) {\n      // Either a component is passed directly\n      this.component = aData;\n    } else {\n      // Otherwise the component may be in the data object\n      if (aData && \"component\" in aData) {\n        if (typeof aData.component == \"string\") {\n          // If a string was passed, parse it as a component\n          let jCal = parse(aData.component);\n          this.component = new Component(jCal);\n        } else if (aData.component instanceof Component) {\n          // If it was a component already, then just set it\n          this.component = aData.component;\n        } else {\n          // Otherwise just null out the component\n          this.component = null;\n        }\n      }\n\n      // Copy remaining passed properties\n      for (let prop of OPTIONS) {\n        if (aData && prop in aData) {\n          this[prop] = aData[prop];\n        }\n      }\n    }\n\n    // If we have a component but no TZID, attempt to get it from the\n    // component's properties.\n    if (this.component instanceof Component && !this.tzid) {\n      this.tzid = this.component.getFirstPropertyValue('tzid');\n    }\n\n    return this;\n  }\n\n  /**\n   * Finds the utcOffset the given time would occur in this timezone.\n   *\n   * @param {Time} tt         The time to check for\n   * @return {Number}         utc offset in seconds\n   */\n  utcOffset(tt) {\n    if (this == Timezone.utcTimezone || this == Timezone.localTimezone) {\n      return 0;\n    }\n\n    this._ensureCoverage(tt.year);\n\n    if (!this.changes.length) {\n      return 0;\n    }\n\n    let tt_change = {\n      year: tt.year,\n      month: tt.month,\n      day: tt.day,\n      hour: tt.hour,\n      minute: tt.minute,\n      second: tt.second\n    };\n\n    let change_num = this._findNearbyChange(tt_change);\n    let change_num_to_use = -1;\n    let step = 1;\n\n    // TODO: replace with bin search?\n    for (;;) {\n      let change = clone(this.changes[change_num], true);\n      if (change.utcOffset < change.prevUtcOffset) {\n        Timezone.adjust_change(change, 0, 0, 0, change.utcOffset);\n      } else {\n        Timezone.adjust_change(change, 0, 0, 0,\n                                        change.prevUtcOffset);\n      }\n\n      let cmp = Timezone._compare_change_fn(tt_change, change);\n\n      if (cmp >= 0) {\n        change_num_to_use = change_num;\n      } else {\n        step = -1;\n      }\n\n      if (step == -1 && change_num_to_use != -1) {\n        break;\n      }\n\n      change_num += step;\n\n      if (change_num < 0) {\n        return 0;\n      }\n\n      if (change_num >= this.changes.length) {\n        break;\n      }\n    }\n\n    let zone_change = this.changes[change_num_to_use];\n    let utcOffset_change = zone_change.utcOffset - zone_change.prevUtcOffset;\n\n    if (utcOffset_change < 0 && change_num_to_use > 0) {\n      let tmp_change = clone(zone_change, true);\n      Timezone.adjust_change(tmp_change, 0, 0, 0, tmp_change.prevUtcOffset);\n\n      if (Timezone._compare_change_fn(tt_change, tmp_change) < 0) {\n        let prev_zone_change = this.changes[change_num_to_use - 1];\n\n        let want_daylight = false; // TODO\n\n        if (zone_change.is_daylight != want_daylight &&\n            prev_zone_change.is_daylight == want_daylight) {\n          zone_change = prev_zone_change;\n        }\n      }\n    }\n\n    // TODO return is_daylight?\n    return zone_change.utcOffset;\n  }\n\n  _findNearbyChange(change) {\n    // find the closest match\n    let idx = binsearchInsert(\n      this.changes,\n      change,\n      Timezone._compare_change_fn\n    );\n\n    if (idx >= this.changes.length) {\n      return this.changes.length - 1;\n    }\n\n    return idx;\n  }\n\n  _ensureCoverage(aYear) {\n    if (Timezone._minimumExpansionYear == -1) {\n      let today = Time.now();\n      Timezone._minimumExpansionYear = today.year;\n    }\n\n    let changesEndYear = aYear;\n    if (changesEndYear < Timezone._minimumExpansionYear) {\n      changesEndYear = Timezone._minimumExpansionYear;\n    }\n\n    changesEndYear += Timezone.EXTRA_COVERAGE;\n\n    if (!this.changes.length || this.expandedUntilYear < aYear) {\n      let subcomps = this.component.getAllSubcomponents();\n      let compLen = subcomps.length;\n      let compIdx = 0;\n\n      for (; compIdx < compLen; compIdx++) {\n        this._expandComponent(\n          subcomps[compIdx], changesEndYear, this.changes\n        );\n      }\n\n      this.changes.sort(Timezone._compare_change_fn);\n      this.expandedUntilYear = changesEndYear;\n    }\n  }\n\n  _expandComponent(aComponent, aYear, changes) {\n    if (!aComponent.hasProperty(\"dtstart\") ||\n        !aComponent.hasProperty(\"tzoffsetto\") ||\n        !aComponent.hasProperty(\"tzoffsetfrom\")) {\n      return null;\n    }\n\n    let dtstart = aComponent.getFirstProperty(\"dtstart\").getFirstValue();\n    let change;\n\n    function convert_tzoffset(offset) {\n      return offset.factor * (offset.hours * 3600 + offset.minutes * 60);\n    }\n\n    function init_changes() {\n      let changebase = {};\n      changebase.is_daylight = (aComponent.name == \"daylight\");\n      changebase.utcOffset = convert_tzoffset(\n        aComponent.getFirstProperty(\"tzoffsetto\").getFirstValue()\n      );\n\n      changebase.prevUtcOffset = convert_tzoffset(\n        aComponent.getFirstProperty(\"tzoffsetfrom\").getFirstValue()\n      );\n\n      return changebase;\n    }\n\n    if (!aComponent.hasProperty(\"rrule\") && !aComponent.hasProperty(\"rdate\")) {\n      change = init_changes();\n      change.year = dtstart.year;\n      change.month = dtstart.month;\n      change.day = dtstart.day;\n      change.hour = dtstart.hour;\n      change.minute = dtstart.minute;\n      change.second = dtstart.second;\n\n      Timezone.adjust_change(change, 0, 0, 0, -change.prevUtcOffset);\n      changes.push(change);\n    } else {\n      let props = aComponent.getAllProperties(\"rdate\");\n      for (let rdate of props) {\n        let time = rdate.getFirstValue();\n        change = init_changes();\n\n        change.year = time.year;\n        change.month = time.month;\n        change.day = time.day;\n\n        if (time.isDate) {\n          change.hour = dtstart.hour;\n          change.minute = dtstart.minute;\n          change.second = dtstart.second;\n\n          if (dtstart.zone != Timezone.utcTimezone) {\n            Timezone.adjust_change(change, 0, 0, 0, -change.prevUtcOffset);\n          }\n        } else {\n          change.hour = time.hour;\n          change.minute = time.minute;\n          change.second = time.second;\n\n          if (time.zone != Timezone.utcTimezone) {\n            Timezone.adjust_change(change, 0, 0, 0, -change.prevUtcOffset);\n          }\n        }\n\n        changes.push(change);\n      }\n\n      let rrule = aComponent.getFirstProperty(\"rrule\");\n\n      if (rrule) {\n        rrule = rrule.getFirstValue();\n        change = init_changes();\n\n        if (rrule.until && rrule.until.zone == Timezone.utcTimezone) {\n          rrule.until.adjust(0, 0, 0, change.prevUtcOffset);\n          rrule.until.zone = Timezone.localTimezone;\n        }\n\n        let iterator = rrule.iterator(dtstart);\n\n        let occ;\n        while ((occ = iterator.next())) {\n          change = init_changes();\n          if (occ.year > aYear || !occ) {\n            break;\n          }\n\n          change.year = occ.year;\n          change.month = occ.month;\n          change.day = occ.day;\n          change.hour = occ.hour;\n          change.minute = occ.minute;\n          change.second = occ.second;\n          change.isDate = occ.isDate;\n\n          Timezone.adjust_change(change, 0, 0, 0, -change.prevUtcOffset);\n          changes.push(change);\n        }\n      }\n    }\n\n    return changes;\n  }\n\n  /**\n   * The string representation of this timezone.\n   * @return {String}\n   */\n  toString() {\n    return (this.tznames ? this.tznames : this.tzid);\n  }\n}\n\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch */\n\n\nlet zones = null;\n\n/**\n * @classdesc\n * Singleton class to contain timezones.  Right now it is all manual registry in\n * the future we may use this class to download timezone information or handle\n * loading pre-expanded timezones.\n *\n * @exports module:ICAL.TimezoneService\n * @memberof ICAL\n */\nconst TimezoneService = {\n  get count() {\n    if (zones === null) {\n      return 0;\n    }\n\n    return Object.keys(zones).length;\n  },\n\n  reset: function() {\n    zones = Object.create(null);\n    let utc = Timezone.utcTimezone;\n\n    zones.Z = utc;\n    zones.UTC = utc;\n    zones.GMT = utc;\n  },\n  _hard_reset: function() {\n    zones = null;\n  },\n\n  /**\n   * Checks if timezone id has been registered.\n   *\n   * @param {String} tzid     Timezone identifier (e.g. America/Los_Angeles)\n   * @return {Boolean}        False, when not present\n   */\n  has: function(tzid) {\n    if (zones === null) {\n      return false;\n    }\n\n    return !!zones[tzid];\n  },\n\n  /**\n   * Returns a timezone by its tzid if present.\n   *\n   * @param {String} tzid               Timezone identifier (e.g. America/Los_Angeles)\n   * @return {Timezone | undefined}     The timezone, or undefined if not found\n   */\n  get: function(tzid) {\n    if (zones === null) {\n      this.reset();\n    }\n\n    return zones[tzid];\n  },\n\n  /**\n   * Registers a timezone object or component.\n   *\n   * @param {Component|Timezone} timezone\n   *        The initialized zone or vtimezone.\n   *\n   * @param {String=} name\n   *        The name of the timezone. Defaults to the component's TZID if not\n   *        passed.\n   */\n  register: function(timezone, name) {\n    if (zones === null) {\n      this.reset();\n    }\n\n    // This avoids a breaking change by the change of argument order\n    // TODO remove in v3\n    if (typeof timezone === \"string\" && name instanceof Timezone) {\n      [timezone, name] = [name, timezone];\n    }\n\n    if (!name) {\n      if (timezone instanceof Timezone) {\n        name = timezone.tzid;\n      } else {\n        if (timezone.name === 'vtimezone') {\n          timezone = new Timezone(timezone);\n          name = timezone.tzid;\n        }\n      }\n    }\n\n    if (!name) {\n      throw new TypeError(\"Neither a timezone nor a name was passed\");\n    }\n\n    if (timezone instanceof Timezone) {\n      zones[name] = timezone;\n    } else {\n      throw new TypeError('timezone must be ICAL.Timezone or ICAL.Component');\n    }\n  },\n\n  /**\n   * Removes a timezone by its tzid from the list.\n   *\n   * @param {String} tzid     Timezone identifier (e.g. America/Los_Angeles)\n   * @return {?Timezone}      The removed timezone, or null if not registered\n   */\n  remove: function(tzid) {\n    if (zones === null) {\n      return null;\n    }\n\n    return (delete zones[tzid]);\n  }\n};\n\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch */\n\n\n/**\n * Helper functions used in various places within ical.js\n * @module ICAL.helpers\n */\n\n/**\n * Compiles a list of all referenced TZIDs in all subcomponents and\n * removes any extra VTIMEZONE subcomponents. In addition, if any TZIDs\n * are referenced by a component, but a VTIMEZONE does not exist,\n * an attempt will be made to generate a VTIMEZONE using ICAL.TimezoneService.\n *\n * @param {Component} vcal     The top-level VCALENDAR component.\n * @return {Component}         The ICAL.Component that was passed in.\n */\nfunction updateTimezones(vcal) {\n  let allsubs, properties, vtimezones, reqTzid, i;\n\n  if (!vcal || vcal.name !== \"vcalendar\") {\n    //not a top-level vcalendar component\n    return vcal;\n  }\n\n  //Store vtimezone subcomponents in an object reference by tzid.\n  //Store properties from everything else in another array\n  allsubs = vcal.getAllSubcomponents();\n  properties = [];\n  vtimezones = {};\n  for (i = 0; i < allsubs.length; i++) {\n    if (allsubs[i].name === \"vtimezone\") {\n      let tzid = allsubs[i].getFirstProperty(\"tzid\").getFirstValue();\n      vtimezones[tzid] = allsubs[i];\n    } else {\n      properties = properties.concat(allsubs[i].getAllProperties());\n    }\n  }\n\n  //create an object with one entry for each required tz\n  reqTzid = {};\n  for (i = 0; i < properties.length; i++) {\n    let tzid = properties[i].getParameter(\"tzid\");\n    if (tzid) {\n      reqTzid[tzid] = true;\n    }\n  }\n\n  //delete any vtimezones that are not on the reqTzid list.\n  for (let [tzid, comp] of Object.entries(vtimezones)) {\n    if (!reqTzid[tzid]) {\n      vcal.removeSubcomponent(comp);\n    }\n  }\n\n  //create any missing, but registered timezones\n  for (let tzid of Object.keys(reqTzid)) {\n    if (!vtimezones[tzid] && TimezoneService.has(tzid)) {\n      vcal.addSubcomponent(TimezoneService.get(tzid).component);\n    }\n  }\n\n  return vcal;\n}\n\n/**\n * Checks if the given type is of the number type and also NaN.\n *\n * @param {Number} number     The number to check\n * @return {Boolean}          True, if the number is strictly NaN\n */\nfunction isStrictlyNaN(number) {\n  return typeof(number) === 'number' && isNaN(number);\n}\n\n/**\n * Parses a string value that is expected to be an integer, when the valid is\n * not an integer throws a decoration error.\n *\n * @param {String} string     Raw string input\n * @return {Number}           Parsed integer\n */\nfunction strictParseInt(string) {\n  let result = parseInt(string, 10);\n\n  if (isStrictlyNaN(result)) {\n    throw new Error(\n      'Could not extract integer from \"' + string + '\"'\n    );\n  }\n\n  return result;\n}\n\n/**\n * Creates or returns a class instance of a given type with the initialization\n * data if the data is not already an instance of the given type.\n *\n * @example\n * var time = new ICAL.Time(...);\n * var result = ICAL.helpers.formatClassType(time, ICAL.Time);\n *\n * (result instanceof ICAL.Time)\n * // => true\n *\n * result = ICAL.helpers.formatClassType({}, ICAL.Time);\n * (result isntanceof ICAL.Time)\n * // => true\n *\n *\n * @param {Object} data       object initialization data\n * @param {Object} type       object type (like ICAL.Time)\n * @return {?}                An instance of the found type.\n */\nfunction formatClassType(data, type) {\n  if (typeof(data) === 'undefined') {\n    return undefined;\n  }\n\n  if (data instanceof type) {\n    return data;\n  }\n  return new type(data);\n}\n\n/**\n * Identical to indexOf but will only match values when they are not preceded\n * by a backslash character.\n *\n * @param {String} buffer         String to search\n * @param {String} search         Value to look for\n * @param {Number} pos            Start position\n * @return {Number}               The position, or -1 if not found\n */\nfunction unescapedIndexOf(buffer, search, pos) {\n  while ((pos = buffer.indexOf(search, pos)) !== -1) {\n    if (pos > 0 && buffer[pos - 1] === '\\\\') {\n      pos += 1;\n    } else {\n      return pos;\n    }\n  }\n  return -1;\n}\n\n/**\n * Find the index for insertion using binary search.\n *\n * @param {Array} list            The list to search\n * @param {?} seekVal             The value to insert\n * @param {function(?,?)} cmpfunc The comparison func, that can\n *                                  compare two seekVals\n * @return {Number}               The insert position\n */\nfunction binsearchInsert(list, seekVal, cmpfunc) {\n  if (!list.length)\n    return 0;\n\n  let low = 0, high = list.length - 1,\n      mid, cmpval;\n\n  while (low <= high) {\n    mid = low + Math.floor((high - low) / 2);\n    cmpval = cmpfunc(seekVal, list[mid]);\n\n    if (cmpval < 0)\n      high = mid - 1;\n    else if (cmpval > 0)\n      low = mid + 1;\n    else\n      break;\n  }\n\n  if (cmpval < 0)\n    return mid; // insertion is displacing, so use mid outright.\n  else if (cmpval > 0)\n    return mid + 1;\n  else\n    return mid;\n}\n\n/**\n * Clone the passed object or primitive. By default a shallow clone will be\n * executed.\n *\n * @param {*} aSrc            The thing to clone\n * @param {Boolean=} aDeep    If true, a deep clone will be performed\n * @return {*}                The copy of the thing\n */\nfunction clone(aSrc, aDeep) {\n  if (!aSrc || typeof aSrc != \"object\") {\n    return aSrc;\n  } else if (aSrc instanceof Date) {\n    return new Date(aSrc.getTime());\n  } else if (\"clone\" in aSrc) {\n    return aSrc.clone();\n  } else if (Array.isArray(aSrc)) {\n    let arr = [];\n    for (let i = 0; i < aSrc.length; i++) {\n      arr.push(aDeep ? clone(aSrc[i], true) : aSrc[i]);\n    }\n    return arr;\n  } else {\n    let obj = {};\n    for (let [name, value] of Object.entries(aSrc)) {\n      if (aDeep) {\n        obj[name] = clone(value, true);\n      } else {\n        obj[name] = value;\n      }\n    }\n    return obj;\n  }\n}\n\n/**\n * Performs iCalendar line folding. A line ending character is inserted and\n * the next line begins with a whitespace.\n *\n * @example\n * SUMMARY:This line will be fold\n *  ed right in the middle of a word.\n *\n * @param {String} aLine      The line to fold\n * @return {String}           The folded line\n */\nfunction foldline(aLine) {\n  let result = \"\";\n  let line = aLine || \"\", pos = 0, line_length = 0;\n  //pos counts position in line for the UTF-16 presentation\n  //line_length counts the bytes for the UTF-8 presentation\n  while (line.length) {\n    let cp = line.codePointAt(pos);\n    if (cp < 128) ++line_length;\n    else if (cp < 2048) line_length += 2;//needs 2 UTF-8 bytes\n    else if (cp < 65536) line_length += 3;\n    else line_length += 4; //cp is less than 1114112\n    if (line_length < ICALmodule.foldLength + 1)\n      pos += cp > 65535 ? 2 : 1;\n    else {\n      result += ICALmodule.newLineChar + \" \" + line.slice(0, Math.max(0, pos));\n      line = line.slice(Math.max(0, pos));\n      pos = line_length = 0;\n    }\n  }\n  return result.slice(ICALmodule.newLineChar.length + 1);\n}\n\n/**\n * Pads the given string or number with zeros so it will have at least two\n * characters.\n *\n * @param {String|Number} data    The string or number to pad\n * @return {String}               The number padded as a string\n */\nfunction pad2(data) {\n  if (typeof(data) !== 'string') {\n    // handle fractions.\n    if (typeof(data) === 'number') {\n      data = parseInt(data);\n    }\n    data = String(data);\n  }\n\n  let len = data.length;\n\n  switch (len) {\n    case 0:\n      return '00';\n    case 1:\n      return '0' + data;\n    default:\n      return data;\n  }\n}\n\n/**\n * Truncates the given number, correctly handling negative numbers.\n *\n * @param {Number} number     The number to truncate\n * @return {Number}           The truncated number\n */\nfunction trunc(number) {\n  return (number < 0 ? Math.ceil(number) : Math.floor(number));\n}\n\n/**\n * Poor-man's cross-browser object extension. Doesn't support all the\n * features, but enough for our usage. Note that the target's properties are\n * not overwritten with the source properties.\n *\n * @example\n * var child = ICAL.helpers.extend(parent, {\n *   \"bar\": 123\n * });\n *\n * @param {Object} source     The object to extend\n * @param {Object} target     The object to extend with\n * @return {Object}           Returns the target.\n */\nfunction extend(source, target) {\n  for (let key in source) {\n    let descr = Object.getOwnPropertyDescriptor(source, key);\n    if (descr && !Object.getOwnPropertyDescriptor(target, key)) {\n      Object.defineProperty(target, key, descr);\n    }\n  }\n  return target;\n}\n\nvar helpers = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  binsearchInsert: binsearchInsert,\n  clone: clone,\n  extend: extend,\n  foldline: foldline,\n  formatClassType: formatClassType,\n  isStrictlyNaN: isStrictlyNaN,\n  pad2: pad2,\n  strictParseInt: strictParseInt,\n  trunc: trunc,\n  unescapedIndexOf: unescapedIndexOf,\n  updateTimezones: updateTimezones\n});\n\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch */\n\n\n/**\n * This class represents the \"utc-offset\" value type, with various calculation and manipulation\n * methods.\n *\n * @memberof ICAL\n */\nclass UtcOffset {\n  /**\n   * Creates a new {@link ICAL.UtcOffset} instance from the passed string.\n   *\n   * @param {String} aString    The string to parse\n   * @return {Duration}         The created utc-offset instance\n   */\n  static fromString(aString) {\n    // -05:00\n    let options = {};\n    //TODO: support seconds per rfc5545 ?\n    options.factor = (aString[0] === '+') ? 1 : -1;\n    options.hours = strictParseInt(aString.slice(1, 3));\n    options.minutes = strictParseInt(aString.slice(4, 6));\n\n    return new UtcOffset(options);\n  }\n\n  /**\n   * Creates a new {@link ICAL.UtcOffset} instance from the passed seconds\n   * value.\n   *\n   * @param {Number} aSeconds       The number of seconds to convert\n   */\n  static fromSeconds(aSeconds) {\n    let instance = new UtcOffset();\n    instance.fromSeconds(aSeconds);\n    return instance;\n  }\n\n  /**\n   * Creates a new ICAL.UtcOffset instance.\n   *\n   * @param {Object} aData          An object with members of the utc offset\n   * @param {Number=} aData.hours   The hours for the utc offset\n   * @param {Number=} aData.minutes The minutes in the utc offset\n   * @param {Number=} aData.factor  The factor for the utc-offset, either -1 or 1\n   */\n  constructor(aData) {\n    this.fromData(aData);\n  }\n\n  /**\n   * The hours in the utc-offset\n   * @type {Number}\n   */\n  hours = 0;\n\n  /**\n   * The minutes in the utc-offset\n   * @type {Number}\n   */\n  minutes = 0;\n\n  /**\n   * The sign of the utc offset, 1 for positive offset, -1 for negative\n   * offsets.\n   * @type {Number}\n   */\n  factor = 1;\n\n  /**\n   * The type name, to be used in the jCal object.\n   * @constant\n   * @type {String}\n   * @default \"utc-offset\"\n   */\n  icaltype = \"utc-offset\";\n\n  /**\n   * Returns a clone of the utc offset object.\n   *\n   * @return {UtcOffset}     The cloned object\n   */\n  clone() {\n    return UtcOffset.fromSeconds(this.toSeconds());\n  }\n\n  /**\n   * Sets up the current instance using members from the passed data object.\n   *\n   * @param {Object} aData          An object with members of the utc offset\n   * @param {Number=} aData.hours   The hours for the utc offset\n   * @param {Number=} aData.minutes The minutes in the utc offset\n   * @param {Number=} aData.factor  The factor for the utc-offset, either -1 or 1\n   */\n  fromData(aData) {\n    if (aData) {\n      for (let [key, value] of Object.entries(aData)) {\n        this[key] = value;\n      }\n    }\n    this._normalize();\n  }\n\n  /**\n   * Sets up the current instance from the given seconds value. The seconds\n   * value is truncated to the minute. Offsets are wrapped when the world\n   * ends, the hour after UTC+14:00 is UTC-12:00.\n   *\n   * @param {Number} aSeconds         The seconds to convert into an offset\n   */\n  fromSeconds(aSeconds) {\n    let secs = Math.abs(aSeconds);\n\n    this.factor = aSeconds < 0 ? -1 : 1;\n    this.hours = trunc(secs / 3600);\n\n    secs -= (this.hours * 3600);\n    this.minutes = trunc(secs / 60);\n    return this;\n  }\n\n  /**\n   * Convert the current offset to a value in seconds\n   *\n   * @return {Number}                 The offset in seconds\n   */\n  toSeconds() {\n    return this.factor * (60 * this.minutes + 3600 * this.hours);\n  }\n\n  /**\n   * Compare this utc offset with another one.\n   *\n   * @param {UtcOffset} other             The other offset to compare with\n   * @return {Number}                     -1, 0 or 1 for less/equal/greater\n   */\n  compare(other) {\n    let a = this.toSeconds();\n    let b = other.toSeconds();\n    return (a > b) - (b > a);\n  }\n\n  _normalize() {\n    // Range: 97200 seconds (with 1 hour inbetween)\n    let secs = this.toSeconds();\n    let factor = this.factor;\n    while (secs < -43200) { // = UTC-12:00\n      secs += 97200;\n    }\n    while (secs > 50400) { // = UTC+14:00\n      secs -= 97200;\n    }\n\n    this.fromSeconds(secs);\n\n    // Avoid changing the factor when on zero seconds\n    if (secs == 0) {\n      this.factor = factor;\n    }\n  }\n\n  /**\n   * The iCalendar string representation of this utc-offset.\n   * @return {String}\n   */\n  toICALString() {\n    return design.icalendar.value['utc-offset'].toICAL(this.toString());\n  }\n\n  /**\n   * The string representation of this utc-offset.\n   * @return {String}\n   */\n  toString() {\n    return (this.factor == 1 ? \"+\" : \"-\") + pad2(this.hours) + ':' + pad2(this.minutes);\n  }\n}\n\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch */\n\n\n/**\n * Describes a vCard time, which has slight differences to the ICAL.Time.\n * Properties can be null if not specified, for example for dates with\n * reduced accuracy or truncation.\n *\n * Note that currently not all methods are correctly re-implemented for\n * VCardTime. For example, comparison will have undefined results when some\n * members are null.\n *\n * Also, normalization is not yet implemented for this class!\n *\n * @memberof ICAL\n * @extends {ICAL.Time}\n */\nclass VCardTime extends Time {\n  /**\n   * Returns a new ICAL.VCardTime instance from a date and/or time string.\n   *\n   * @param {String} aValue     The string to create from\n   * @param {String} aIcalType  The type for this instance, e.g. date-and-or-time\n   * @return {VCardTime}        The date/time instance\n   */\n  static fromDateAndOrTimeString(aValue, aIcalType) {\n    function part(v, s, e) {\n      return v ? strictParseInt(v.slice(s, s + e)) : null;\n    }\n    let parts = aValue.split('T');\n    let dt = parts[0], tmz = parts[1];\n    let splitzone = tmz ? design.vcard.value.time._splitZone(tmz) : [];\n    let zone = splitzone[0], tm = splitzone[1];\n\n    let dtlen = dt ? dt.length : 0;\n    let tmlen = tm ? tm.length : 0;\n\n    let hasDashDate = dt && dt[0] == '-' && dt[1] == '-';\n    let hasDashTime = tm && tm[0] == '-';\n\n    let o = {\n      year: hasDashDate ? null : part(dt, 0, 4),\n      month: hasDashDate && (dtlen == 4 || dtlen == 7) ? part(dt, 2, 2) : dtlen == 7 ? part(dt, 5, 2) : dtlen == 10 ? part(dt, 5, 2) : null,\n      day: dtlen == 5 ? part(dt, 3, 2) : dtlen == 7 && hasDashDate ? part(dt, 5, 2) : dtlen == 10 ? part(dt, 8, 2) : null,\n\n      hour: hasDashTime ? null : part(tm, 0, 2),\n      minute: hasDashTime && tmlen == 3 ? part(tm, 1, 2) : tmlen > 4 ? hasDashTime ? part(tm, 1, 2) : part(tm, 3, 2) : null,\n      second: tmlen == 4 ? part(tm, 2, 2) : tmlen == 6 ? part(tm, 4, 2) : tmlen == 8 ? part(tm, 6, 2) : null\n    };\n\n    if (zone == 'Z') {\n      zone = Timezone.utcTimezone;\n    } else if (zone && zone[3] == ':') {\n      zone = UtcOffset.fromString(zone);\n    } else {\n      zone = null;\n    }\n\n    return new VCardTime(o, zone, aIcalType);\n  }\n\n\n  /**\n   * Creates a new ICAL.VCardTime instance.\n   *\n   * @param {Object} data                           The data for the time instance\n   * @param {Number=} data.year                     The year for this date\n   * @param {Number=} data.month                    The month for this date\n   * @param {Number=} data.day                      The day for this date\n   * @param {Number=} data.hour                     The hour for this date\n   * @param {Number=} data.minute                   The minute for this date\n   * @param {Number=} data.second                   The second for this date\n   * @param {Timezone|UtcOffset} zone               The timezone to use\n   * @param {String} icaltype                       The type for this date/time object\n   */\n  constructor(data, zone, icaltype) {\n    super(data, zone);\n    this.icaltype = icaltype || \"date-and-or-time\";\n  }\n\n  /**\n   * The class identifier.\n   * @constant\n   * @type {String}\n   * @default \"vcardtime\"\n   */\n  icalclass = \"vcardtime\";\n\n  /**\n   * The type name, to be used in the jCal object.\n   * @type {String}\n   * @default \"date-and-or-time\"\n   */\n  icaltype = \"date-and-or-time\";\n\n  /**\n   * Returns a clone of the vcard date/time object.\n   *\n   * @return {VCardTime}     The cloned object\n   */\n  clone() {\n    return new VCardTime(this._time, this.zone, this.icaltype);\n  }\n\n  _normalize() {\n    return this;\n  }\n\n  /**\n   * @inheritdoc\n   */\n  utcOffset() {\n    if (this.zone instanceof UtcOffset) {\n      return this.zone.toSeconds();\n    } else {\n      return Time.prototype.utcOffset.apply(this, arguments);\n    }\n  }\n\n  /**\n   * Returns an RFC 6350 compliant representation of this object.\n   *\n   * @return {String}         vcard date/time string\n   */\n  toICALString() {\n    return design.vcard.value[this.icaltype].toICAL(this.toString());\n  }\n\n  /**\n   * The string representation of this date/time, in jCard form\n   * (including : and - separators).\n   * @return {String}\n   */\n  toString() {\n    let y = this.year, m = this.month, d = this.day;\n    let h = this.hour, mm = this.minute, s = this.second;\n\n    let hasYear = y !== null, hasMonth = m !== null, hasDay = d !== null;\n    let hasHour = h !== null, hasMinute = mm !== null, hasSecond = s !== null;\n\n    let datepart = (hasYear ? pad2(y) + (hasMonth || hasDay ? '-' : '') : (hasMonth || hasDay ? '--' : '')) +\n                   (hasMonth ? pad2(m) : '') +\n                   (hasDay ? '-' + pad2(d) : '');\n    let timepart = (hasHour ? pad2(h) : '-') + (hasHour && hasMinute ? ':' : '') +\n                   (hasMinute ? pad2(mm) : '') + (!hasHour && !hasMinute ? '-' : '') +\n                   (hasMinute && hasSecond ? ':' : '') +\n                   (hasSecond ? pad2(s) : '');\n\n    let zone;\n    if (this.zone === Timezone.utcTimezone) {\n      zone = 'Z';\n    } else if (this.zone instanceof UtcOffset) {\n      zone = this.zone.toString();\n    } else if (this.zone === Timezone.localTimezone) {\n      zone = '';\n    } else if (this.zone instanceof Timezone) {\n      let offset = UtcOffset.fromSeconds(this.zone.utcOffset(this));\n      zone = offset.toString();\n    } else {\n      zone = '';\n    }\n\n    switch (this.icaltype) {\n      case \"time\":\n        return timepart + zone;\n      case \"date-and-or-time\":\n      case \"date-time\":\n        return datepart + (timepart == '--' ? '' : 'T' + timepart + zone);\n      case \"date\":\n        return datepart;\n    }\n    return null;\n  }\n}\n\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch */\n\n\n/**\n * This lets typescript resolve our custom types in the\n * generated d.ts files (jsdoc typedefs are converted to typescript types).\n * Ignore prevents the typedefs from being documented more than once.\n *\n * @ignore\n * @typedef {import(\"./types.js\").weekDay} weekDay\n * Imports the 'weekDay' type from the \"types.js\" module\n */\n\n/**\n * An iterator for a single recurrence rule. This class usually doesn't have to be instanciated\n * directly, the convenience method {@link ICAL.Recur#iterator} can be used.\n *\n * @memberof ICAL\n */\nclass RecurIterator {\n  static _indexMap = {\n    \"BYSECOND\": 0,\n    \"BYMINUTE\": 1,\n    \"BYHOUR\": 2,\n    \"BYDAY\": 3,\n    \"BYMONTHDAY\": 4,\n    \"BYYEARDAY\": 5,\n    \"BYWEEKNO\": 6,\n    \"BYMONTH\": 7,\n    \"BYSETPOS\": 8\n  };\n\n  static _expandMap = {\n    \"SECONDLY\": [1, 1, 1, 1, 1, 1, 1, 1],\n    \"MINUTELY\": [2, 1, 1, 1, 1, 1, 1, 1],\n    \"HOURLY\": [2, 2, 1, 1, 1, 1, 1, 1],\n    \"DAILY\": [2, 2, 2, 1, 1, 1, 1, 1],\n    \"WEEKLY\": [2, 2, 2, 2, 3, 3, 1, 1],\n    \"MONTHLY\": [2, 2, 2, 2, 2, 3, 3, 1],\n    \"YEARLY\": [2, 2, 2, 2, 2, 2, 2, 2]\n  };\n\n  static UNKNOWN = 0;\n  static CONTRACT = 1;\n  static EXPAND = 2;\n  static ILLEGAL = 3;\n\n  /**\n   * Creates a new ICAL.RecurIterator instance. The options object may contain additional members\n   * when resuming iteration from a previous run.\n   *\n   * @param {Object} options                The iterator options\n   * @param {Recur} options.rule            The rule to iterate.\n   * @param {Time} options.dtstart          The start date of the event.\n   * @param {Boolean=} options.initialized  When true, assume that options are\n   *        from a previously constructed iterator. Initialization will not be\n   *        repeated.\n   */\n  constructor(options) {\n    this.fromData(options);\n  }\n\n  /**\n   * True when iteration is finished.\n   * @type {Boolean}\n   */\n  completed = false;\n\n  /**\n   * The rule that is being iterated\n   * @type {Recur}\n   */\n  rule = null;\n\n  /**\n   * The start date of the event being iterated.\n   * @type {Time}\n   */\n  dtstart = null;\n\n  /**\n   * The last occurrence that was returned from the\n   * {@link RecurIterator#next} method.\n   * @type {Time}\n   */\n  last = null;\n\n  /**\n   * The sequence number from the occurrence\n   * @type {Number}\n   */\n  occurrence_number = 0;\n\n  /**\n   * The indices used for the {@link ICAL.RecurIterator#by_data} object.\n   * @type {Object}\n   * @private\n   */\n  by_indices = null;\n\n  /**\n   * If true, the iterator has already been initialized\n   * @type {Boolean}\n   * @private\n   */\n  initialized = false;\n\n  /**\n   * The initializd by-data.\n   * @type {Object}\n   * @private\n   */\n  by_data = null;\n\n  /**\n   * The expanded yeardays\n   * @type {Array}\n   * @private\n   */\n  days = null;\n\n  /**\n   * The index in the {@link ICAL.RecurIterator#days} array.\n   * @type {Number}\n   * @private\n   */\n  days_index = 0;\n\n  /**\n   * Initialize the recurrence iterator from the passed data object. This\n   * method is usually not called directly, you can initialize the iterator\n   * through the constructor.\n   *\n   * @param {Object} options                The iterator options\n   * @param {Recur} options.rule            The rule to iterate.\n   * @param {Time} options.dtstart          The start date of the event.\n   * @param {Boolean=} options.initialized  When true, assume that options are\n   *        from a previously constructed iterator. Initialization will not be\n   *        repeated.\n   */\n  fromData(options) {\n    this.rule = formatClassType(options.rule, Recur);\n\n    if (!this.rule) {\n      throw new Error('iterator requires a (ICAL.Recur) rule');\n    }\n\n    this.dtstart = formatClassType(options.dtstart, Time);\n\n    if (!this.dtstart) {\n      throw new Error('iterator requires a (ICAL.Time) dtstart');\n    }\n\n    if (options.by_data) {\n      this.by_data = options.by_data;\n    } else {\n      this.by_data = clone(this.rule.parts, true);\n    }\n\n    if (options.occurrence_number)\n      this.occurrence_number = options.occurrence_number;\n\n    this.days = options.days || [];\n    if (options.last) {\n      this.last = formatClassType(options.last, Time);\n    }\n\n    this.by_indices = options.by_indices;\n\n    if (!this.by_indices) {\n      this.by_indices = {\n        \"BYSECOND\": 0,\n        \"BYMINUTE\": 0,\n        \"BYHOUR\": 0,\n        \"BYDAY\": 0,\n        \"BYMONTH\": 0,\n        \"BYWEEKNO\": 0,\n        \"BYMONTHDAY\": 0\n      };\n    }\n\n    this.initialized = options.initialized || false;\n\n    if (!this.initialized) {\n      try {\n        this.init();\n      } catch (e) {\n        if (e instanceof InvalidRecurrenceRuleError) {\n          // Init may error if there are no possible recurrence instances from\n          // the rule, but we don't want to bubble this error up. Instead, we\n          // create an empty iterator.\n          this.completed = true;\n        } else {\n          // Propagate other errors to consumers.\n          throw e;\n        }\n      }\n    }\n  }\n\n  /**\n   * Initialize the iterator\n   * @private\n   */\n  init() {\n    this.initialized = true;\n    this.last = this.dtstart.clone();\n    let parts = this.by_data;\n\n    if (\"BYDAY\" in parts) {\n      // libical does this earlier when the rule is loaded, but we postpone to\n      // now so we can preserve the original order.\n      this.sort_byday_rules(parts.BYDAY);\n    }\n\n    // The BYYEARDAY may only appear with BYDAY\n    if (\"BYYEARDAY\" in parts) {\n      if (\"BYMONTH\" in parts || \"BYWEEKNO\" in parts ||\n          \"BYMONTHDAY\" in parts) {\n        throw new Error(\"Invalid BYYEARDAY rule\");\n      }\n    }\n\n    // BYWEEKNO and BYMONTHDAY rule parts may not both appear\n    if (\"BYWEEKNO\" in parts && \"BYMONTHDAY\" in parts) {\n      throw new Error(\"BYWEEKNO does not fit to BYMONTHDAY\");\n    }\n\n    // For MONTHLY recurrences (FREQ=MONTHLY) neither BYYEARDAY nor\n    // BYWEEKNO may appear.\n    if (this.rule.freq == \"MONTHLY\" &&\n        (\"BYYEARDAY\" in parts || \"BYWEEKNO\" in parts)) {\n      throw new Error(\"For MONTHLY recurrences neither BYYEARDAY nor BYWEEKNO may appear\");\n    }\n\n    // For WEEKLY recurrences (FREQ=WEEKLY) neither BYMONTHDAY nor\n    // BYYEARDAY may appear.\n    if (this.rule.freq == \"WEEKLY\" &&\n        (\"BYYEARDAY\" in parts || \"BYMONTHDAY\" in parts)) {\n      throw new Error(\"For WEEKLY recurrences neither BYMONTHDAY nor BYYEARDAY may appear\");\n    }\n\n    // BYYEARDAY may only appear in YEARLY rules\n    if (this.rule.freq != \"YEARLY\" && \"BYYEARDAY\" in parts) {\n      throw new Error(\"BYYEARDAY may only appear in YEARLY rules\");\n    }\n\n    this.last.second = this.setup_defaults(\"BYSECOND\", \"SECONDLY\", this.dtstart.second);\n    this.last.minute = this.setup_defaults(\"BYMINUTE\", \"MINUTELY\", this.dtstart.minute);\n    this.last.hour = this.setup_defaults(\"BYHOUR\", \"HOURLY\", this.dtstart.hour);\n    this.last.day = this.setup_defaults(\"BYMONTHDAY\", \"DAILY\", this.dtstart.day);\n    this.last.month = this.setup_defaults(\"BYMONTH\", \"MONTHLY\", this.dtstart.month);\n\n    if (this.rule.freq == \"WEEKLY\") {\n      if (\"BYDAY\" in parts) {\n        let [, dow] = this.ruleDayOfWeek(parts.BYDAY[0], this.rule.wkst);\n        let wkdy = dow - this.last.dayOfWeek(this.rule.wkst);\n        if ((this.last.dayOfWeek(this.rule.wkst) < dow && wkdy >= 0) || wkdy < 0) {\n          // Initial time is after first day of BYDAY data\n          this.last.day += wkdy;\n        }\n      } else {\n        let dayName = Recur.numericDayToIcalDay(this.dtstart.dayOfWeek());\n        parts.BYDAY = [dayName];\n      }\n    }\n\n    if (this.rule.freq == \"YEARLY\") {\n      // Some yearly recurrence rules may be specific enough to not actually\n      // occur on a yearly basis, e.g. the 29th day of February or the fifth\n      // Monday of a given month. The standard isn't clear on the intended\n      // behavior in these cases, but `libical` at least will iterate until it\n      // finds a matching year.\n      // CAREFUL: Some rules may specify an occurrence that can never happen,\n      // e.g. the first Monday of April so long as it falls on the 15th\n      // through the 21st. Detecting these is non-trivial, so ensure that we\n      // stop iterating at some point.\n      const untilYear = this.rule.until ? this.rule.until.year : 20000;\n      while (this.last.year <= untilYear) {\n        this.expand_year_days(this.last.year);\n        if (this.days.length > 0) {\n          break;\n        }\n        this.increment_year(this.rule.interval);\n      }\n\n      if (this.days.length == 0) {\n        throw new InvalidRecurrenceRuleError();\n      }\n\n      this._nextByYearDay();\n    }\n\n    if (this.rule.freq == \"MONTHLY\") {\n      if (this.has_by_data(\"BYDAY\")) {\n        let tempLast = null;\n        let initLast = this.last.clone();\n        let daysInMonth = Time.daysInMonth(this.last.month, this.last.year);\n\n        // Check every weekday in BYDAY with relative dow and pos.\n        for (let bydow of this.by_data.BYDAY) {\n          this.last = initLast.clone();\n          let [pos, dow] = this.ruleDayOfWeek(bydow);\n          let dayOfMonth = this.last.nthWeekDay(dow, pos);\n\n          // If |pos| >= 6, the byday is invalid for a monthly rule.\n          if (pos >= 6 || pos <= -6) {\n            throw new Error(\"Malformed values in BYDAY part\");\n          }\n\n          // If a Byday with pos=+/-5 is not in the current month it\n          // must be searched in the next months.\n          if (dayOfMonth > daysInMonth || dayOfMonth <= 0) {\n            // Skip if we have already found a \"last\" in this month.\n            if (tempLast && tempLast.month == initLast.month) {\n              continue;\n            }\n            while (dayOfMonth > daysInMonth || dayOfMonth <= 0) {\n              this.increment_month();\n              daysInMonth = Time.daysInMonth(this.last.month, this.last.year);\n              dayOfMonth = this.last.nthWeekDay(dow, pos);\n            }\n          }\n\n          this.last.day = dayOfMonth;\n          if (!tempLast || this.last.compare(tempLast) < 0) {\n            tempLast = this.last.clone();\n          }\n        }\n        this.last = tempLast.clone();\n\n        //XXX: This feels like a hack, but we need to initialize\n        //     the BYMONTHDAY case correctly and byDayAndMonthDay handles\n        //     this case. It accepts a special flag which will avoid incrementing\n        //     the initial value without the flag days that match the start time\n        //     would be missed.\n        if (this.has_by_data('BYMONTHDAY')) {\n          this._byDayAndMonthDay(true);\n        }\n\n        if (this.last.day > daysInMonth || this.last.day == 0) {\n          throw new Error(\"Malformed values in BYDAY part\");\n        }\n      } else if (this.has_by_data(\"BYMONTHDAY\")) {\n        // Change the day value so that normalisation won't change the month.\n        this.last.day = 1;\n\n        // Get a sorted list of days in the starting month that match the rule.\n        let normalized = this.normalizeByMonthDayRules(\n          this.last.year,\n          this.last.month,\n          this.rule.parts.BYMONTHDAY\n        ).filter(d => d >= this.last.day);\n\n        if (normalized.length) {\n          // There's at least one valid day, use it.\n          this.last.day = normalized[0];\n          this.by_data.BYMONTHDAY = normalized;\n        } else {\n          // There's no occurrence in this month, find the next valid month.\n          // The longest possible sequence of skipped months is February-April-June,\n          // so we might need to call next_month up to three times.\n          if (!this.next_month() && !this.next_month() && !this.next_month()) {\n            throw new Error(\"No possible occurrences\");\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Retrieve the next occurrence from the iterator.\n   * @return {Time}\n   */\n  next(again = false) {\n    let before = (this.last ? this.last.clone() : null);\n\n    if ((this.rule.count && this.occurrence_number >= this.rule.count) ||\n        (this.rule.until && this.last.compare(this.rule.until) > 0)) {\n      this.completed = true;\n    }\n\n    if (this.completed) {\n      return null;\n    }\n\n    if (this.occurrence_number == 0 && this.last.compare(this.dtstart) >= 0) {\n      // First of all, give the instance that was initialized\n      this.occurrence_number++;\n      return this.last;\n    }\n\n    let valid;\n    do {\n      valid = 1;\n\n      switch (this.rule.freq) {\n      case \"SECONDLY\":\n        this.next_second();\n        break;\n      case \"MINUTELY\":\n        this.next_minute();\n        break;\n      case \"HOURLY\":\n        this.next_hour();\n        break;\n      case \"DAILY\":\n        this.next_day();\n        break;\n      case \"WEEKLY\":\n        this.next_week();\n        break;\n      case \"MONTHLY\":\n        valid = this.next_month();\n        break;\n      case \"YEARLY\":\n        this.next_year();\n        break;\n\n      default:\n        return null;\n      }\n    } while (!this.check_contracting_rules() ||\n             this.last.compare(this.dtstart) < 0 ||\n             !valid);\n\n    if (this.last.compare(before) == 0) {\n      if (again) {\n        throw new Error(\"Same occurrence found twice, protecting you from death by recursion\");\n      }\n      this.next(true);\n    }\n\n    if (this.rule.until && this.last.compare(this.rule.until) > 0) {\n      this.completed = true;\n      return null;\n    } else {\n      this.occurrence_number++;\n      return this.last;\n    }\n  }\n\n  next_second() {\n    return this.next_generic(\"BYSECOND\", \"SECONDLY\", \"second\", \"minute\");\n  }\n\n  increment_second(inc) {\n    return this.increment_generic(inc, \"second\", 60, \"minute\");\n  }\n\n  next_minute() {\n    return this.next_generic(\"BYMINUTE\", \"MINUTELY\",\n                             \"minute\", \"hour\", \"next_second\");\n  }\n\n  increment_minute(inc) {\n    return this.increment_generic(inc, \"minute\", 60, \"hour\");\n  }\n\n  next_hour() {\n    return this.next_generic(\"BYHOUR\", \"HOURLY\", \"hour\",\n                             \"monthday\", \"next_minute\");\n  }\n\n  increment_hour(inc) {\n    this.increment_generic(inc, \"hour\", 24, \"monthday\");\n  }\n\n  next_day() {\n    let this_freq = (this.rule.freq == \"DAILY\");\n\n    if (this.next_hour() == 0) {\n      return 0;\n    }\n\n    if (this_freq) {\n      this.increment_monthday(this.rule.interval);\n    } else {\n      this.increment_monthday(1);\n    }\n\n    return 0;\n  }\n\n  next_week() {\n    let end_of_data = 0;\n\n    if (this.next_weekday_by_week() == 0) {\n      return end_of_data;\n    }\n\n    if (this.has_by_data(\"BYWEEKNO\")) {\n      this.by_indices.BYWEEKNO++;\n\n      if (this.by_indices.BYWEEKNO == this.by_data.BYWEEKNO.length) {\n        this.by_indices.BYWEEKNO = 0;\n        end_of_data = 1;\n      }\n\n      // HACK should be first month of the year\n      this.last.month = 1;\n      this.last.day = 1;\n\n      let week_no = this.by_data.BYWEEKNO[this.by_indices.BYWEEKNO];\n\n      this.last.day += 7 * week_no;\n\n      if (end_of_data) {\n        this.increment_year(1);\n      }\n    } else {\n      // Jump to the next week\n      this.increment_monthday(7 * this.rule.interval);\n    }\n\n    return end_of_data;\n  }\n\n  /**\n   * Normalize each by day rule for a given year/month.\n   * Takes into account ordering and negative rules\n   *\n   * @private\n   * @param {Number} year         Current year.\n   * @param {Number} month        Current month.\n   * @param {Array}  rules        Array of rules.\n   *\n   * @return {Array} sorted and normalized rules.\n   *                 Negative rules will be expanded to their\n   *                 correct positive values for easier processing.\n   */\n  normalizeByMonthDayRules(year, month, rules) {\n    let daysInMonth = Time.daysInMonth(month, year);\n\n    // XXX: This is probably bad for performance to allocate\n    //      a new array for each month we scan, if possible\n    //      we should try to optimize this...\n    let newRules = [];\n\n    let ruleIdx = 0;\n    let len = rules.length;\n    let rule;\n\n    for (; ruleIdx < len; ruleIdx++) {\n      rule = parseInt(rules[ruleIdx], 10);\n      if (isNaN(rule)) {\n        throw new Error('Invalid BYMONTHDAY value');\n      }\n\n      // if this rule falls outside of given\n      // month discard it.\n      if (Math.abs(rule) > daysInMonth) {\n        continue;\n      }\n\n      // negative case\n      if (rule < 0) {\n        // we add (not subtract it is a negative number)\n        // one from the rule because 1 === last day of month\n        rule = daysInMonth + (rule + 1);\n      } else if (rule === 0) {\n        // skip zero: it is invalid.\n        continue;\n      }\n\n      // only add unique items...\n      if (newRules.indexOf(rule) === -1) {\n        newRules.push(rule);\n      }\n\n    }\n\n    // unique and sort\n    return newRules.sort(function(a, b) { return a - b; });\n  }\n\n  /**\n   * NOTES:\n   * We are given a list of dates in the month (BYMONTHDAY) (23, etc..)\n   * Also we are given a list of days (BYDAY) (MO, 2SU, etc..) when\n   * both conditions match a given date (this.last.day) iteration stops.\n   *\n   * @private\n   * @param {Boolean=} isInit     When given true will not increment the\n   *                                current day (this.last).\n   */\n  _byDayAndMonthDay(isInit) {\n    let byMonthDay; // setup in initMonth\n    let byDay = this.by_data.BYDAY;\n\n    let date;\n    let dateIdx = 0;\n    let dateLen; // setup in initMonth\n    let dayLen = byDay.length;\n\n    // we are not valid by default\n    let dataIsValid = 0;\n\n    let daysInMonth;\n    let self = this;\n    // we need a copy of this, because a DateTime gets normalized\n    // automatically if the day is out of range. At some points we\n    // set the last day to 0 to start counting.\n    let lastDay = this.last.day;\n\n    function initMonth() {\n      daysInMonth = Time.daysInMonth(\n        self.last.month, self.last.year\n      );\n\n      byMonthDay = self.normalizeByMonthDayRules(\n        self.last.year,\n        self.last.month,\n        self.by_data.BYMONTHDAY\n      );\n\n      dateLen = byMonthDay.length;\n\n      // For the case of more than one occurrence in one month\n      // we have to be sure to start searching after the last\n      // found date or at the last BYMONTHDAY, unless we are\n      // initializing the iterator because in this case we have\n      // to consider the last found date too.\n      while (byMonthDay[dateIdx] <= lastDay &&\n             !(isInit && byMonthDay[dateIdx] == lastDay) &&\n             dateIdx < dateLen - 1) {\n        dateIdx++;\n      }\n    }\n\n    function nextMonth() {\n      // since the day is incremented at the start\n      // of the loop below, we need to start at 0\n      lastDay = 0;\n      self.increment_month();\n      dateIdx = 0;\n      initMonth();\n    }\n\n    initMonth();\n\n    // should come after initMonth\n    if (isInit) {\n      lastDay -= 1;\n    }\n\n    // Use a counter to avoid an infinite loop with malformed rules.\n    // Stop checking after 4 years so we consider also a leap year.\n    let monthsCounter = 48;\n\n    while (!dataIsValid && monthsCounter) {\n      monthsCounter--;\n      // increment the current date. This is really\n      // important otherwise we may fall into the infinite\n      // loop trap. The initial date takes care of the case\n      // where the current date is the date we are looking\n      // for.\n      date = lastDay + 1;\n\n      if (date > daysInMonth) {\n        nextMonth();\n        continue;\n      }\n\n      // find next date\n      let next = byMonthDay[dateIdx++];\n\n      // this logic is dependent on the BYMONTHDAYS\n      // being in order (which is done by #normalizeByMonthDayRules)\n      if (next >= date) {\n        // if the next month day is in the future jump to it.\n        lastDay = next;\n      } else {\n        // in this case the 'next' monthday has past\n        // we must move to the month.\n        nextMonth();\n        continue;\n      }\n\n      // Now we can loop through the day rules to see\n      // if one matches the current month date.\n      for (let dayIdx = 0; dayIdx < dayLen; dayIdx++) {\n        let parts = this.ruleDayOfWeek(byDay[dayIdx]);\n        let pos = parts[0];\n        let dow = parts[1];\n\n        this.last.day = lastDay;\n        if (this.last.isNthWeekDay(dow, pos)) {\n          // when we find the valid one we can mark\n          // the conditions as met and break the loop.\n          // (Because we have this condition above\n          //  it will also break the parent loop).\n          dataIsValid = 1;\n          break;\n        }\n      }\n\n      // It is completely possible that the combination\n      // cannot be matched in the current month.\n      // When we reach the end of possible combinations\n      // in the current month we iterate to the next one.\n      // since dateIdx is incremented right after getting\n      // \"next\", we don't need dateLen -1 here.\n      if (!dataIsValid && dateIdx === dateLen) {\n        nextMonth();\n        continue;\n      }\n    }\n\n    if (monthsCounter <= 0) {\n      // Checked 4 years without finding a Byday that matches\n      // a Bymonthday. Maybe the rule is not correct.\n      throw new Error(\"Malformed values in BYDAY combined with BYMONTHDAY parts\");\n    }\n\n\n    return dataIsValid;\n  }\n\n  next_month() {\n    let data_valid = 1;\n\n    if (this.next_hour() == 0) {\n      return data_valid;\n    }\n\n    if (this.has_by_data(\"BYDAY\") && this.has_by_data(\"BYMONTHDAY\")) {\n      data_valid = this._byDayAndMonthDay();\n    } else if (this.has_by_data(\"BYDAY\")) {\n      let daysInMonth = Time.daysInMonth(this.last.month, this.last.year);\n      let setpos = 0;\n      let setpos_total = 0;\n\n      if (this.has_by_data(\"BYSETPOS\")) {\n        let last_day = this.last.day;\n        for (let day = 1; day <= daysInMonth; day++) {\n          this.last.day = day;\n          if (this.is_day_in_byday(this.last)) {\n            setpos_total++;\n            if (day <= last_day) {\n              setpos++;\n            }\n          }\n        }\n        this.last.day = last_day;\n      }\n\n      data_valid = 0;\n      let day;\n      for (day = this.last.day + 1; day <= daysInMonth; day++) {\n        this.last.day = day;\n\n        if (this.is_day_in_byday(this.last)) {\n          if (!this.has_by_data(\"BYSETPOS\") ||\n              this.check_set_position(++setpos) ||\n              this.check_set_position(setpos - setpos_total - 1)) {\n\n            data_valid = 1;\n            break;\n          }\n        }\n      }\n\n      if (day > daysInMonth) {\n        this.last.day = 1;\n        this.increment_month();\n\n        if (this.is_day_in_byday(this.last)) {\n          if (!this.has_by_data(\"BYSETPOS\") || this.check_set_position(1)) {\n            data_valid = 1;\n          }\n        } else {\n          data_valid = 0;\n        }\n      }\n    } else if (this.has_by_data(\"BYMONTHDAY\")) {\n      this.by_indices.BYMONTHDAY++;\n\n      if (this.by_indices.BYMONTHDAY >= this.by_data.BYMONTHDAY.length) {\n        this.by_indices.BYMONTHDAY = 0;\n        this.increment_month();\n        if (this.by_indices.BYMONTHDAY >= this.by_data.BYMONTHDAY.length) {\n          return 0;\n        }\n      }\n\n      let daysInMonth = Time.daysInMonth(this.last.month, this.last.year);\n      let day = this.by_data.BYMONTHDAY[this.by_indices.BYMONTHDAY];\n\n      if (day < 0) {\n        day = daysInMonth + day + 1;\n      }\n\n      if (day > daysInMonth) {\n        this.last.day = 1;\n        data_valid = this.is_day_in_byday(this.last);\n      } else {\n        this.last.day = day;\n      }\n    } else {\n      this.increment_month();\n      let daysInMonth = Time.daysInMonth(this.last.month, this.last.year);\n      if (this.by_data.BYMONTHDAY[0] > daysInMonth) {\n        data_valid = 0;\n      } else {\n        this.last.day = this.by_data.BYMONTHDAY[0];\n      }\n    }\n\n    return data_valid;\n  }\n\n  next_weekday_by_week() {\n    let end_of_data = 0;\n\n    if (this.next_hour() == 0) {\n      return end_of_data;\n    }\n\n    if (!this.has_by_data(\"BYDAY\")) {\n      return 1;\n    }\n\n    for (;;) {\n      let tt = new Time();\n      this.by_indices.BYDAY++;\n\n      if (this.by_indices.BYDAY == Object.keys(this.by_data.BYDAY).length) {\n        this.by_indices.BYDAY = 0;\n        end_of_data = 1;\n      }\n\n      let coded_day = this.by_data.BYDAY[this.by_indices.BYDAY];\n      let parts = this.ruleDayOfWeek(coded_day);\n      let dow = parts[1];\n\n      dow -= this.rule.wkst;\n\n      if (dow < 0) {\n        dow += 7;\n      }\n\n      tt.year = this.last.year;\n      tt.month = this.last.month;\n      tt.day = this.last.day;\n\n      let startOfWeek = tt.startDoyWeek(this.rule.wkst);\n\n      if (dow + startOfWeek < 1) {\n        // The selected date is in the previous year\n        if (!end_of_data) {\n          continue;\n        }\n      }\n\n      let next = Time.fromDayOfYear(startOfWeek + dow, this.last.year);\n\n      /**\n       * The normalization horrors below are due to\n       * the fact that when the year/month/day changes\n       * it can effect the other operations that come after.\n       */\n      this.last.year = next.year;\n      this.last.month = next.month;\n      this.last.day = next.day;\n\n      return end_of_data;\n    }\n  }\n\n  next_year() {\n    if (this.next_hour() == 0) {\n      return 0;\n    }\n\n    if (++this.days_index == this.days.length) {\n      this.days_index = 0;\n      do {\n        this.increment_year(this.rule.interval);\n        if (this.has_by_data(\"BYMONTHDAY\")) {\n          this.by_data.BYMONTHDAY = this.normalizeByMonthDayRules(\n            this.last.year,\n            this.last.month,\n            this.rule.parts.BYMONTHDAY\n          );\n        }\n        this.expand_year_days(this.last.year);\n      } while (this.days.length == 0);\n    }\n\n    this._nextByYearDay();\n\n    return 1;\n  }\n\n  _nextByYearDay() {\n    let doy = this.days[this.days_index];\n    let year = this.last.year;\n    if (doy < 1) {\n        // Time.fromDayOfYear(doy, year) indexes relative to the\n        // start of the given year. That is different from the\n        // semantics of BYYEARDAY where negative indexes are an\n        // offset from the end of the given year.\n        doy += 1;\n        year += 1;\n    }\n    let next = Time.fromDayOfYear(doy, year);\n    this.last.day = next.day;\n    this.last.month = next.month;\n  }\n\n  /**\n   * @param dow (eg: '1TU', '-1MO')\n   * @param {weekDay=} aWeekStart The week start weekday\n   * @return [pos, numericDow] (eg: [1, 3]) numericDow is relative to aWeekStart\n   */\n  ruleDayOfWeek(dow, aWeekStart) {\n    let matches = dow.match(/([+-]?[0-9])?(MO|TU|WE|TH|FR|SA|SU)/);\n    if (matches) {\n      let pos = parseInt(matches[1] || 0, 10);\n      dow = Recur.icalDayToNumericDay(matches[2], aWeekStart);\n      return [pos, dow];\n    } else {\n      return [0, 0];\n    }\n  }\n\n  next_generic(aRuleType, aInterval, aDateAttr, aFollowingAttr, aPreviousIncr) {\n    let has_by_rule = (aRuleType in this.by_data);\n    let this_freq = (this.rule.freq == aInterval);\n    let end_of_data = 0;\n\n    if (aPreviousIncr && this[aPreviousIncr]() == 0) {\n      return end_of_data;\n    }\n\n    if (has_by_rule) {\n      this.by_indices[aRuleType]++;\n      let dta = this.by_data[aRuleType];\n\n      if (this.by_indices[aRuleType] == dta.length) {\n        this.by_indices[aRuleType] = 0;\n        end_of_data = 1;\n      }\n      this.last[aDateAttr] = dta[this.by_indices[aRuleType]];\n    } else if (this_freq) {\n      this[\"increment_\" + aDateAttr](this.rule.interval);\n    }\n\n    if (has_by_rule && end_of_data && this_freq) {\n      this[\"increment_\" + aFollowingAttr](1);\n    }\n\n    return end_of_data;\n  }\n\n  increment_monthday(inc) {\n    for (let i = 0; i < inc; i++) {\n      let daysInMonth = Time.daysInMonth(this.last.month, this.last.year);\n      this.last.day++;\n\n      if (this.last.day > daysInMonth) {\n        this.last.day -= daysInMonth;\n        this.increment_month();\n      }\n    }\n  }\n\n  increment_month() {\n    this.last.day = 1;\n    if (this.has_by_data(\"BYMONTH\")) {\n      this.by_indices.BYMONTH++;\n\n      if (this.by_indices.BYMONTH == this.by_data.BYMONTH.length) {\n        this.by_indices.BYMONTH = 0;\n        this.increment_year(1);\n      }\n\n      this.last.month = this.by_data.BYMONTH[this.by_indices.BYMONTH];\n    } else {\n      if (this.rule.freq == \"MONTHLY\") {\n        this.last.month += this.rule.interval;\n      } else {\n        this.last.month++;\n      }\n\n      this.last.month--;\n      let years = trunc(this.last.month / 12);\n      this.last.month %= 12;\n      this.last.month++;\n\n      if (years != 0) {\n        this.increment_year(years);\n      }\n    }\n\n    if (this.has_by_data(\"BYMONTHDAY\")) {\n      this.by_data.BYMONTHDAY = this.normalizeByMonthDayRules(\n        this.last.year,\n        this.last.month,\n        this.rule.parts.BYMONTHDAY\n      );\n    }\n  }\n\n  increment_year(inc) {\n    // Don't jump into the next month if this.last is Feb 29.\n    this.last.day = 1;\n    this.last.year += inc;\n  }\n\n  increment_generic(inc, aDateAttr, aFactor, aNextIncrement) {\n    this.last[aDateAttr] += inc;\n    let nextunit = trunc(this.last[aDateAttr] / aFactor);\n    this.last[aDateAttr] %= aFactor;\n    if (nextunit != 0) {\n      this[\"increment_\" + aNextIncrement](nextunit);\n    }\n  }\n\n  has_by_data(aRuleType) {\n    return (aRuleType in this.rule.parts);\n  }\n\n  expand_year_days(aYear) {\n    let t = new Time();\n    this.days = [];\n\n    // We need our own copy with a few keys set\n    let parts = {};\n    let rules = [\"BYDAY\", \"BYWEEKNO\", \"BYMONTHDAY\", \"BYMONTH\", \"BYYEARDAY\"];\n    for (let part of rules) {\n      if (part in this.rule.parts) {\n        parts[part] = this.rule.parts[part];\n      }\n    }\n\n    if (\"BYMONTH\" in parts && \"BYWEEKNO\" in parts) {\n      let valid = 1;\n      let validWeeks = {};\n      t.year = aYear;\n      t.isDate = true;\n\n      for (let monthIdx = 0; monthIdx < this.by_data.BYMONTH.length; monthIdx++) {\n        let month = this.by_data.BYMONTH[monthIdx];\n        t.month = month;\n        t.day = 1;\n        let first_week = t.weekNumber(this.rule.wkst);\n        t.day = Time.daysInMonth(month, aYear);\n        let last_week = t.weekNumber(this.rule.wkst);\n        for (monthIdx = first_week; monthIdx < last_week; monthIdx++) {\n          validWeeks[monthIdx] = 1;\n        }\n      }\n\n      for (let weekIdx = 0; weekIdx < this.by_data.BYWEEKNO.length && valid; weekIdx++) {\n        let weekno = this.by_data.BYWEEKNO[weekIdx];\n        if (weekno < 52) {\n          valid &= validWeeks[weekIdx];\n        } else {\n          valid = 0;\n        }\n      }\n\n      if (valid) {\n        delete parts.BYMONTH;\n      } else {\n        delete parts.BYWEEKNO;\n      }\n    }\n\n    let partCount = Object.keys(parts).length;\n\n    if (partCount == 0) {\n      let t1 = this.dtstart.clone();\n      t1.year = this.last.year;\n      this.days.push(t1.dayOfYear());\n    } else if (partCount == 1 && \"BYMONTH\" in parts) {\n      for (let month of this.by_data.BYMONTH) {\n        let t2 = this.dtstart.clone();\n        t2.year = aYear;\n        t2.month = month;\n        t2.isDate = true;\n        this.days.push(t2.dayOfYear());\n      }\n    } else if (partCount == 1 && \"BYMONTHDAY\" in parts) {\n      for (let monthday of this.by_data.BYMONTHDAY) {\n        let t3 = this.dtstart.clone();\n        if (monthday < 0) {\n          let daysInMonth = Time.daysInMonth(t3.month, aYear);\n          monthday = monthday + daysInMonth + 1;\n        }\n        t3.day = monthday;\n        t3.year = aYear;\n        t3.isDate = true;\n        this.days.push(t3.dayOfYear());\n      }\n    } else if (partCount == 2 &&\n               \"BYMONTHDAY\" in parts &&\n               \"BYMONTH\" in parts) {\n      for (let month of this.by_data.BYMONTH) {\n        let daysInMonth = Time.daysInMonth(month, aYear);\n        for (let monthday of this.by_data.BYMONTHDAY) {\n          if (monthday < 0) {\n            monthday = monthday + daysInMonth + 1;\n          }\n          t.day = monthday;\n          t.month = month;\n          t.year = aYear;\n          t.isDate = true;\n\n          this.days.push(t.dayOfYear());\n        }\n      }\n    } else if (partCount == 1 && \"BYWEEKNO\" in parts) ; else if (partCount == 2 &&\n               \"BYWEEKNO\" in parts &&\n               \"BYMONTHDAY\" in parts) ; else if (partCount == 1 && \"BYDAY\" in parts) {\n      this.days = this.days.concat(this.expand_by_day(aYear));\n    } else if (partCount == 2 && \"BYDAY\" in parts && \"BYMONTH\" in parts) {\n      for (let month of this.by_data.BYMONTH) {\n        let daysInMonth = Time.daysInMonth(month, aYear);\n\n        t.year = aYear;\n        t.month = month;\n        t.day = 1;\n        t.isDate = true;\n\n        let first_dow = t.dayOfWeek();\n        let doy_offset = t.dayOfYear() - 1;\n\n        t.day = daysInMonth;\n        let last_dow = t.dayOfWeek();\n\n        if (this.has_by_data(\"BYSETPOS\")) {\n          let by_month_day = [];\n          for (let day = 1; day <= daysInMonth; day++) {\n            t.day = day;\n            if (this.is_day_in_byday(t)) {\n              by_month_day.push(day);\n            }\n          }\n\n          for (let spIndex = 0; spIndex < by_month_day.length; spIndex++) {\n            if (this.check_set_position(spIndex + 1) ||\n                this.check_set_position(spIndex - by_month_day.length)) {\n              this.days.push(doy_offset + by_month_day[spIndex]);\n            }\n          }\n        } else {\n          for (let coded_day of this.by_data.BYDAY) {\n            let bydayParts = this.ruleDayOfWeek(coded_day);\n            let pos = bydayParts[0];\n            let dow = bydayParts[1];\n            let month_day;\n\n            let first_matching_day = ((dow + 7 - first_dow) % 7) + 1;\n            let last_matching_day = daysInMonth - ((last_dow + 7 - dow) % 7);\n\n            if (pos == 0) {\n              for (let day = first_matching_day; day <= daysInMonth; day += 7) {\n                this.days.push(doy_offset + day);\n              }\n            } else if (pos > 0) {\n              month_day = first_matching_day + (pos - 1) * 7;\n\n              if (month_day <= daysInMonth) {\n                this.days.push(doy_offset + month_day);\n              }\n            } else {\n              month_day = last_matching_day + (pos + 1) * 7;\n\n              if (month_day > 0) {\n                this.days.push(doy_offset + month_day);\n              }\n            }\n          }\n        }\n      }\n      // Return dates in order of occurrence (1,2,3,...) instead\n      // of by groups of weekdays (1,8,15,...,2,9,16,...).\n      this.days.sort(function(a, b) { return a - b; }); // Comparator function allows to sort numbers.\n    } else if (partCount == 2 && \"BYDAY\" in parts && \"BYMONTHDAY\" in parts) {\n      let expandedDays = this.expand_by_day(aYear);\n\n      for (let day of expandedDays) {\n        let tt = Time.fromDayOfYear(day, aYear);\n        if (this.by_data.BYMONTHDAY.indexOf(tt.day) >= 0) {\n          this.days.push(day);\n        }\n      }\n    } else if (partCount == 3 &&\n               \"BYDAY\" in parts &&\n               \"BYMONTHDAY\" in parts &&\n               \"BYMONTH\" in parts) {\n      let expandedDays = this.expand_by_day(aYear);\n\n      for (let day of expandedDays) {\n        let tt = Time.fromDayOfYear(day, aYear);\n\n        if (this.by_data.BYMONTH.indexOf(tt.month) >= 0 &&\n            this.by_data.BYMONTHDAY.indexOf(tt.day) >= 0) {\n          this.days.push(day);\n        }\n      }\n    } else if (partCount == 2 && \"BYDAY\" in parts && \"BYWEEKNO\" in parts) {\n      let expandedDays = this.expand_by_day(aYear);\n\n      for (let day of expandedDays) {\n        let tt = Time.fromDayOfYear(day, aYear);\n        let weekno = tt.weekNumber(this.rule.wkst);\n\n        if (this.by_data.BYWEEKNO.indexOf(weekno)) {\n          this.days.push(day);\n        }\n      }\n    } else if (partCount == 3 &&\n               \"BYDAY\" in parts &&\n               \"BYWEEKNO\" in parts &&\n               \"BYMONTHDAY\" in parts) ; else if (partCount == 1 && \"BYYEARDAY\" in parts) {\n      this.days = this.days.concat(this.by_data.BYYEARDAY);\n    } else if (partCount == 2 && \"BYYEARDAY\" in parts && \"BYDAY\" in parts) {\n      let daysInYear = Time.isLeapYear(aYear) ? 366 : 365;\n      let expandedDays = new Set(this.expand_by_day(aYear));\n\n      for (let doy of this.by_data.BYYEARDAY) {\n        if (doy < 0) {\n          doy += daysInYear + 1;\n        }\n\n        if (expandedDays.has(doy)) {\n          this.days.push(doy);\n        }\n      }\n    } else {\n      this.days = [];\n    }\n\n    let daysInYear = Time.isLeapYear(aYear) ? 366 : 365;\n    this.days.sort((a, b) => {\n      if (a < 0) a += daysInYear + 1;\n      if (b < 0) b += daysInYear + 1;\n      return a - b;\n    });\n\n    return 0;\n  }\n\n  expand_by_day(aYear) {\n\n    let days_list = [];\n    let tmp = this.last.clone();\n\n    tmp.year = aYear;\n    tmp.month = 1;\n    tmp.day = 1;\n    tmp.isDate = true;\n\n    let start_dow = tmp.dayOfWeek();\n\n    tmp.month = 12;\n    tmp.day = 31;\n    tmp.isDate = true;\n\n    let end_dow = tmp.dayOfWeek();\n    let end_year_day = tmp.dayOfYear();\n\n    for (let day of this.by_data.BYDAY) {\n      let parts = this.ruleDayOfWeek(day);\n      let pos = parts[0];\n      let dow = parts[1];\n\n      if (pos == 0) {\n        let tmp_start_doy = ((dow + 7 - start_dow) % 7) + 1;\n\n        for (let doy = tmp_start_doy; doy <= end_year_day; doy += 7) {\n          days_list.push(doy);\n        }\n\n      } else if (pos > 0) {\n        let first;\n        if (dow >= start_dow) {\n          first = dow - start_dow + 1;\n        } else {\n          first = dow - start_dow + 8;\n        }\n\n        days_list.push(first + (pos - 1) * 7);\n      } else {\n        let last;\n        pos = -pos;\n\n        if (dow <= end_dow) {\n          last = end_year_day - end_dow + dow;\n        } else {\n          last = end_year_day - end_dow + dow - 7;\n        }\n\n        days_list.push(last - (pos - 1) * 7);\n      }\n    }\n    return days_list;\n  }\n\n  is_day_in_byday(tt) {\n    if (this.by_data.BYDAY) {\n      for (let day of this.by_data.BYDAY) {\n        let parts = this.ruleDayOfWeek(day);\n        let pos = parts[0];\n        let dow = parts[1];\n        let this_dow = tt.dayOfWeek();\n\n        if ((pos == 0 && dow == this_dow) ||\n            (tt.nthWeekDay(dow, pos) == tt.day)) {\n          return 1;\n        }\n      }\n    }\n\n    return 0;\n  }\n\n  /**\n   * Checks if given value is in BYSETPOS.\n   *\n   * @private\n   * @param {Numeric} aPos position to check for.\n   * @return {Boolean} false unless BYSETPOS rules exist\n   *                   and the given value is present in rules.\n   */\n  check_set_position(aPos) {\n    if (this.has_by_data('BYSETPOS')) {\n      let idx = this.by_data.BYSETPOS.indexOf(aPos);\n      // negative numbers are not false-y\n      return idx !== -1;\n    }\n    return false;\n  }\n\n  sort_byday_rules(aRules) {\n    for (let i = 0; i < aRules.length; i++) {\n      for (let j = 0; j < i; j++) {\n        let one = this.ruleDayOfWeek(aRules[j], this.rule.wkst)[1];\n        let two = this.ruleDayOfWeek(aRules[i], this.rule.wkst)[1];\n\n        if (one > two) {\n          let tmp = aRules[i];\n          aRules[i] = aRules[j];\n          aRules[j] = tmp;\n        }\n      }\n    }\n  }\n\n  check_contract_restriction(aRuleType, v) {\n    let indexMapValue = RecurIterator._indexMap[aRuleType];\n    let ruleMapValue = RecurIterator._expandMap[this.rule.freq][indexMapValue];\n    let pass = false;\n\n    if (aRuleType in this.by_data &&\n        ruleMapValue == RecurIterator.CONTRACT) {\n\n      let ruleType = this.by_data[aRuleType];\n\n      for (let bydata of ruleType) {\n        if (bydata == v) {\n          pass = true;\n          break;\n        }\n      }\n    } else {\n      // Not a contracting byrule or has no data, test passes\n      pass = true;\n    }\n    return pass;\n  }\n\n  check_contracting_rules() {\n    let dow = this.last.dayOfWeek();\n    let weekNo = this.last.weekNumber(this.rule.wkst);\n    let doy = this.last.dayOfYear();\n\n    return (this.check_contract_restriction(\"BYSECOND\", this.last.second) &&\n            this.check_contract_restriction(\"BYMINUTE\", this.last.minute) &&\n            this.check_contract_restriction(\"BYHOUR\", this.last.hour) &&\n            this.check_contract_restriction(\"BYDAY\", Recur.numericDayToIcalDay(dow)) &&\n            this.check_contract_restriction(\"BYWEEKNO\", weekNo) &&\n            this.check_contract_restriction(\"BYMONTHDAY\", this.last.day) &&\n            this.check_contract_restriction(\"BYMONTH\", this.last.month) &&\n            this.check_contract_restriction(\"BYYEARDAY\", doy));\n  }\n\n  setup_defaults(aRuleType, req, deftime) {\n    let indexMapValue = RecurIterator._indexMap[aRuleType];\n    let ruleMapValue = RecurIterator._expandMap[this.rule.freq][indexMapValue];\n\n    if (ruleMapValue != RecurIterator.CONTRACT) {\n      if (!(aRuleType in this.by_data)) {\n        this.by_data[aRuleType] = [deftime];\n      }\n      if (this.rule.freq != req) {\n        return this.by_data[aRuleType][0];\n      }\n    }\n    return deftime;\n  }\n\n  /**\n   * Convert iterator into a serialize-able object.  Will preserve current\n   * iteration sequence to ensure the seamless continuation of the recurrence\n   * rule.\n   * @return {Object}\n   */\n  toJSON() {\n    let result = Object.create(null);\n\n    result.initialized = this.initialized;\n    result.rule = this.rule.toJSON();\n    result.dtstart = this.dtstart.toJSON();\n    result.by_data = this.by_data;\n    result.days = this.days;\n    result.last = this.last.toJSON();\n    result.by_indices = this.by_indices;\n    result.occurrence_number = this.occurrence_number;\n\n    return result;\n  }\n}\n\n/**\n * An error indicating that a recurrence rule is invalid and produces no\n * occurrences.\n *\n * @extends {Error}\n * @class\n */\nclass InvalidRecurrenceRuleError extends Error {\n  constructor() {\n    super(\"Recurrence rule has no valid occurrences\");\n  }\n}\n\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch */\n\n\n/**\n * This lets typescript resolve our custom types in the\n * generated d.ts files (jsdoc typedefs are converted to typescript types).\n * Ignore prevents the typedefs from being documented more than once.\n *\n * @ignore\n * @typedef {import(\"./types.js\").weekDay} weekDay\n * Imports the 'weekDay' type from the \"types.js\" module\n * @typedef {import(\"./types.js\").frequencyValues} frequencyValues\n * Imports the 'frequencyValues' type from the \"types.js\" module\n */\n\nconst VALID_DAY_NAMES = /^(SU|MO|TU|WE|TH|FR|SA)$/;\nconst VALID_BYDAY_PART = /^([+-])?(5[0-3]|[1-4][0-9]|[1-9])?(SU|MO|TU|WE|TH|FR|SA)$/;\nconst DOW_MAP = {\n  SU: Time.SUNDAY,\n  MO: Time.MONDAY,\n  TU: Time.TUESDAY,\n  WE: Time.WEDNESDAY,\n  TH: Time.THURSDAY,\n  FR: Time.FRIDAY,\n  SA: Time.SATURDAY\n};\n\nconst REVERSE_DOW_MAP = Object.fromEntries(Object.entries(DOW_MAP).map(entry => entry.reverse()));\n\nconst ALLOWED_FREQ = ['SECONDLY', 'MINUTELY', 'HOURLY',\n                      'DAILY', 'WEEKLY', 'MONTHLY', 'YEARLY'];\n\n/**\n * This class represents the \"recur\" value type, used for example by RRULE. It provides methods to\n * calculate occurrences among others.\n *\n * @memberof ICAL\n */\nclass Recur {\n  /**\n   * Creates a new {@link ICAL.Recur} instance from the passed string.\n   *\n   * @param {String} string         The string to parse\n   * @return {Recur}                The created recurrence instance\n   */\n  static fromString(string) {\n    let data = this._stringToData(string, false);\n    return new Recur(data);\n  }\n\n  /**\n   * Creates a new {@link ICAL.Recur} instance using members from the passed\n   * data object.\n   *\n   * @param {Object} aData                              An object with members of the recurrence\n   * @param {frequencyValues=} aData.freq               The frequency value\n   * @param {Number=} aData.interval                    The INTERVAL value\n   * @param {weekDay=} aData.wkst                       The week start value\n   * @param {Time=} aData.until                         The end of the recurrence set\n   * @param {Number=} aData.count                       The number of occurrences\n   * @param {Array.<Number>=} aData.bysecond            The seconds for the BYSECOND part\n   * @param {Array.<Number>=} aData.byminute            The minutes for the BYMINUTE part\n   * @param {Array.<Number>=} aData.byhour              The hours for the BYHOUR part\n   * @param {Array.<String>=} aData.byday               The BYDAY values\n   * @param {Array.<Number>=} aData.bymonthday          The days for the BYMONTHDAY part\n   * @param {Array.<Number>=} aData.byyearday           The days for the BYYEARDAY part\n   * @param {Array.<Number>=} aData.byweekno            The weeks for the BYWEEKNO part\n   * @param {Array.<Number>=} aData.bymonth             The month for the BYMONTH part\n   * @param {Array.<Number>=} aData.bysetpos            The positionals for the BYSETPOS part\n   */\n  static fromData(aData) {\n    return new Recur(aData);\n  }\n\n  /**\n   * Converts a recurrence string to a data object, suitable for the fromData\n   * method.\n   *\n   * @private\n   * @param {String} string     The string to parse\n   * @param {Boolean} fmtIcal   If true, the string is considered to be an\n   *                              iCalendar string\n   * @return {Recur}            The recurrence instance\n   */\n  static _stringToData(string, fmtIcal) {\n    let dict = Object.create(null);\n\n    // split is slower in FF but fast enough.\n    // v8 however this is faster then manual split?\n    let values = string.split(';');\n    let len = values.length;\n\n    for (let i = 0; i < len; i++) {\n      let parts = values[i].split('=');\n      let ucname = parts[0].toUpperCase();\n      let lcname = parts[0].toLowerCase();\n      let name = (fmtIcal ? lcname : ucname);\n      let value = parts[1];\n\n      if (ucname in partDesign) {\n        let partArr = value.split(',');\n        let partSet = new Set();\n\n        for (let part of partArr) {\n          partSet.add(partDesign[ucname](part));\n        }\n        partArr = [...partSet];\n\n        dict[name] = (partArr.length == 1 ? partArr[0] : partArr);\n      } else if (ucname in optionDesign) {\n        optionDesign[ucname](value, dict, fmtIcal);\n      } else {\n        // Don't swallow unknown values. Just set them as they are.\n        dict[lcname] = value;\n      }\n    }\n\n    return dict;\n  }\n\n  /**\n   * Convert an ical representation of a day (SU, MO, etc..)\n   * into a numeric value of that day.\n   *\n   * @param {String} string     The iCalendar day name\n   * @param {weekDay=} aWeekStart\n   *        The week start weekday, defaults to SUNDAY\n   * @return {Number}           Numeric value of given day\n   */\n  static icalDayToNumericDay(string, aWeekStart) {\n    //XXX: this is here so we can deal\n    //     with possibly invalid string values.\n    let firstDow = aWeekStart || Time.SUNDAY;\n    return ((DOW_MAP[string] - firstDow + 7) % 7) + 1;\n  }\n\n  /**\n   * Convert a numeric day value into its ical representation (SU, MO, etc..)\n   *\n   * @param {Number} num        Numeric value of given day\n   * @param {weekDay=} aWeekStart\n   *        The week start weekday, defaults to SUNDAY\n   * @return {String}           The ICAL day value, e.g SU,MO,...\n   */\n  static numericDayToIcalDay(num, aWeekStart) {\n    //XXX: this is here so we can deal with possibly invalid number values.\n    //     Also, this allows consistent mapping between day numbers and day\n    //     names for external users.\n    let firstDow = aWeekStart || Time.SUNDAY;\n    let dow = (num + firstDow - Time.SUNDAY);\n    if (dow > 7) {\n      dow -= 7;\n    }\n    return REVERSE_DOW_MAP[dow];\n  }\n\n  /**\n   * Create a new instance of the Recur class.\n   *\n   * @param {Object} data                               An object with members of the recurrence\n   * @param {frequencyValues=} data.freq                The frequency value\n   * @param {Number=} data.interval                     The INTERVAL value\n   * @param {weekDay=} data.wkst                        The week start value\n   * @param {Time=} data.until                          The end of the recurrence set\n   * @param {Number=} data.count                        The number of occurrences\n   * @param {Array.<Number>=} data.bysecond             The seconds for the BYSECOND part\n   * @param {Array.<Number>=} data.byminute             The minutes for the BYMINUTE part\n   * @param {Array.<Number>=} data.byhour               The hours for the BYHOUR part\n   * @param {Array.<String>=} data.byday                The BYDAY values\n   * @param {Array.<Number>=} data.bymonthday           The days for the BYMONTHDAY part\n   * @param {Array.<Number>=} data.byyearday            The days for the BYYEARDAY part\n   * @param {Array.<Number>=} data.byweekno             The weeks for the BYWEEKNO part\n   * @param {Array.<Number>=} data.bymonth              The month for the BYMONTH part\n   * @param {Array.<Number>=} data.bysetpos             The positionals for the BYSETPOS part\n   */\n  constructor(data) {\n    this.wrappedJSObject = this;\n    this.parts = {};\n\n    if (data && typeof(data) === 'object') {\n      this.fromData(data);\n    }\n  }\n\n  /**\n   * An object holding the BY-parts of the recurrence rule\n   * @memberof ICAL.Recur\n   * @typedef {Object} byParts\n   * @property {Array.<Number>=} BYSECOND            The seconds for the BYSECOND part\n   * @property {Array.<Number>=} BYMINUTE            The minutes for the BYMINUTE part\n   * @property {Array.<Number>=} BYHOUR              The hours for the BYHOUR part\n   * @property {Array.<String>=} BYDAY               The BYDAY values\n   * @property {Array.<Number>=} BYMONTHDAY          The days for the BYMONTHDAY part\n   * @property {Array.<Number>=} BYYEARDAY           The days for the BYYEARDAY part\n   * @property {Array.<Number>=} BYWEEKNO            The weeks for the BYWEEKNO part\n   * @property {Array.<Number>=} BYMONTH             The month for the BYMONTH part\n   * @property {Array.<Number>=} BYSETPOS            The positionals for the BYSETPOS part\n   */\n\n  /**\n   * An object holding the BY-parts of the recurrence rule\n   * @type {byParts}\n   */\n  parts = null;\n\n  /**\n   * The interval value for the recurrence rule.\n   * @type {Number}\n   */\n  interval = 1;\n\n  /**\n   * The week start day\n   *\n   * @type {weekDay}\n   * @default ICAL.Time.MONDAY\n   */\n  wkst = Time.MONDAY;\n\n  /**\n   * The end of the recurrence\n   * @type {?Time}\n   */\n  until = null;\n\n  /**\n   * The maximum number of occurrences\n   * @type {?Number}\n   */\n  count = null;\n\n  /**\n   * The frequency value.\n   * @type {frequencyValues}\n   */\n  freq = null;\n\n  /**\n   * The class identifier.\n   * @constant\n   * @type {String}\n   * @default \"icalrecur\"\n   */\n  icalclass = \"icalrecur\";\n\n  /**\n   * The type name, to be used in the jCal object.\n   * @constant\n   * @type {String}\n   * @default \"recur\"\n   */\n  icaltype = \"recur\";\n\n  /**\n   * Create a new iterator for this recurrence rule. The passed start date\n   * must be the start date of the event, not the start of the range to\n   * search in.\n   *\n   * @example\n   * let recur = comp.getFirstPropertyValue('rrule');\n   * let dtstart = comp.getFirstPropertyValue('dtstart');\n   * let iter = recur.iterator(dtstart);\n   * for (let next = iter.next(); next; next = iter.next()) {\n   *   if (next.compare(rangeStart) < 0) {\n   *     continue;\n   *   }\n   *   console.log(next.toString());\n   * }\n   *\n   * @param {Time} aStart        The item's start date\n   * @return {RecurIterator}     The recurrence iterator\n   */\n  iterator(aStart) {\n    return new RecurIterator({\n      rule: this,\n      dtstart: aStart\n    });\n  }\n\n  /**\n   * Returns a clone of the recurrence object.\n   *\n   * @return {Recur}      The cloned object\n   */\n  clone() {\n    return new Recur(this.toJSON());\n  }\n\n  /**\n   * Checks if the current rule is finite, i.e. has a count or until part.\n   *\n   * @return {Boolean}        True, if the rule is finite\n   */\n  isFinite() {\n    return !!(this.count || this.until);\n  }\n\n  /**\n   * Checks if the current rule has a count part, and not limited by an until\n   * part.\n   *\n   * @return {Boolean}        True, if the rule is by count\n   */\n  isByCount() {\n    return !!(this.count && !this.until);\n  }\n\n  /**\n   * Adds a component (part) to the recurrence rule. This is not a component\n   * in the sense of {@link ICAL.Component}, but a part of the recurrence\n   * rule, i.e. BYMONTH.\n   *\n   * @param {String} aType            The name of the component part\n   * @param {Array|String} aValue     The component value\n   */\n  addComponent(aType, aValue) {\n    let ucname = aType.toUpperCase();\n    if (ucname in this.parts) {\n      this.parts[ucname].push(aValue);\n    } else {\n      this.parts[ucname] = [aValue];\n    }\n  }\n\n  /**\n   * Sets the component value for the given by-part.\n   *\n   * @param {String} aType        The component part name\n   * @param {Array} aValues       The component values\n   */\n  setComponent(aType, aValues) {\n    this.parts[aType.toUpperCase()] = aValues.slice();\n  }\n\n  /**\n   * Gets (a copy) of the requested component value.\n   *\n   * @param {String} aType        The component part name\n   * @return {Array}              The component part value\n   */\n  getComponent(aType) {\n    let ucname = aType.toUpperCase();\n    return (ucname in this.parts ? this.parts[ucname].slice() : []);\n  }\n\n  /**\n   * Retrieves the next occurrence after the given recurrence id. See the\n   * guide on {@tutorial terminology} for more details.\n   *\n   * NOTE: Currently, this method iterates all occurrences from the start\n   * date. It should not be called in a loop for performance reasons. If you\n   * would like to get more than one occurrence, you can iterate the\n   * occurrences manually, see the example on the\n   * {@link ICAL.Recur#iterator iterator} method.\n   *\n   * @param {Time} aStartTime        The start of the event series\n   * @param {Time} aRecurrenceId     The date of the last occurrence\n   * @return {Time}                  The next occurrence after\n   */\n  getNextOccurrence(aStartTime, aRecurrenceId) {\n    let iter = this.iterator(aStartTime);\n    let next;\n\n    do {\n      next = iter.next();\n    } while (next && next.compare(aRecurrenceId) <= 0);\n\n    if (next && aRecurrenceId.zone) {\n      next.zone = aRecurrenceId.zone;\n    }\n\n    return next;\n  }\n\n  /**\n   * Sets up the current instance using members from the passed data object.\n   *\n   * @param {Object} data                               An object with members of the recurrence\n   * @param {frequencyValues=} data.freq                The frequency value\n   * @param {Number=} data.interval                     The INTERVAL value\n   * @param {weekDay=} data.wkst                        The week start value\n   * @param {Time=} data.until                          The end of the recurrence set\n   * @param {Number=} data.count                        The number of occurrences\n   * @param {Array.<Number>=} data.bysecond             The seconds for the BYSECOND part\n   * @param {Array.<Number>=} data.byminute             The minutes for the BYMINUTE part\n   * @param {Array.<Number>=} data.byhour               The hours for the BYHOUR part\n   * @param {Array.<String>=} data.byday                The BYDAY values\n   * @param {Array.<Number>=} data.bymonthday           The days for the BYMONTHDAY part\n   * @param {Array.<Number>=} data.byyearday            The days for the BYYEARDAY part\n   * @param {Array.<Number>=} data.byweekno             The weeks for the BYWEEKNO part\n   * @param {Array.<Number>=} data.bymonth              The month for the BYMONTH part\n   * @param {Array.<Number>=} data.bysetpos             The positionals for the BYSETPOS part\n   */\n  fromData(data) {\n    for (let key in data) {\n      let uckey = key.toUpperCase();\n\n      if (uckey in partDesign) {\n        if (Array.isArray(data[key])) {\n          this.parts[uckey] = data[key];\n        } else {\n          this.parts[uckey] = [data[key]];\n        }\n      } else {\n        this[key] = data[key];\n      }\n    }\n\n    if (this.interval && typeof this.interval != \"number\") {\n      optionDesign.INTERVAL(this.interval, this);\n    }\n\n    if (this.wkst && typeof this.wkst != \"number\") {\n      this.wkst = Recur.icalDayToNumericDay(this.wkst);\n    }\n\n    if (this.until && !(this.until instanceof Time)) {\n      this.until = Time.fromString(this.until);\n    }\n  }\n\n  /**\n   * The jCal representation of this recurrence type.\n   * @return {Object}\n   */\n  toJSON() {\n    let res = Object.create(null);\n    res.freq = this.freq;\n\n    if (this.count) {\n      res.count = this.count;\n    }\n\n    if (this.interval > 1) {\n      res.interval = this.interval;\n    }\n\n    for (let [k, kparts] of Object.entries(this.parts)) {\n      if (Array.isArray(kparts) && kparts.length == 1) {\n        res[k.toLowerCase()] = kparts[0];\n      } else {\n        res[k.toLowerCase()] = clone(kparts);\n      }\n    }\n\n    if (this.until) {\n      res.until = this.until.toString();\n    }\n    if ('wkst' in this && this.wkst !== Time.DEFAULT_WEEK_START) {\n      res.wkst = Recur.numericDayToIcalDay(this.wkst);\n    }\n    return res;\n  }\n\n  /**\n   * The string representation of this recurrence rule.\n   * @return {String}\n   */\n  toString() {\n    // TODO retain order\n    let str = \"FREQ=\" + this.freq;\n    if (this.count) {\n      str += \";COUNT=\" + this.count;\n    }\n    if (this.interval > 1) {\n      str += \";INTERVAL=\" + this.interval;\n    }\n    for (let [k, v] of Object.entries(this.parts)) {\n      str += \";\" + k + \"=\" + v;\n    }\n    if (this.until) {\n      str += ';UNTIL=' + this.until.toICALString();\n    }\n    if ('wkst' in this && this.wkst !== Time.DEFAULT_WEEK_START) {\n      str += ';WKST=' + Recur.numericDayToIcalDay(this.wkst);\n    }\n    return str;\n  }\n}\n\nfunction parseNumericValue(type, min, max, value) {\n  let result = value;\n\n  if (value[0] === '+') {\n    result = value.slice(1);\n  }\n\n  result = strictParseInt(result);\n\n  if (min !== undefined && value < min) {\n    throw new Error(\n      type + ': invalid value \"' + value + '\" must be > ' + min\n    );\n  }\n\n  if (max !== undefined && value > max) {\n    throw new Error(\n      type + ': invalid value \"' + value + '\" must be < ' + min\n    );\n  }\n\n  return result;\n}\n\nconst optionDesign = {\n  FREQ: function(value, dict, fmtIcal) {\n    // yes this is actually equal or faster then regex.\n    // upside here is we can enumerate the valid values.\n    if (ALLOWED_FREQ.indexOf(value) !== -1) {\n      dict.freq = value;\n    } else {\n      throw new Error(\n        'invalid frequency \"' + value + '\" expected: \"' +\n        ALLOWED_FREQ.join(', ') + '\"'\n      );\n    }\n  },\n\n  COUNT: function(value, dict, fmtIcal) {\n    dict.count = strictParseInt(value);\n  },\n\n  INTERVAL: function(value, dict, fmtIcal) {\n    dict.interval = strictParseInt(value);\n    if (dict.interval < 1) {\n      // 0 or negative values are not allowed, some engines seem to generate\n      // it though. Assume 1 instead.\n      dict.interval = 1;\n    }\n  },\n\n  UNTIL: function(value, dict, fmtIcal) {\n    if (value.length > 10) {\n      dict.until = design.icalendar.value['date-time'].fromICAL(value);\n    } else {\n      dict.until = design.icalendar.value.date.fromICAL(value);\n    }\n    if (!fmtIcal) {\n      dict.until = Time.fromString(dict.until);\n    }\n  },\n\n  WKST: function(value, dict, fmtIcal) {\n    if (VALID_DAY_NAMES.test(value)) {\n      dict.wkst = Recur.icalDayToNumericDay(value);\n    } else {\n      throw new Error('invalid WKST value \"' + value + '\"');\n    }\n  }\n};\n\nconst partDesign = {\n  BYSECOND: parseNumericValue.bind(undefined, 'BYSECOND', 0, 60),\n  BYMINUTE: parseNumericValue.bind(undefined, 'BYMINUTE', 0, 59),\n  BYHOUR: parseNumericValue.bind(undefined, 'BYHOUR', 0, 23),\n  BYDAY: function(value) {\n    if (VALID_BYDAY_PART.test(value)) {\n      return value;\n    } else {\n      throw new Error('invalid BYDAY value \"' + value + '\"');\n    }\n  },\n  BYMONTHDAY: parseNumericValue.bind(undefined, 'BYMONTHDAY', -31, 31),\n  BYYEARDAY: parseNumericValue.bind(undefined, 'BYYEARDAY', -366, 366),\n  BYWEEKNO: parseNumericValue.bind(undefined, 'BYWEEKNO', -53, 53),\n  BYMONTH: parseNumericValue.bind(undefined, 'BYMONTH', 1, 12),\n  BYSETPOS: parseNumericValue.bind(undefined, 'BYSETPOS', -366, 366)\n};\n\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch */\n\n\n/**\n * This lets typescript resolve our custom types in the\n * generated d.ts files (jsdoc typedefs are converted to typescript types).\n * Ignore prevents the typedefs from being documented more than once.\n * @ignore\n * @typedef {import(\"./types.js\").designSet} designSet\n * Imports the 'designSet' type from the \"types.js\" module\n */\n\n/** @module ICAL.design */\n\nconst FROM_ICAL_NEWLINE = /\\\\\\\\|\\\\;|\\\\,|\\\\[Nn]/g;\nconst TO_ICAL_NEWLINE = /\\\\|;|,|\\n/g;\nconst FROM_VCARD_NEWLINE = /\\\\\\\\|\\\\,|\\\\[Nn]/g;\nconst TO_VCARD_NEWLINE = /\\\\|,|\\n/g;\n\nfunction createTextType(fromNewline, toNewline) {\n  let result = {\n    matches: /.*/,\n\n    fromICAL: function(aValue, structuredEscape) {\n      return replaceNewline(aValue, fromNewline, structuredEscape);\n    },\n\n    toICAL: function(aValue, structuredEscape) {\n      let regEx = toNewline;\n      if (structuredEscape)\n         regEx = new RegExp(regEx.source + '|' + structuredEscape, regEx.flags);\n      return aValue.replace(regEx, function(str) {\n        switch (str) {\n        case \"\\\\\":\n          return \"\\\\\\\\\";\n        case \";\":\n          return \"\\\\;\";\n        case \",\":\n          return \"\\\\,\";\n        case \"\\n\":\n          return \"\\\\n\";\n        /* c8 ignore next 2 */\n        default:\n          return str;\n        }\n      });\n    }\n  };\n  return result;\n}\n\n// default types used multiple times\nconst DEFAULT_TYPE_TEXT = { defaultType: \"text\" };\nconst DEFAULT_TYPE_TEXT_MULTI = { defaultType: \"text\", multiValue: \",\" };\nconst DEFAULT_TYPE_TEXT_STRUCTURED = { defaultType: \"text\", structuredValue: \";\" };\nconst DEFAULT_TYPE_INTEGER = { defaultType: \"integer\" };\nconst DEFAULT_TYPE_DATETIME_DATE = { defaultType: \"date-time\", allowedTypes: [\"date-time\", \"date\"] };\nconst DEFAULT_TYPE_DATETIME = { defaultType: \"date-time\" };\nconst DEFAULT_TYPE_URI = { defaultType: \"uri\" };\nconst DEFAULT_TYPE_UTCOFFSET = { defaultType: \"utc-offset\" };\nconst DEFAULT_TYPE_RECUR = { defaultType: \"recur\" };\nconst DEFAULT_TYPE_DATE_ANDOR_TIME = { defaultType: \"date-and-or-time\", allowedTypes: [\"date-time\", \"date\", \"text\"] };\n\nfunction replaceNewlineReplace(string) {\n  switch (string) {\n    case \"\\\\\\\\\":\n      return \"\\\\\";\n    case \"\\\\;\":\n      return \";\";\n    case \"\\\\,\":\n      return \",\";\n    case \"\\\\n\":\n    case \"\\\\N\":\n      return \"\\n\";\n    /* c8 ignore next 2 */\n    default:\n      return string;\n  }\n}\n\nfunction replaceNewline(value, newline, structuredEscape) {\n  // avoid regex when possible.\n  if (value.indexOf('\\\\') === -1) {\n    return value;\n  }\n  if (structuredEscape)\n     newline = new RegExp(newline.source + '|\\\\\\\\' + structuredEscape, newline.flags);\n  return value.replace(newline, replaceNewlineReplace);\n}\n\nlet commonProperties = {\n  \"categories\": DEFAULT_TYPE_TEXT_MULTI,\n  \"url\": DEFAULT_TYPE_URI,\n  \"version\": DEFAULT_TYPE_TEXT,\n  \"uid\": DEFAULT_TYPE_TEXT\n};\n\nlet commonValues = {\n  \"boolean\": {\n    values: [\"TRUE\", \"FALSE\"],\n\n    fromICAL: function(aValue) {\n      switch (aValue) {\n        case 'TRUE':\n          return true;\n        case 'FALSE':\n          return false;\n        default:\n          //TODO: parser warning\n          return false;\n      }\n    },\n\n    toICAL: function(aValue) {\n      if (aValue) {\n        return 'TRUE';\n      }\n      return 'FALSE';\n    }\n\n  },\n  float: {\n    matches: /^[+-]?\\d+\\.\\d+$/,\n\n    fromICAL: function(aValue) {\n      let parsed = parseFloat(aValue);\n      if (isStrictlyNaN(parsed)) {\n        // TODO: parser warning\n        return 0.0;\n      }\n      return parsed;\n    },\n\n    toICAL: function(aValue) {\n      return String(aValue);\n    }\n  },\n  integer: {\n    fromICAL: function(aValue) {\n      let parsed = parseInt(aValue);\n      if (isStrictlyNaN(parsed)) {\n        return 0;\n      }\n      return parsed;\n    },\n\n    toICAL: function(aValue) {\n      return String(aValue);\n    }\n  },\n  \"utc-offset\": {\n    toICAL: function(aValue) {\n      if (aValue.length < 7) {\n        // no seconds\n        // -0500\n        return aValue.slice(0, 3) +\n               aValue.slice(4, 6);\n      } else {\n        // seconds\n        // -050000\n        return aValue.slice(0, 3) +\n               aValue.slice(4, 6) +\n               aValue.slice(7, 9);\n      }\n    },\n\n    fromICAL: function(aValue) {\n      if (aValue.length < 6) {\n        // no seconds\n        // -05:00\n        return aValue.slice(0, 3) + ':' +\n               aValue.slice(3, 5);\n      } else {\n        // seconds\n        // -05:00:00\n        return aValue.slice(0, 3) + ':' +\n               aValue.slice(3, 5) + ':' +\n               aValue.slice(5, 7);\n      }\n    },\n\n    decorate: function(aValue) {\n      return UtcOffset.fromString(aValue);\n    },\n\n    undecorate: function(aValue) {\n      return aValue.toString();\n    }\n  }\n};\n\nlet icalParams = {\n  // Although the syntax is DQUOTE uri DQUOTE, I don't think we should\n  // enforce anything aside from it being a valid content line.\n  //\n  // At least some params require - if multi values are used - DQUOTEs\n  // for each of its values - e.g. delegated-from=\"uri1\",\"uri2\"\n  // To indicate this, I introduced the new k/v pair\n  // multiValueSeparateDQuote: true\n  //\n  // \"ALTREP\": { ... },\n\n  // CN just wants a param-value\n  // \"CN\": { ... }\n\n  \"cutype\": {\n    values: [\"INDIVIDUAL\", \"GROUP\", \"RESOURCE\", \"ROOM\", \"UNKNOWN\"],\n    allowXName: true,\n    allowIanaToken: true\n  },\n\n  \"delegated-from\": {\n    valueType: \"cal-address\",\n    multiValue: \",\",\n    multiValueSeparateDQuote: true\n  },\n  \"delegated-to\": {\n    valueType: \"cal-address\",\n    multiValue: \",\",\n    multiValueSeparateDQuote: true\n  },\n  // \"DIR\": { ... }, // See ALTREP\n  \"encoding\": {\n    values: [\"8BIT\", \"BASE64\"]\n  },\n  // \"FMTTYPE\": { ... }, // See ALTREP\n  \"fbtype\": {\n    values: [\"FREE\", \"BUSY\", \"BUSY-UNAVAILABLE\", \"BUSY-TENTATIVE\"],\n    allowXName: true,\n    allowIanaToken: true\n  },\n  // \"LANGUAGE\": { ... }, // See ALTREP\n  \"member\": {\n    valueType: \"cal-address\",\n    multiValue: \",\",\n    multiValueSeparateDQuote: true\n  },\n  \"partstat\": {\n    // TODO These values are actually different per-component\n    values: [\"NEEDS-ACTION\", \"ACCEPTED\", \"DECLINED\", \"TENTATIVE\",\n             \"DELEGATED\", \"COMPLETED\", \"IN-PROCESS\"],\n    allowXName: true,\n    allowIanaToken: true\n  },\n  \"range\": {\n    values: [\"THISANDFUTURE\"]\n  },\n  \"related\": {\n    values: [\"START\", \"END\"]\n  },\n  \"reltype\": {\n    values: [\"PARENT\", \"CHILD\", \"SIBLING\"],\n    allowXName: true,\n    allowIanaToken: true\n  },\n  \"role\": {\n    values: [\"REQ-PARTICIPANT\", \"CHAIR\",\n             \"OPT-PARTICIPANT\", \"NON-PARTICIPANT\"],\n    allowXName: true,\n    allowIanaToken: true\n  },\n  \"rsvp\": {\n    values: [\"TRUE\", \"FALSE\"]\n  },\n  \"sent-by\": {\n    valueType: \"cal-address\"\n  },\n  \"tzid\": {\n    matches: /^\\//\n  },\n  \"value\": {\n    // since the value here is a 'type' lowercase is used.\n    values: [\"binary\", \"boolean\", \"cal-address\", \"date\", \"date-time\",\n             \"duration\", \"float\", \"integer\", \"period\", \"recur\", \"text\",\n             \"time\", \"uri\", \"utc-offset\"],\n    allowXName: true,\n    allowIanaToken: true\n  }\n};\n\n// When adding a value here, be sure to add it to the parameter types!\nconst icalValues = extend(commonValues, {\n  text: createTextType(FROM_ICAL_NEWLINE, TO_ICAL_NEWLINE),\n\n  uri: {\n    // TODO\n    /* ... */\n  },\n\n  \"binary\": {\n    decorate: function(aString) {\n      return Binary.fromString(aString);\n    },\n\n    undecorate: function(aBinary) {\n      return aBinary.toString();\n    }\n  },\n  \"cal-address\": {\n    // needs to be an uri\n  },\n  \"date\": {\n    decorate: function(aValue, aProp) {\n      if (design.strict) {\n        return Time.fromDateString(aValue, aProp);\n      } else {\n        return Time.fromString(aValue, aProp);\n      }\n    },\n\n    /**\n     * undecorates a time object.\n     */\n    undecorate: function(aValue) {\n      return aValue.toString();\n    },\n\n    fromICAL: function(aValue) {\n      // from: 20120901\n      // to: 2012-09-01\n      if (!design.strict && aValue.length >= 15) {\n        // This is probably a date-time, e.g. 20120901T130000Z\n        return icalValues[\"date-time\"].fromICAL(aValue);\n      } else {\n        return aValue.slice(0, 4) + '-' +\n               aValue.slice(4, 6) + '-' +\n               aValue.slice(6, 8);\n      }\n    },\n\n    toICAL: function(aValue) {\n      // from: 2012-09-01\n      // to: 20120901\n      let len = aValue.length;\n\n      if (len == 10) {\n        return aValue.slice(0, 4) +\n               aValue.slice(5, 7) +\n               aValue.slice(8, 10);\n      } else if (len >= 19) {\n        return icalValues[\"date-time\"].toICAL(aValue);\n      } else {\n        //TODO: serialize warning?\n        return aValue;\n      }\n\n    }\n  },\n  \"date-time\": {\n    fromICAL: function(aValue) {\n      // from: 20120901T130000\n      // to: 2012-09-01T13:00:00\n      if (!design.strict && aValue.length == 8) {\n        // This is probably a date, e.g. 20120901\n        return icalValues.date.fromICAL(aValue);\n      } else {\n        let result = aValue.slice(0, 4) + '-' +\n                     aValue.slice(4, 6) + '-' +\n                     aValue.slice(6, 8) + 'T' +\n                     aValue.slice(9, 11) + ':' +\n                     aValue.slice(11, 13) + ':' +\n                     aValue.slice(13, 15);\n\n        if (aValue[15] && aValue[15] === 'Z') {\n          result += 'Z';\n        }\n\n        return result;\n      }\n    },\n\n    toICAL: function(aValue) {\n      // from: 2012-09-01T13:00:00\n      // to: 20120901T130000\n      let len = aValue.length;\n\n      if (len == 10 && !design.strict) {\n        return icalValues.date.toICAL(aValue);\n      } else if (len >= 19) {\n        let result = aValue.slice(0, 4) +\n                     aValue.slice(5, 7) +\n                     // grab the (DDTHH) segment\n                     aValue.slice(8, 13) +\n                     // MM\n                     aValue.slice(14, 16) +\n                     // SS\n                     aValue.slice(17, 19);\n\n        if (aValue[19] && aValue[19] === 'Z') {\n          result += 'Z';\n        }\n        return result;\n      } else {\n        // TODO: error\n        return aValue;\n      }\n    },\n\n    decorate: function(aValue, aProp) {\n      if (design.strict) {\n        return Time.fromDateTimeString(aValue, aProp);\n      } else {\n        return Time.fromString(aValue, aProp);\n      }\n    },\n\n    undecorate: function(aValue) {\n      return aValue.toString();\n    }\n  },\n  duration: {\n    decorate: function(aValue) {\n      return Duration.fromString(aValue);\n    },\n    undecorate: function(aValue) {\n      return aValue.toString();\n    }\n  },\n  period: {\n    fromICAL: function(string) {\n      let parts = string.split('/');\n      parts[0] = icalValues['date-time'].fromICAL(parts[0]);\n\n      if (!Duration.isValueString(parts[1])) {\n        parts[1] = icalValues['date-time'].fromICAL(parts[1]);\n      }\n\n      return parts;\n    },\n\n    toICAL: function(parts) {\n      parts = parts.slice();\n      if (!design.strict && parts[0].length == 10) {\n        parts[0] = icalValues.date.toICAL(parts[0]);\n      } else {\n        parts[0] = icalValues['date-time'].toICAL(parts[0]);\n      }\n\n      if (!Duration.isValueString(parts[1])) {\n        if (!design.strict && parts[1].length == 10) {\n          parts[1] = icalValues.date.toICAL(parts[1]);\n        } else {\n          parts[1] = icalValues['date-time'].toICAL(parts[1]);\n        }\n      }\n\n      return parts.join(\"/\");\n    },\n\n    decorate: function(aValue, aProp) {\n      return Period.fromJSON(aValue, aProp, !design.strict);\n    },\n\n    undecorate: function(aValue) {\n      return aValue.toJSON();\n    }\n  },\n  recur: {\n    fromICAL: function(string) {\n      return Recur._stringToData(string, true);\n    },\n\n    toICAL: function(data) {\n      let str = \"\";\n      for (let [k, val] of Object.entries(data)) {\n        if (k == \"until\") {\n          if (val.length > 10) {\n            val = icalValues['date-time'].toICAL(val);\n          } else {\n            val = icalValues.date.toICAL(val);\n          }\n        } else if (k == \"wkst\") {\n          if (typeof val === 'number') {\n            val = Recur.numericDayToIcalDay(val);\n          }\n        } else if (Array.isArray(val)) {\n          val = val.join(\",\");\n        }\n        str += k.toUpperCase() + \"=\" + val + \";\";\n      }\n      return str.slice(0, Math.max(0, str.length - 1));\n    },\n\n    decorate: function decorate(aValue) {\n      return Recur.fromData(aValue);\n    },\n\n    undecorate: function(aRecur) {\n      return aRecur.toJSON();\n    }\n  },\n\n  time: {\n    fromICAL: function(aValue) {\n      // from: MMHHSS(Z)?\n      // to: HH:MM:SS(Z)?\n      if (aValue.length < 6) {\n        // TODO: parser exception?\n        return aValue;\n      }\n\n      // HH::MM::SSZ?\n      let result = aValue.slice(0, 2) + ':' +\n                   aValue.slice(2, 4) + ':' +\n                   aValue.slice(4, 6);\n\n      if (aValue[6] === 'Z') {\n        result += 'Z';\n      }\n\n      return result;\n    },\n\n    toICAL: function(aValue) {\n      // from: HH:MM:SS(Z)?\n      // to: MMHHSS(Z)?\n      if (aValue.length < 8) {\n        //TODO: error\n        return aValue;\n      }\n\n      let result = aValue.slice(0, 2) +\n                   aValue.slice(3, 5) +\n                   aValue.slice(6, 8);\n\n      if (aValue[8] === 'Z') {\n        result += 'Z';\n      }\n\n      return result;\n    }\n  }\n});\n\nlet icalProperties = extend(commonProperties, {\n\n  \"action\": DEFAULT_TYPE_TEXT,\n  \"attach\": { defaultType: \"uri\" },\n  \"attendee\": { defaultType: \"cal-address\" },\n  \"calscale\": DEFAULT_TYPE_TEXT,\n  \"class\": DEFAULT_TYPE_TEXT,\n  \"comment\": DEFAULT_TYPE_TEXT,\n  \"completed\": DEFAULT_TYPE_DATETIME,\n  \"contact\": DEFAULT_TYPE_TEXT,\n  \"created\": DEFAULT_TYPE_DATETIME,\n  \"description\": DEFAULT_TYPE_TEXT,\n  \"dtend\": DEFAULT_TYPE_DATETIME_DATE,\n  \"dtstamp\": DEFAULT_TYPE_DATETIME,\n  \"dtstart\": DEFAULT_TYPE_DATETIME_DATE,\n  \"due\": DEFAULT_TYPE_DATETIME_DATE,\n  \"duration\": { defaultType: \"duration\" },\n  \"exdate\": {\n    defaultType: \"date-time\",\n    allowedTypes: [\"date-time\", \"date\"],\n    multiValue: ','\n  },\n  \"exrule\": DEFAULT_TYPE_RECUR,\n  \"freebusy\": { defaultType: \"period\", multiValue: \",\" },\n  \"geo\": { defaultType: \"float\", structuredValue: \";\" },\n  \"last-modified\": DEFAULT_TYPE_DATETIME,\n  \"location\": DEFAULT_TYPE_TEXT,\n  \"method\": DEFAULT_TYPE_TEXT,\n  \"organizer\": { defaultType: \"cal-address\" },\n  \"percent-complete\": DEFAULT_TYPE_INTEGER,\n  \"priority\": DEFAULT_TYPE_INTEGER,\n  \"prodid\": DEFAULT_TYPE_TEXT,\n  \"related-to\": DEFAULT_TYPE_TEXT,\n  \"repeat\": DEFAULT_TYPE_INTEGER,\n  \"rdate\": {\n    defaultType: \"date-time\",\n    allowedTypes: [\"date-time\", \"date\", \"period\"],\n    multiValue: ',',\n    detectType: function(string) {\n      if (string.indexOf('/') !== -1) {\n        return 'period';\n      }\n      return (string.indexOf('T') === -1) ? 'date' : 'date-time';\n    }\n  },\n  \"recurrence-id\": DEFAULT_TYPE_DATETIME_DATE,\n  \"resources\": DEFAULT_TYPE_TEXT_MULTI,\n  \"request-status\": DEFAULT_TYPE_TEXT_STRUCTURED,\n  \"rrule\": DEFAULT_TYPE_RECUR,\n  \"sequence\": DEFAULT_TYPE_INTEGER,\n  \"status\": DEFAULT_TYPE_TEXT,\n  \"summary\": DEFAULT_TYPE_TEXT,\n  \"transp\": DEFAULT_TYPE_TEXT,\n  \"trigger\": { defaultType: \"duration\", allowedTypes: [\"duration\", \"date-time\"] },\n  \"tzoffsetfrom\": DEFAULT_TYPE_UTCOFFSET,\n  \"tzoffsetto\": DEFAULT_TYPE_UTCOFFSET,\n  \"tzurl\": DEFAULT_TYPE_URI,\n  \"tzid\": DEFAULT_TYPE_TEXT,\n  \"tzname\": DEFAULT_TYPE_TEXT\n});\n\n// When adding a value here, be sure to add it to the parameter types!\nconst vcardValues = extend(commonValues, {\n  text: createTextType(FROM_VCARD_NEWLINE, TO_VCARD_NEWLINE),\n  uri: createTextType(FROM_VCARD_NEWLINE, TO_VCARD_NEWLINE),\n\n  date: {\n    decorate: function(aValue) {\n      return VCardTime.fromDateAndOrTimeString(aValue, \"date\");\n    },\n    undecorate: function(aValue) {\n      return aValue.toString();\n    },\n    fromICAL: function(aValue) {\n      if (aValue.length == 8) {\n        return icalValues.date.fromICAL(aValue);\n      } else if (aValue[0] == '-' && aValue.length == 6) {\n        return aValue.slice(0, 4) + '-' + aValue.slice(4);\n      } else {\n        return aValue;\n      }\n    },\n    toICAL: function(aValue) {\n      if (aValue.length == 10) {\n        return icalValues.date.toICAL(aValue);\n      } else if (aValue[0] == '-' && aValue.length == 7) {\n        return aValue.slice(0, 4) + aValue.slice(5);\n      } else {\n        return aValue;\n      }\n    }\n  },\n\n  time: {\n    decorate: function(aValue) {\n      return VCardTime.fromDateAndOrTimeString(\"T\" + aValue, \"time\");\n    },\n    undecorate: function(aValue) {\n      return aValue.toString();\n    },\n    fromICAL: function(aValue) {\n      let splitzone = vcardValues.time._splitZone(aValue, true);\n      let zone = splitzone[0], value = splitzone[1];\n\n      //console.log(\"SPLIT: \",splitzone);\n\n      if (value.length == 6) {\n        value = value.slice(0, 2) + ':' +\n                value.slice(2, 4) + ':' +\n                value.slice(4, 6);\n      } else if (value.length == 4 && value[0] != '-') {\n        value = value.slice(0, 2) + ':' + value.slice(2, 4);\n      } else if (value.length == 5) {\n        value = value.slice(0, 3) + ':' + value.slice(3, 5);\n      }\n\n      if (zone.length == 5 && (zone[0] == '-' || zone[0] == '+')) {\n        zone = zone.slice(0, 3) + ':' + zone.slice(3);\n      }\n\n      return value + zone;\n    },\n\n    toICAL: function(aValue) {\n      let splitzone = vcardValues.time._splitZone(aValue);\n      let zone = splitzone[0], value = splitzone[1];\n\n      if (value.length == 8) {\n        value = value.slice(0, 2) +\n                value.slice(3, 5) +\n                value.slice(6, 8);\n      } else if (value.length == 5 && value[0] != '-') {\n        value = value.slice(0, 2) + value.slice(3, 5);\n      } else if (value.length == 6) {\n        value = value.slice(0, 3) + value.slice(4, 6);\n      }\n\n      if (zone.length == 6 && (zone[0] == '-' || zone[0] == '+')) {\n        zone = zone.slice(0, 3) + zone.slice(4);\n      }\n\n      return value + zone;\n    },\n\n    _splitZone: function(aValue, isFromIcal) {\n      let lastChar = aValue.length - 1;\n      let signChar = aValue.length - (isFromIcal ? 5 : 6);\n      let sign = aValue[signChar];\n      let zone, value;\n\n      if (aValue[lastChar] == 'Z') {\n        zone = aValue[lastChar];\n        value = aValue.slice(0, Math.max(0, lastChar));\n      } else if (aValue.length > 6 && (sign == '-' || sign == '+')) {\n        zone = aValue.slice(signChar);\n        value = aValue.slice(0, Math.max(0, signChar));\n      } else {\n        zone = \"\";\n        value = aValue;\n      }\n\n      return [zone, value];\n    }\n  },\n\n  \"date-time\": {\n    decorate: function(aValue) {\n      return VCardTime.fromDateAndOrTimeString(aValue, \"date-time\");\n    },\n\n    undecorate: function(aValue) {\n      return aValue.toString();\n    },\n\n    fromICAL: function(aValue) {\n      return vcardValues['date-and-or-time'].fromICAL(aValue);\n    },\n\n    toICAL: function(aValue) {\n      return vcardValues['date-and-or-time'].toICAL(aValue);\n    }\n  },\n\n  \"date-and-or-time\": {\n    decorate: function(aValue) {\n      return VCardTime.fromDateAndOrTimeString(aValue, \"date-and-or-time\");\n    },\n\n    undecorate: function(aValue) {\n      return aValue.toString();\n    },\n\n    fromICAL: function(aValue) {\n      let parts = aValue.split('T');\n      return (parts[0] ? vcardValues.date.fromICAL(parts[0]) : '') +\n             (parts[1] ? 'T' + vcardValues.time.fromICAL(parts[1]) : '');\n    },\n\n    toICAL: function(aValue) {\n      let parts = aValue.split('T');\n      return vcardValues.date.toICAL(parts[0]) +\n             (parts[1] ? 'T' + vcardValues.time.toICAL(parts[1]) : '');\n\n    }\n  },\n  timestamp: icalValues['date-time'],\n  \"language-tag\": {\n    matches: /^[a-zA-Z0-9-]+$/ // Could go with a more strict regex here\n  },\n  \"phone-number\": {\n    fromICAL: function(aValue) {\n      return Array.from(aValue).filter(function(c) {\n          return c === '\\\\' ? undefined : c;\n        }).join('');\n    },\n    toICAL: function(aValue) {\n      return Array.from(aValue).map(function(c) {\n        return c === ',' || c === \";\" ? '\\\\' + c : c;\n      }).join('');\n    }\n  }\n});\n\nlet vcardParams = {\n  \"type\": {\n    valueType: \"text\",\n    multiValue: \",\"\n  },\n  \"value\": {\n    // since the value here is a 'type' lowercase is used.\n    values: [\"text\", \"uri\", \"date\", \"time\", \"date-time\", \"date-and-or-time\",\n             \"timestamp\", \"boolean\", \"integer\", \"float\", \"utc-offset\",\n             \"language-tag\"],\n    allowXName: true,\n    allowIanaToken: true\n  }\n};\n\nlet vcardProperties = extend(commonProperties, {\n  \"adr\": { defaultType: \"text\", structuredValue: \";\", multiValue: \",\" },\n  \"anniversary\": DEFAULT_TYPE_DATE_ANDOR_TIME,\n  \"bday\": DEFAULT_TYPE_DATE_ANDOR_TIME,\n  \"caladruri\": DEFAULT_TYPE_URI,\n  \"caluri\": DEFAULT_TYPE_URI,\n  \"clientpidmap\": DEFAULT_TYPE_TEXT_STRUCTURED,\n  \"email\": DEFAULT_TYPE_TEXT,\n  \"fburl\": DEFAULT_TYPE_URI,\n  \"fn\": DEFAULT_TYPE_TEXT,\n  \"gender\": DEFAULT_TYPE_TEXT_STRUCTURED,\n  \"geo\": DEFAULT_TYPE_URI,\n  \"impp\": DEFAULT_TYPE_URI,\n  \"key\": DEFAULT_TYPE_URI,\n  \"kind\": DEFAULT_TYPE_TEXT,\n  \"lang\": { defaultType: \"language-tag\" },\n  \"logo\": DEFAULT_TYPE_URI,\n  \"member\": DEFAULT_TYPE_URI,\n  \"n\": { defaultType: \"text\", structuredValue: \";\", multiValue: \",\" },\n  \"nickname\": DEFAULT_TYPE_TEXT_MULTI,\n  \"note\": DEFAULT_TYPE_TEXT,\n  \"org\": { defaultType: \"text\", structuredValue: \";\" },\n  \"photo\": DEFAULT_TYPE_URI,\n  \"related\": DEFAULT_TYPE_URI,\n  \"rev\": { defaultType: \"timestamp\" },\n  \"role\": DEFAULT_TYPE_TEXT,\n  \"sound\": DEFAULT_TYPE_URI,\n  \"source\": DEFAULT_TYPE_URI,\n  \"tel\": { defaultType: \"uri\", allowedTypes: [\"uri\", \"text\"] },\n  \"title\": DEFAULT_TYPE_TEXT,\n  \"tz\": { defaultType: \"text\", allowedTypes: [\"text\", \"utc-offset\", \"uri\"] },\n  \"xml\": DEFAULT_TYPE_TEXT\n});\n\nlet vcard3Values = extend(commonValues, {\n  binary: icalValues.binary,\n  date: vcardValues.date,\n  \"date-time\": vcardValues[\"date-time\"],\n  \"phone-number\": vcardValues[\"phone-number\"],\n  uri: icalValues.uri,\n  text: icalValues.text,\n  time: icalValues.time,\n  vcard: icalValues.text,\n  \"utc-offset\": {\n    toICAL: function(aValue) {\n      return aValue.slice(0, 7);\n    },\n\n    fromICAL: function(aValue) {\n      return aValue.slice(0, 7);\n    },\n\n    decorate: function(aValue) {\n      return UtcOffset.fromString(aValue);\n    },\n\n    undecorate: function(aValue) {\n      return aValue.toString();\n    }\n  }\n});\n\nlet vcard3Params = {\n  \"type\": {\n    valueType: \"text\",\n    multiValue: \",\"\n  },\n  \"value\": {\n    // since the value here is a 'type' lowercase is used.\n    values: [\"text\", \"uri\", \"date\", \"date-time\", \"phone-number\", \"time\",\n             \"boolean\", \"integer\", \"float\", \"utc-offset\", \"vcard\", \"binary\"],\n    allowXName: true,\n    allowIanaToken: true\n  }\n};\n\nlet vcard3Properties = extend(commonProperties, {\n  fn: DEFAULT_TYPE_TEXT,\n  n: { defaultType: \"text\", structuredValue: \";\", multiValue: \",\" },\n  nickname: DEFAULT_TYPE_TEXT_MULTI,\n  photo: { defaultType: \"binary\", allowedTypes: [\"binary\", \"uri\"] },\n  bday: {\n    defaultType: \"date-time\",\n    allowedTypes: [\"date-time\", \"date\"],\n    detectType: function(string) {\n      return (string.indexOf('T') === -1) ? 'date' : 'date-time';\n    }\n  },\n\n  adr: { defaultType: \"text\", structuredValue: \";\", multiValue: \",\" },\n  label: DEFAULT_TYPE_TEXT,\n\n  tel: { defaultType: \"phone-number\" },\n  email: DEFAULT_TYPE_TEXT,\n  mailer: DEFAULT_TYPE_TEXT,\n\n  tz: { defaultType: \"utc-offset\", allowedTypes: [\"utc-offset\", \"text\"] },\n  geo: { defaultType: \"float\", structuredValue: \";\" },\n\n  title: DEFAULT_TYPE_TEXT,\n  role: DEFAULT_TYPE_TEXT,\n  logo: { defaultType: \"binary\", allowedTypes: [\"binary\", \"uri\"] },\n  agent: { defaultType: \"vcard\", allowedTypes: [\"vcard\", \"text\", \"uri\"] },\n  org: DEFAULT_TYPE_TEXT_STRUCTURED,\n\n  note: DEFAULT_TYPE_TEXT_MULTI,\n  prodid: DEFAULT_TYPE_TEXT,\n  rev: {\n    defaultType: \"date-time\",\n    allowedTypes: [\"date-time\", \"date\"],\n    detectType: function(string) {\n      return (string.indexOf('T') === -1) ? 'date' : 'date-time';\n    }\n  },\n  \"sort-string\": DEFAULT_TYPE_TEXT,\n  sound: { defaultType: \"binary\", allowedTypes: [\"binary\", \"uri\"] },\n\n  class: DEFAULT_TYPE_TEXT,\n  key: { defaultType: \"binary\", allowedTypes: [\"binary\", \"text\"] }\n});\n\n/**\n * iCalendar design set\n * @type {designSet}\n */\nlet icalSet = {\n  name: \"ical\",\n  value: icalValues,\n  param: icalParams,\n  property: icalProperties,\n  propertyGroups: false\n};\n\n/**\n * vCard 4.0 design set\n * @type {designSet}\n */\nlet vcardSet = {\n  name: \"vcard4\",\n  value: vcardValues,\n  param: vcardParams,\n  property: vcardProperties,\n  propertyGroups: true\n};\n\n/**\n * vCard 3.0 design set\n * @type {designSet}\n */\nlet vcard3Set = {\n  name: \"vcard3\",\n  value: vcard3Values,\n  param: vcard3Params,\n  property: vcard3Properties,\n  propertyGroups: true\n};\n\n/**\n * The design data, used by the parser to determine types for properties and\n * other metadata needed to produce correct jCard/jCal data.\n *\n * @alias ICAL.design\n * @exports module:ICAL.design\n */\nconst design = {\n  /**\n   * Can be set to false to make the parser more lenient.\n   */\n  strict: true,\n\n  /**\n   * The default set for new properties and components if none is specified.\n   * @type {designSet}\n   */\n  defaultSet: icalSet,\n\n  /**\n   * The default type for unknown properties\n   * @type {String}\n   */\n  defaultType: 'unknown',\n\n  /**\n   * Holds the design set for known top-level components\n   *\n   * @type {Object}\n   * @property {designSet} vcard       vCard VCARD\n   * @property {designSet} vevent      iCalendar VEVENT\n   * @property {designSet} vtodo       iCalendar VTODO\n   * @property {designSet} vjournal    iCalendar VJOURNAL\n   * @property {designSet} valarm      iCalendar VALARM\n   * @property {designSet} vtimezone   iCalendar VTIMEZONE\n   * @property {designSet} daylight    iCalendar DAYLIGHT\n   * @property {designSet} standard    iCalendar STANDARD\n   *\n   * @example\n   * let propertyName = 'fn';\n   * let componentDesign = ICAL.design.components.vcard;\n   * let propertyDetails = componentDesign.property[propertyName];\n   * if (propertyDetails.defaultType == 'text') {\n   *   // Yep, sure is...\n   * }\n   */\n  components: {\n    vcard: vcardSet,\n    vcard3: vcard3Set,\n    vevent: icalSet,\n    vtodo: icalSet,\n    vjournal: icalSet,\n    valarm: icalSet,\n    vtimezone: icalSet,\n    daylight: icalSet,\n    standard: icalSet\n  },\n\n\n  /**\n   * The design set for iCalendar (rfc5545/rfc7265) components.\n   * @type {designSet}\n   */\n  icalendar: icalSet,\n\n  /**\n   * The design set for vCard (rfc6350/rfc7095) components.\n   * @type {designSet}\n   */\n  vcard: vcardSet,\n\n  /**\n   * The design set for vCard (rfc2425/rfc2426/rfc7095) components.\n   * @type {designSet}\n   */\n  vcard3: vcard3Set,\n\n  /**\n   * Gets the design set for the given component name.\n   *\n   * @param {String} componentName        The name of the component\n   * @return {designSet}      The design set for the component\n   */\n  getDesignSet: function(componentName) {\n    let isInDesign = componentName && componentName in design.components;\n    return isInDesign ? design.components[componentName] : design.defaultSet;\n  }\n};\n\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch */\n\n\n/**\n * This lets typescript resolve our custom types in the\n * generated d.ts files (jsdoc typedefs are converted to typescript types).\n * Ignore prevents the typedefs from being documented more than once.\n *\n * @ignore\n * @typedef {import(\"./types.js\").designSet} designSet\n * Imports the 'designSet' type from the \"types.js\" module\n */\n\nconst LINE_ENDING = '\\r\\n';\nconst DEFAULT_VALUE_TYPE = 'unknown';\nconst RFC6868_REPLACE_MAP = { '\"': \"^'\", \"\\n\": \"^n\", \"^\": \"^^\" };\n\n/**\n * Convert a full jCal/jCard array into a iCalendar/vCard string.\n *\n * @function ICAL.stringify\n * @variation function\n * @param {Array} jCal    The jCal/jCard document\n * @return {String}       The stringified iCalendar/vCard document\n */\nfunction stringify(jCal) {\n  if (typeof jCal[0] == \"string\") {\n    // This is a single component\n    jCal = [jCal];\n  }\n\n  let i = 0;\n  let len = jCal.length;\n  let result = '';\n\n  for (; i < len; i++) {\n    result += stringify.component(jCal[i]) + LINE_ENDING;\n  }\n\n  return result;\n}\n\n/**\n * Converts an jCal component array into a ICAL string.\n * Recursive will resolve sub-components.\n *\n * Exact component/property order is not saved all\n * properties will come before subcomponents.\n *\n * @function ICAL.stringify.component\n * @param {Array} component\n *        jCal/jCard fragment of a component\n * @param {designSet} designSet\n *        The design data to use for this component\n * @return {String}       The iCalendar/vCard string\n */\nstringify.component = function(component, designSet) {\n  let name = component[0].toUpperCase();\n  let result = 'BEGIN:' + name + LINE_ENDING;\n\n  let props = component[1];\n  let propIdx = 0;\n  let propLen = props.length;\n\n  let designSetName = component[0];\n  // rfc6350 requires that in vCard 4.0 the first component is the VERSION\n  // component with as value 4.0, note that 3.0 does not have this requirement.\n  if (designSetName === 'vcard' && component[1].length > 0 &&\n          !(component[1][0][0] === \"version\" && component[1][0][3] === \"4.0\")) {\n    designSetName = \"vcard3\";\n  }\n  designSet = designSet || design.getDesignSet(designSetName);\n\n  for (; propIdx < propLen; propIdx++) {\n    result += stringify.property(props[propIdx], designSet) + LINE_ENDING;\n  }\n\n  // Ignore subcomponents if none exist, e.g. in vCard.\n  let comps = component[2] || [];\n  let compIdx = 0;\n  let compLen = comps.length;\n\n  for (; compIdx < compLen; compIdx++) {\n    result += stringify.component(comps[compIdx], designSet) + LINE_ENDING;\n  }\n\n  result += 'END:' + name;\n  return result;\n};\n\n/**\n * Converts a single jCal/jCard property to a iCalendar/vCard string.\n *\n * @function ICAL.stringify.property\n * @param {Array} property\n *        jCal/jCard property array\n * @param {designSet} designSet\n *        The design data to use for this property\n * @param {Boolean} noFold\n *        If true, the line is not folded\n * @return {String}       The iCalendar/vCard string\n */\nstringify.property = function(property, designSet, noFold) {\n  let name = property[0].toUpperCase();\n  let jsName = property[0];\n  let params = property[1];\n\n  if (!designSet) {\n    designSet = design.defaultSet;\n  }\n\n  let groupName = params.group;\n  let line;\n  if (designSet.propertyGroups && groupName) {\n    line = groupName.toUpperCase() + \".\" + name;\n  } else {\n    line = name;\n  }\n\n  for (let [paramName, value] of Object.entries(params)) {\n    if (designSet.propertyGroups && paramName == 'group') {\n      continue;\n    }\n\n    let paramDesign = designSet.param[paramName];\n    let multiValue = paramDesign && paramDesign.multiValue;\n    if (multiValue && Array.isArray(value)) {\n      value = value.map(function(val) {\n        val = stringify._rfc6868Unescape(val);\n        val = stringify.paramPropertyValue(val, paramDesign.multiValueSeparateDQuote);\n        return val;\n      });\n      value = stringify.multiValue(value, multiValue, \"unknown\", null, designSet);\n    } else {\n      value = stringify._rfc6868Unescape(value);\n      value = stringify.paramPropertyValue(value);\n    }\n\n    line += ';' + paramName.toUpperCase() + '=' + value;\n  }\n\n  if (property.length === 3) {\n    // If there are no values, we must assume a blank value\n    return line + ':';\n  }\n\n  let valueType = property[2];\n\n  let propDetails;\n  let multiValue = false;\n  let structuredValue = false;\n  let isDefault = false;\n\n  if (jsName in designSet.property) {\n    propDetails = designSet.property[jsName];\n\n    if ('multiValue' in propDetails) {\n      multiValue = propDetails.multiValue;\n    }\n\n    if (('structuredValue' in propDetails) && Array.isArray(property[3])) {\n      structuredValue = propDetails.structuredValue;\n    }\n\n    if ('defaultType' in propDetails) {\n      if (valueType === propDetails.defaultType) {\n        isDefault = true;\n      }\n    } else {\n      if (valueType === DEFAULT_VALUE_TYPE) {\n        isDefault = true;\n      }\n    }\n  } else {\n    if (valueType === DEFAULT_VALUE_TYPE) {\n      isDefault = true;\n    }\n  }\n\n  // push the VALUE property if type is not the default\n  // for the current property.\n  if (!isDefault) {\n    // value will never contain ;/:/, so we don't escape it here.\n    line += ';VALUE=' + valueType.toUpperCase();\n  }\n\n  line += ':';\n\n  if (multiValue && structuredValue) {\n    line += stringify.multiValue(\n      property[3], structuredValue, valueType, multiValue, designSet, structuredValue\n    );\n  } else if (multiValue) {\n    line += stringify.multiValue(\n      property.slice(3), multiValue, valueType, null, designSet, false\n    );\n  } else if (structuredValue) {\n    line += stringify.multiValue(\n      property[3], structuredValue, valueType, null, designSet, structuredValue\n    );\n  } else {\n    line += stringify.value(property[3], valueType, designSet, false);\n  }\n\n  return noFold ? line : foldline(line);\n};\n\n/**\n * Handles escaping of property values that may contain:\n *\n *    COLON (:), SEMICOLON (;), or COMMA (,)\n *\n * If any of the above are present the result is wrapped\n * in double quotes.\n *\n * @function ICAL.stringify.paramPropertyValue\n * @param {String} value      Raw property value\n * @param {boolean} force     If value should be escaped even when unnecessary\n * @return {String}           Given or escaped value when needed\n */\nstringify.paramPropertyValue = function(value, force) {\n  if (!force &&\n      (value.indexOf(',') === -1) &&\n      (value.indexOf(':') === -1) &&\n      (value.indexOf(';') === -1)) {\n\n    return value;\n  }\n\n  return '\"' + value + '\"';\n};\n\n/**\n * Converts an array of ical values into a single\n * string based on a type and a delimiter value (like \",\").\n *\n * @function ICAL.stringify.multiValue\n * @param {Array} values      List of values to convert\n * @param {String} delim      Used to join the values (\",\", \";\", \":\")\n * @param {String} type       Lowecase ical value type\n *        (like boolean, date-time, etc..)\n * @param {?String} innerMulti If set, each value will again be processed\n *        Used for structured values\n * @param {designSet} designSet\n *        The design data to use for this property\n *\n * @return {String}           iCalendar/vCard string for value\n */\nstringify.multiValue = function(values, delim, type, innerMulti, designSet, structuredValue) {\n  let result = '';\n  let len = values.length;\n  let i = 0;\n\n  for (; i < len; i++) {\n    if (innerMulti && Array.isArray(values[i])) {\n      result += stringify.multiValue(values[i], innerMulti, type, null, designSet, structuredValue);\n    } else {\n      result += stringify.value(values[i], type, designSet, structuredValue);\n    }\n\n    if (i !== (len - 1)) {\n      result += delim;\n    }\n  }\n\n  return result;\n};\n\n/**\n * Processes a single ical value runs the associated \"toICAL\" method from the\n * design value type if available to convert the value.\n *\n * @function ICAL.stringify.value\n * @param {String|Number} value       A formatted value\n * @param {String} type               Lowercase iCalendar/vCard value type\n *  (like boolean, date-time, etc..)\n * @return {String}                   iCalendar/vCard value for single value\n */\nstringify.value = function(value, type, designSet, structuredValue) {\n  if (type in designSet.value && 'toICAL' in designSet.value[type]) {\n    return designSet.value[type].toICAL(value, structuredValue);\n  }\n  return value;\n};\n\n/**\n * Internal helper for rfc6868. Exposing this on ICAL.stringify so that\n * hackers can disable the rfc6868 parsing if the really need to.\n *\n * @param {String} val        The value to unescape\n * @return {String}           The escaped value\n */\nstringify._rfc6868Unescape = function(val) {\n  return val.replace(/[\\n^\"]/g, function(x) {\n    return RFC6868_REPLACE_MAP[x];\n  });\n};\n\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch */\n\nconst NAME_INDEX$1 = 0;\nconst PROP_INDEX = 1;\nconst TYPE_INDEX = 2;\nconst VALUE_INDEX = 3;\n\n/**\n * This lets typescript resolve our custom types in the\n * generated d.ts files (jsdoc typedefs are converted to typescript types).\n * Ignore prevents the typedefs from being documented more than once.\n * @ignore\n * @typedef {import(\"./types.js\").designSet} designSet\n * Imports the 'designSet' type from the \"types.js\" module\n * @typedef {import(\"./types.js\").Geo} Geo\n * Imports the 'Geo' type from the \"types.js\" module\n */\n\n/**\n * Provides a layer on top of the raw jCal object for manipulating a single property, with its\n * parameters and value.\n *\n * @memberof ICAL\n */\nclass Property {\n  /**\n   * Create an {@link ICAL.Property} by parsing the passed iCalendar string.\n   *\n   * @param {String} str            The iCalendar string to parse\n   * @param {designSet=} designSet  The design data to use for this property\n   * @return {Property}             The created iCalendar property\n   */\n  static fromString(str, designSet) {\n    return new Property(parse.property(str, designSet));\n  }\n\n  /**\n   * Creates a new ICAL.Property instance.\n   *\n   * It is important to note that mutations done in the wrapper directly mutate the jCal object used\n   * to initialize.\n   *\n   * Can also be used to create new properties by passing the name of the property (as a String).\n   *\n   * @param {Array|String} jCal         Raw jCal representation OR the new name of the property\n   * @param {Component=} parent         Parent component\n   */\n  constructor(jCal, parent) {\n    this._parent = parent || null;\n\n    if (typeof(jCal) === 'string') {\n      // We are creating the property by name and need to detect the type\n      this.jCal = [jCal, {}, design.defaultType];\n      this.jCal[TYPE_INDEX] = this.getDefaultType();\n    } else {\n      this.jCal = jCal;\n    }\n    this._updateType();\n  }\n\n  /**\n   * The value type for this property\n   * @type {String}\n   */\n  get type() {\n    return this.jCal[TYPE_INDEX];\n  }\n\n  /**\n   * The name of this property, in lowercase.\n   * @type {String}\n   */\n  get name() {\n    return this.jCal[NAME_INDEX$1];\n  }\n\n  /**\n   * The parent component for this property.\n   * @type {Component}\n   */\n  get parent() {\n    return this._parent;\n  }\n\n  set parent(p) {\n    // Before setting the parent, check if the design set has changed. If it\n    // has, we later need to update the type if it was unknown before.\n    let designSetChanged = !this._parent || (p && p._designSet != this._parent._designSet);\n\n    this._parent = p;\n\n    if (this.type == design.defaultType && designSetChanged) {\n      this.jCal[TYPE_INDEX] = this.getDefaultType();\n      this._updateType();\n    }\n  }\n\n  /**\n   * The design set for this property, e.g. icalendar vs vcard\n   *\n   * @type {designSet}\n   * @private\n   */\n  get _designSet() {\n    return this.parent ? this.parent._designSet : design.defaultSet;\n  }\n\n  /**\n   * Updates the type metadata from the current jCal type and design set.\n   *\n   * @private\n   */\n  _updateType() {\n    let designSet = this._designSet;\n\n    if (this.type in designSet.value) {\n      if ('decorate' in designSet.value[this.type]) {\n        this.isDecorated = true;\n      } else {\n        this.isDecorated = false;\n      }\n\n      if (this.name in designSet.property) {\n        this.isMultiValue = ('multiValue' in designSet.property[this.name]);\n        this.isStructuredValue = ('structuredValue' in designSet.property[this.name]);\n      }\n    }\n  }\n\n  /**\n   * Hydrate a single value. The act of hydrating means turning the raw jCal\n   * value into a potentially wrapped object, for example {@link ICAL.Time}.\n   *\n   * @private\n   * @param {Number} index        The index of the value to hydrate\n   * @return {?Object}             The decorated value.\n   */\n  _hydrateValue(index) {\n    if (this._values && this._values[index]) {\n      return this._values[index];\n    }\n\n    // for the case where there is no value.\n    if (this.jCal.length <= (VALUE_INDEX + index)) {\n      return null;\n    }\n\n    if (this.isDecorated) {\n      if (!this._values) {\n        this._values = [];\n      }\n      return (this._values[index] = this._decorate(\n        this.jCal[VALUE_INDEX + index]\n      ));\n    } else {\n      return this.jCal[VALUE_INDEX + index];\n    }\n  }\n\n  /**\n   * Decorate a single value, returning its wrapped object. This is used by\n   * the hydrate function to actually wrap the value.\n   *\n   * @private\n   * @param {?} value         The value to decorate\n   * @return {Object}         The decorated value\n   */\n  _decorate(value) {\n    return this._designSet.value[this.type].decorate(value, this);\n  }\n\n  /**\n   * Undecorate a single value, returning its raw jCal data.\n   *\n   * @private\n   * @param {Object} value         The value to undecorate\n   * @return {?}                   The undecorated value\n   */\n  _undecorate(value) {\n    return this._designSet.value[this.type].undecorate(value, this);\n  }\n\n  /**\n   * Sets the value at the given index while also hydrating it. The passed\n   * value can either be a decorated or undecorated value.\n   *\n   * @private\n   * @param {?} value             The value to set\n   * @param {Number} index        The index to set it at\n   */\n  _setDecoratedValue(value, index) {\n    if (!this._values) {\n      this._values = [];\n    }\n\n    if (typeof(value) === 'object' && 'icaltype' in value) {\n      // decorated value\n      this.jCal[VALUE_INDEX + index] = this._undecorate(value);\n      this._values[index] = value;\n    } else {\n      // undecorated value\n      this.jCal[VALUE_INDEX + index] = value;\n      this._values[index] = this._decorate(value);\n    }\n  }\n\n  /**\n   * Gets a parameter on the property.\n   *\n   * @param {String}        name   Parameter name (lowercase)\n   * @return {Array|String}        Parameter value\n   */\n  getParameter(name) {\n    if (name in this.jCal[PROP_INDEX]) {\n      return this.jCal[PROP_INDEX][name];\n    } else {\n      return undefined;\n    }\n  }\n\n  /**\n   * Gets first parameter on the property.\n   *\n   * @param {String}        name   Parameter name (lowercase)\n   * @return {String}        Parameter value\n   */\n  getFirstParameter(name) {\n    let parameters = this.getParameter(name);\n\n    if (Array.isArray(parameters)) {\n      return parameters[0];\n    }\n\n    return parameters;\n  }\n\n  /**\n   * Sets a parameter on the property.\n   *\n   * @param {String}       name     The parameter name\n   * @param {Array|String} value    The parameter value\n   */\n  setParameter(name, value) {\n    let lcname = name.toLowerCase();\n    if (typeof value === \"string\" &&\n        lcname in this._designSet.param &&\n        'multiValue' in this._designSet.param[lcname]) {\n        value = [value];\n    }\n    this.jCal[PROP_INDEX][name] = value;\n  }\n\n  /**\n   * Removes a parameter\n   *\n   * @param {String} name     The parameter name\n   */\n  removeParameter(name) {\n    delete this.jCal[PROP_INDEX][name];\n  }\n\n  /**\n   * Get the default type based on this property's name.\n   *\n   * @return {String}     The default type for this property\n   */\n  getDefaultType() {\n    let name = this.jCal[NAME_INDEX$1];\n    let designSet = this._designSet;\n\n    if (name in designSet.property) {\n      let details = designSet.property[name];\n      if ('defaultType' in details) {\n        return details.defaultType;\n      }\n    }\n    return design.defaultType;\n  }\n\n  /**\n   * Sets type of property and clears out any existing values of the current\n   * type.\n   *\n   * @param {String} type     New iCAL type (see design.*.values)\n   */\n  resetType(type) {\n    this.removeAllValues();\n    this.jCal[TYPE_INDEX] = type;\n    this._updateType();\n  }\n\n  /**\n   * Finds the first property value.\n   *\n   * @return {Binary | Duration | Period |\n   * Recur | Time | UtcOffset | Geo | string | null}         First property value\n   */\n  getFirstValue() {\n    return this._hydrateValue(0);\n  }\n\n  /**\n   * Gets all values on the property.\n   *\n   * NOTE: this creates an array during each call.\n   *\n   * @return {Array}          List of values\n   */\n  getValues() {\n    let len = this.jCal.length - VALUE_INDEX;\n\n    if (len < 1) {\n      // it is possible for a property to have no value.\n      return [];\n    }\n\n    let i = 0;\n    let result = [];\n\n    for (; i < len; i++) {\n      result[i] = this._hydrateValue(i);\n    }\n\n    return result;\n  }\n\n  /**\n   * Removes all values from this property\n   */\n  removeAllValues() {\n    if (this._values) {\n      this._values.length = 0;\n    }\n    this.jCal.length = 3;\n  }\n\n  /**\n   * Sets the values of the property.  Will overwrite the existing values.\n   * This can only be used for multi-value properties.\n   *\n   * @param {Array} values    An array of values\n   */\n  setValues(values) {\n    if (!this.isMultiValue) {\n      throw new Error(\n        this.name + ': does not not support mulitValue.\\n' +\n        'override isMultiValue'\n      );\n    }\n\n    let len = values.length;\n    let i = 0;\n    this.removeAllValues();\n\n    if (len > 0 &&\n        typeof(values[0]) === 'object' &&\n        'icaltype' in values[0]) {\n      this.resetType(values[0].icaltype);\n    }\n\n    if (this.isDecorated) {\n      for (; i < len; i++) {\n        this._setDecoratedValue(values[i], i);\n      }\n    } else {\n      for (; i < len; i++) {\n        this.jCal[VALUE_INDEX + i] = values[i];\n      }\n    }\n  }\n\n  /**\n   * Sets the current value of the property. If this is a multi-value\n   * property, all other values will be removed.\n   *\n   * @param {String|Object} value     New property value.\n   */\n  setValue(value) {\n    this.removeAllValues();\n    if (typeof(value) === 'object' && 'icaltype' in value) {\n      this.resetType(value.icaltype);\n    }\n\n    if (this.isDecorated) {\n      this._setDecoratedValue(value, 0);\n    } else {\n      this.jCal[VALUE_INDEX] = value;\n    }\n  }\n\n  /**\n   * Returns the Object representation of this component. The returned object\n   * is a live jCal object and should be cloned if modified.\n   * @return {Object}\n   */\n  toJSON() {\n    return this.jCal;\n  }\n\n  /**\n   * The string representation of this component.\n   * @return {String}\n   */\n  toICALString() {\n    return stringify.property(\n      this.jCal, this._designSet, true\n    );\n  }\n}\n\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch */\n\n\n/**\n * This lets typescript resolve our custom types in the\n * generated d.ts files (jsdoc typedefs are converted to typescript types).\n * Ignore prevents the typedefs from being documented more than once.\n * @ignore\n * @typedef {import(\"./types.js\").designSet} designSet\n * Imports the 'designSet' type from the \"types.js\" module\n * @typedef {import(\"./types.js\").Geo} Geo\n * Imports the 'Geo' type from the \"types.js\" module\n */\n\nconst NAME_INDEX = 0;\nconst PROPERTY_INDEX = 1;\nconst COMPONENT_INDEX = 2;\n\nconst PROPERTY_NAME_INDEX = 0;\nconst PROPERTY_VALUE_INDEX = 3;\n\n/**\n * Wraps a jCal component, adding convenience methods to add, remove and update subcomponents and\n * properties.\n *\n * @memberof ICAL\n */\nclass Component {\n  /**\n   * Create an {@link ICAL.Component} by parsing the passed iCalendar string.\n   *\n   * @param {String} str        The iCalendar string to parse\n   */\n  static fromString(str) {\n    return new Component(parse.component(str));\n  }\n\n  /**\n   * Creates a new Component instance.\n   *\n   * @param {Array|String} jCal         Raw jCal component data OR name of new\n   *                                      component\n   * @param {Component=} parent     Parent component to associate\n   */\n  constructor(jCal, parent) {\n    if (typeof(jCal) === 'string') {\n      // jCal spec (name, properties, components)\n      jCal = [jCal, [], []];\n    }\n\n    // mostly for legacy reasons.\n    this.jCal = jCal;\n\n    this.parent = parent || null;\n\n    if (!this.parent && this.name === 'vcalendar') {\n      this._timezoneCache = new Map();\n    }\n  }\n\n  /**\n   * Hydrated properties are inserted into the _properties array at the same\n   * position as in the jCal array, so it is possible that the array contains\n   * undefined values for unhydrdated properties. To avoid iterating the\n   * array when checking if all properties have been hydrated, we save the\n   * count here.\n   *\n   * @type {Number}\n   * @private\n   */\n  _hydratedPropertyCount = 0;\n\n  /**\n   * The same count as for _hydratedPropertyCount, but for subcomponents\n   *\n   * @type {Number}\n   * @private\n   */\n  _hydratedComponentCount = 0;\n\n  /**\n   * A cache of hydrated time zone objects which may be used by consumers, keyed\n   * by time zone ID.\n   *\n   * @type {Map}\n   * @private\n   */\n  _timezoneCache = null;\n\n  /**\n   * @private\n   */\n  _components = null;\n\n  /**\n   * @private\n   */\n  _properties = null;\n\n  /**\n   * The name of this component\n   *\n   * @type {String}\n   */\n  get name() {\n    return this.jCal[NAME_INDEX];\n  }\n\n  /**\n   * The design set for this component, e.g. icalendar vs vcard\n   *\n   * @type {designSet}\n   * @private\n   */\n  get _designSet() {\n    let parentDesign = this.parent && this.parent._designSet;\n    if (!parentDesign && this.name == \"vcard\") {\n      // We can't decide on vcard3 vs vcard4 just based on the component name, the version number is\n      // in the version property. We also can't use hydrated properties here because it would lead\n      // to recursion, but the spec says that the version property needs to be the very first one.\n      let versionProp = this.jCal[PROPERTY_INDEX]?.[0];\n\n      if (versionProp && versionProp[PROPERTY_NAME_INDEX] == \"version\" && versionProp[PROPERTY_VALUE_INDEX] == \"3.0\") {\n        return design.getDesignSet(\"vcard3\");\n      }\n    }\n\n    return parentDesign || design.getDesignSet(this.name);\n  }\n\n  /**\n   * @private\n   */\n  _hydrateComponent(index) {\n    if (!this._components) {\n      this._components = [];\n      this._hydratedComponentCount = 0;\n    }\n\n    if (this._components[index]) {\n      return this._components[index];\n    }\n\n    let comp = new Component(\n      this.jCal[COMPONENT_INDEX][index],\n      this\n    );\n\n    this._hydratedComponentCount++;\n    return (this._components[index] = comp);\n  }\n\n  /**\n   * @private\n   */\n  _hydrateProperty(index) {\n    if (!this._properties) {\n      this._properties = [];\n      this._hydratedPropertyCount = 0;\n    }\n\n    if (this._properties[index]) {\n      return this._properties[index];\n    }\n\n    let prop = new Property(\n      this.jCal[PROPERTY_INDEX][index],\n      this\n    );\n\n    this._hydratedPropertyCount++;\n    return (this._properties[index] = prop);\n  }\n\n  /**\n   * Finds first sub component, optionally filtered by name.\n   *\n   * @param {String=} name        Optional name to filter by\n   * @return {?Component}     The found subcomponent\n   */\n  getFirstSubcomponent(name) {\n    if (name) {\n      let i = 0;\n      let comps = this.jCal[COMPONENT_INDEX];\n      let len = comps.length;\n\n      for (; i < len; i++) {\n        if (comps[i][NAME_INDEX] === name) {\n          let result = this._hydrateComponent(i);\n          return result;\n        }\n      }\n    } else {\n      if (this.jCal[COMPONENT_INDEX].length) {\n        return this._hydrateComponent(0);\n      }\n    }\n\n    // ensure we return a value (strict mode)\n    return null;\n  }\n\n  /**\n   * Finds all sub components, optionally filtering by name.\n   *\n   * @param {String=} name            Optional name to filter by\n   * @return {Component[]}       The found sub components\n   */\n  getAllSubcomponents(name) {\n    let jCalLen = this.jCal[COMPONENT_INDEX].length;\n    let i = 0;\n\n    if (name) {\n      let comps = this.jCal[COMPONENT_INDEX];\n      let result = [];\n\n      for (; i < jCalLen; i++) {\n        if (name === comps[i][NAME_INDEX]) {\n          result.push(\n            this._hydrateComponent(i)\n          );\n        }\n      }\n      return result;\n    } else {\n      if (!this._components ||\n          (this._hydratedComponentCount !== jCalLen)) {\n        for (; i < jCalLen; i++) {\n          this._hydrateComponent(i);\n        }\n      }\n\n      return this._components || [];\n    }\n  }\n\n  /**\n   * Returns true when a named property exists.\n   *\n   * @param {String} name     The property name\n   * @return {Boolean}        True, when property is found\n   */\n  hasProperty(name) {\n    let props = this.jCal[PROPERTY_INDEX];\n    let len = props.length;\n\n    let i = 0;\n    for (; i < len; i++) {\n      // 0 is property name\n      if (props[i][NAME_INDEX] === name) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * Finds the first property, optionally with the given name.\n   *\n   * @param {String=} name        Lowercase property name\n   * @return {?Property}     The found property\n   */\n  getFirstProperty(name) {\n    if (name) {\n      let i = 0;\n      let props = this.jCal[PROPERTY_INDEX];\n      let len = props.length;\n\n      for (; i < len; i++) {\n        if (props[i][NAME_INDEX] === name) {\n          let result = this._hydrateProperty(i);\n          return result;\n        }\n      }\n    } else {\n      if (this.jCal[PROPERTY_INDEX].length) {\n        return this._hydrateProperty(0);\n      }\n    }\n\n    return null;\n  }\n\n  /**\n   * Returns first property's value, if available.\n   *\n   * @param {String=} name                    Lowercase property name\n   * @return {Binary | Duration | Period |\n   * Recur | Time | UtcOffset | Geo | string | null}         The found property value.\n   */\n  getFirstPropertyValue(name) {\n    let prop = this.getFirstProperty(name);\n    if (prop) {\n      return prop.getFirstValue();\n    }\n\n    return null;\n  }\n\n  /**\n   * Get all properties in the component, optionally filtered by name.\n   *\n   * @param {String=} name        Lowercase property name\n   * @return {Property[]}    List of properties\n   */\n  getAllProperties(name) {\n    let jCalLen = this.jCal[PROPERTY_INDEX].length;\n    let i = 0;\n\n    if (name) {\n      let props = this.jCal[PROPERTY_INDEX];\n      let result = [];\n\n      for (; i < jCalLen; i++) {\n        if (name === props[i][NAME_INDEX]) {\n          result.push(\n            this._hydrateProperty(i)\n          );\n        }\n      }\n      return result;\n    } else {\n      if (!this._properties ||\n          (this._hydratedPropertyCount !== jCalLen)) {\n        for (; i < jCalLen; i++) {\n          this._hydrateProperty(i);\n        }\n      }\n\n      return this._properties || [];\n    }\n  }\n\n  /**\n   * @private\n   */\n  _removeObjectByIndex(jCalIndex, cache, index) {\n    cache = cache || [];\n    // remove cached version\n    if (cache[index]) {\n      let obj = cache[index];\n      if (\"parent\" in obj) {\n          obj.parent = null;\n      }\n    }\n\n    cache.splice(index, 1);\n\n    // remove it from the jCal\n    this.jCal[jCalIndex].splice(index, 1);\n  }\n\n  /**\n   * @private\n   */\n  _removeObject(jCalIndex, cache, nameOrObject) {\n    let i = 0;\n    let objects = this.jCal[jCalIndex];\n    let len = objects.length;\n    let cached = this[cache];\n\n    if (typeof(nameOrObject) === 'string') {\n      for (; i < len; i++) {\n        if (objects[i][NAME_INDEX] === nameOrObject) {\n          this._removeObjectByIndex(jCalIndex, cached, i);\n          return true;\n        }\n      }\n    } else if (cached) {\n      for (; i < len; i++) {\n        if (cached[i] && cached[i] === nameOrObject) {\n          this._removeObjectByIndex(jCalIndex, cached, i);\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * @private\n   */\n  _removeAllObjects(jCalIndex, cache, name) {\n    let cached = this[cache];\n\n    // Unfortunately we have to run through all children to reset their\n    // parent property.\n    let objects = this.jCal[jCalIndex];\n    let i = objects.length - 1;\n\n    // descending search required because splice\n    // is used and will effect the indices.\n    for (; i >= 0; i--) {\n      if (!name || objects[i][NAME_INDEX] === name) {\n        this._removeObjectByIndex(jCalIndex, cached, i);\n      }\n    }\n  }\n\n  /**\n   * Adds a single sub component.\n   *\n   * @param {Component} component        The component to add\n   * @return {Component}                 The passed in component\n   */\n  addSubcomponent(component) {\n    if (!this._components) {\n      this._components = [];\n      this._hydratedComponentCount = 0;\n    }\n\n    if (component.parent) {\n      component.parent.removeSubcomponent(component);\n    }\n\n    let idx = this.jCal[COMPONENT_INDEX].push(component.jCal);\n    this._components[idx - 1] = component;\n    this._hydratedComponentCount++;\n    component.parent = this;\n    return component;\n  }\n\n  /**\n   * Removes a single component by name or the instance of a specific\n   * component.\n   *\n   * @param {Component|String} nameOrComp    Name of component, or component\n   * @return {Boolean}                            True when comp is removed\n   */\n  removeSubcomponent(nameOrComp) {\n    let removed = this._removeObject(COMPONENT_INDEX, '_components', nameOrComp);\n    if (removed) {\n      this._hydratedComponentCount--;\n    }\n    return removed;\n  }\n\n  /**\n   * Removes all components or (if given) all components by a particular\n   * name.\n   *\n   * @param {String=} name            Lowercase component name\n   */\n  removeAllSubcomponents(name) {\n    let removed = this._removeAllObjects(COMPONENT_INDEX, '_components', name);\n    this._hydratedComponentCount = 0;\n    return removed;\n  }\n\n  /**\n   * Adds an {@link ICAL.Property} to the component.\n   *\n   * @param {Property} property      The property to add\n   * @return {Property}              The passed in property\n   */\n  addProperty(property) {\n    if (!(property instanceof Property)) {\n      throw new TypeError('must be instance of ICAL.Property');\n    }\n\n    if (!this._properties) {\n      this._properties = [];\n      this._hydratedPropertyCount = 0;\n    }\n\n    if (property.parent) {\n      property.parent.removeProperty(property);\n    }\n\n    let idx = this.jCal[PROPERTY_INDEX].push(property.jCal);\n    this._properties[idx - 1] = property;\n    this._hydratedPropertyCount++;\n    property.parent = this;\n    return property;\n  }\n\n  /**\n   * Helper method to add a property with a value to the component.\n   *\n   * @param {String}               name         Property name to add\n   * @param {String|Number|Object} value        Property value\n   * @return {Property}                    The created property\n   */\n  addPropertyWithValue(name, value) {\n    let prop = new Property(name);\n    prop.setValue(value);\n\n    this.addProperty(prop);\n\n    return prop;\n  }\n\n  /**\n   * Helper method that will update or create a property of the given name\n   * and sets its value. If multiple properties with the given name exist,\n   * only the first is updated.\n   *\n   * @param {String}               name         Property name to update\n   * @param {String|Number|Object} value        Property value\n   * @return {Property}                    The created property\n   */\n  updatePropertyWithValue(name, value) {\n    let prop = this.getFirstProperty(name);\n\n    if (prop) {\n      prop.setValue(value);\n    } else {\n      prop = this.addPropertyWithValue(name, value);\n    }\n\n    return prop;\n  }\n\n  /**\n   * Removes a single property by name or the instance of the specific\n   * property.\n   *\n   * @param {String|Property} nameOrProp     Property name or instance to remove\n   * @return {Boolean}                            True, when deleted\n   */\n  removeProperty(nameOrProp) {\n    let removed = this._removeObject(PROPERTY_INDEX, '_properties', nameOrProp);\n    if (removed) {\n      this._hydratedPropertyCount--;\n    }\n    return removed;\n  }\n\n  /**\n   * Removes all properties associated with this component, optionally\n   * filtered by name.\n   *\n   * @param {String=} name        Lowercase property name\n   * @return {Boolean}            True, when deleted\n   */\n  removeAllProperties(name) {\n    let removed = this._removeAllObjects(PROPERTY_INDEX, '_properties', name);\n    this._hydratedPropertyCount = 0;\n    return removed;\n  }\n\n  /**\n   * Returns the Object representation of this component. The returned object\n   * is a live jCal object and should be cloned if modified.\n   * @return {Object}\n   */\n  toJSON() {\n    return this.jCal;\n  }\n\n  /**\n   * The string representation of this component.\n   * @return {String}\n   */\n  toString() {\n    return stringify.component(\n      this.jCal, this._designSet\n    );\n  }\n\n  /**\n   * Retrieve a time zone definition from the component tree, if any is present.\n   * If the tree contains no time zone definitions or the TZID cannot be\n   * matched, returns null.\n   *\n   * @param {String} tzid     The ID of the time zone to retrieve\n   * @return {Timezone}  The time zone corresponding to the ID, or null\n   */\n  getTimeZoneByID(tzid) {\n    // VTIMEZONE components can only appear as a child of the VCALENDAR\n    // component; walk the tree if we're not the root.\n    if (this.parent) {\n      return this.parent.getTimeZoneByID(tzid);\n    }\n\n    // If there is no time zone cache, we are probably parsing an incomplete\n    // file and will have no time zone definitions.\n    if (!this._timezoneCache) {\n      return null;\n    }\n\n    if (this._timezoneCache.has(tzid)) {\n      return this._timezoneCache.get(tzid);\n    }\n\n    // If the time zone is not already cached, hydrate it from the\n    // subcomponents.\n    const zones = this.getAllSubcomponents('vtimezone');\n    for (const zone of zones) {\n      if (zone.getFirstProperty('tzid').getFirstValue() === tzid) {\n        const hydratedZone = new Timezone({\n          component: zone,\n          tzid: tzid,\n        });\n\n        this._timezoneCache.set(tzid, hydratedZone);\n\n        return hydratedZone;\n      }\n    }\n\n    // Per the standard, we should always have a time zone defined in a file\n    // for any referenced TZID, but don't blow up if the file is invalid.\n    return null;\n  }\n}\n\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch */\n\n\n/**\n * Primary class for expanding recurring rules.  Can take multiple rrules, rdates, exdate(s) and\n * iterate (in order) over each next occurrence.\n *\n * Once initialized this class can also be serialized saved and continue iteration from the last\n * point.\n *\n * NOTE: it is intended that this class is to be used with {@link ICAL.Event} which handles recurrence\n * exceptions.\n *\n * @example\n * // assuming event is a parsed ical component\n * var event;\n *\n * var expand = new ICAL.RecurExpansion({\n *   component: event,\n *   dtstart: event.getFirstPropertyValue('dtstart')\n * });\n *\n * // remember there are infinite rules so it is a good idea to limit the scope of the iterations\n * // then resume later on.\n *\n * // next is always an ICAL.Time or null\n * var next;\n *\n * while (someCondition && (next = expand.next())) {\n *   // do something with next\n * }\n *\n * // save instance for later\n * var json = JSON.stringify(expand);\n *\n * //...\n *\n * // NOTE: if the component's properties have changed you will need to rebuild the class and start\n * // over. This only works when the component's recurrence info is the same.\n * var expand = new ICAL.RecurExpansion(JSON.parse(json));\n *\n * @memberof ICAL\n */\nclass RecurExpansion {\n  /**\n   * Creates a new ICAL.RecurExpansion instance.\n   *\n   * The options object can be filled with the specified initial values. It can also contain\n   * additional members, as a result of serializing a previous expansion state, as shown in the\n   * example.\n   *\n   * @param {Object} options\n   *        Recurrence expansion options\n   * @param {Time} options.dtstart\n   *        Start time of the event\n   * @param {Component=} options.component\n   *        Component for expansion, required if not resuming.\n   */\n  constructor(options) {\n    this.ruleDates = [];\n    this.exDates = [];\n    this.fromData(options);\n  }\n\n  /**\n   * True when iteration is fully completed.\n   * @type {Boolean}\n   */\n  complete = false;\n\n  /**\n   * Array of rrule iterators.\n   *\n   * @type {RecurIterator[]}\n   * @private\n   */\n  ruleIterators = null;\n\n  /**\n   * Array of rdate instances.\n   *\n   * @type {Time[]}\n   * @private\n   */\n  ruleDates = null;\n\n  /**\n   * Array of exdate instances.\n   *\n   * @type {Time[]}\n   * @private\n   */\n  exDates = null;\n\n  /**\n   * Current position in ruleDates array.\n   * @type {Number}\n   * @private\n   */\n  ruleDateInc = 0;\n\n  /**\n   * Current position in exDates array\n   * @type {Number}\n   * @private\n   */\n  exDateInc = 0;\n\n  /**\n   * Current negative date.\n   *\n   * @type {Time}\n   * @private\n   */\n  exDate = null;\n\n  /**\n   * Current additional date.\n   *\n   * @type {Time}\n   * @private\n   */\n  ruleDate = null;\n\n  /**\n   * Start date of recurring rules.\n   *\n   * @type {Time}\n   */\n  dtstart = null;\n\n  /**\n   * Last expanded time\n   *\n   * @type {Time}\n   */\n  last = null;\n\n  /**\n   * Initialize the recurrence expansion from the data object. The options\n   * object may also contain additional members, see the\n   * {@link ICAL.RecurExpansion constructor} for more details.\n   *\n   * @param {Object} options\n   *        Recurrence expansion options\n   * @param {Time} options.dtstart\n   *        Start time of the event\n   * @param {Component=} options.component\n   *        Component for expansion, required if not resuming.\n   */\n  fromData(options) {\n    let start = formatClassType(options.dtstart, Time);\n\n    if (!start) {\n      throw new Error('.dtstart (ICAL.Time) must be given');\n    } else {\n      this.dtstart = start;\n    }\n\n    if (options.component) {\n      this._init(options.component);\n    } else {\n      this.last = formatClassType(options.last, Time) || start.clone();\n\n      if (!options.ruleIterators) {\n        throw new Error('.ruleIterators or .component must be given');\n      }\n\n      this.ruleIterators = options.ruleIterators.map(function(item) {\n        return formatClassType(item, RecurIterator);\n      });\n\n      this.ruleDateInc = options.ruleDateInc;\n      this.exDateInc = options.exDateInc;\n\n      if (options.ruleDates) {\n        this.ruleDates = options.ruleDates.map(item => formatClassType(item, Time));\n        this.ruleDate = this.ruleDates[this.ruleDateInc];\n      }\n\n      if (options.exDates) {\n        this.exDates = options.exDates.map(item => formatClassType(item, Time));\n        this.exDate = this.exDates[this.exDateInc];\n      }\n\n      if (typeof(options.complete) !== 'undefined') {\n        this.complete = options.complete;\n      }\n    }\n  }\n\n  /**\n   * Compare two ICAL.Time objects.  When the second parameter is a DATE and the first parameter is\n   * DATE-TIME, strip the time and compare only the days.\n   *\n   * @private\n   * @param {Time} a   The one object to compare\n   * @param {Time} b   The other object to compare\n   */\n  _compare_special(a, b) {\n    if (!a.isDate && b.isDate)\n      return new Time({ year: a.year, month: a.month, day: a.day }).compare(b);\n    return a.compare(b);\n  }\n\n  /**\n   * Retrieve the next occurrence in the series.\n   * @return {Time}\n   */\n  next() {\n    let iter;\n    let next;\n    let compare;\n\n    let maxTries = 500;\n    let currentTry = 0;\n\n    while (true) {\n      if (currentTry++ > maxTries) {\n        throw new Error(\n          'max tries have occurred, rule may be impossible to fulfill.'\n        );\n      }\n\n      next = this.ruleDate;\n      iter = this._nextRecurrenceIter(this.last);\n\n      // no more matches\n      // because we increment the rule day or rule\n      // _after_ we choose a value this should be\n      // the only spot where we need to worry about the\n      // end of events.\n      if (!next && !iter) {\n        // there are no more iterators or rdates\n        this.complete = true;\n        break;\n      }\n\n      // no next rule day or recurrence rule is first.\n      if (!next || (iter && next.compare(iter.last) > 0)) {\n        // must be cloned, recur will reuse the time element.\n        next = iter.last.clone();\n        // move to next so we can continue\n        iter.next();\n      }\n\n      // if the ruleDate is still next increment it.\n      if (this.ruleDate === next) {\n        this._nextRuleDay();\n      }\n\n      this.last = next;\n\n      // check the negative rules\n      if (this.exDate) {\n        // EXDATE can be in DATE format, but DTSTART is in DATE-TIME format\n        compare = this._compare_special(this.last, this.exDate);\n\n        if (compare > 0) {\n          this._nextExDay();\n        }\n\n        // if the current rule is excluded skip it.\n        if (compare === 0) {\n          this._nextExDay();\n          continue;\n        }\n      }\n\n      //XXX: The spec states that after we resolve the final\n      //     list of dates we execute exdate this seems somewhat counter\n      //     intuitive to what I have seen most servers do so for now\n      //     I exclude based on the original date not the one that may\n      //     have been modified by the exception.\n      return this.last;\n    }\n  }\n\n  /**\n   * Converts object into a serialize-able format. This format can be passed\n   * back into the expansion to resume iteration.\n   * @return {Object}\n   */\n  toJSON() {\n    function toJSON(item) {\n      return item.toJSON();\n    }\n\n    let result = Object.create(null);\n    result.ruleIterators = this.ruleIterators.map(toJSON);\n\n    if (this.ruleDates) {\n      result.ruleDates = this.ruleDates.map(toJSON);\n    }\n\n    if (this.exDates) {\n      result.exDates = this.exDates.map(toJSON);\n    }\n\n    result.ruleDateInc = this.ruleDateInc;\n    result.exDateInc = this.exDateInc;\n    result.last = this.last.toJSON();\n    result.dtstart = this.dtstart.toJSON();\n    result.complete = this.complete;\n\n    return result;\n  }\n\n  /**\n   * Extract all dates from the properties in the given component. The\n   * properties will be filtered by the property name.\n   *\n   * @private\n   * @param {Component} component             The component to search in\n   * @param {String} propertyName             The property name to search for\n   * @return {Time[]}                         The extracted dates.\n   */\n  _extractDates(component, propertyName) {\n    let result = [];\n    let props = component.getAllProperties(propertyName);\n\n    for (let i = 0, len = props.length; i < len; i++) {\n      for (let prop of props[i].getValues()) {\n        let idx = binsearchInsert(\n          result,\n          prop,\n          (a, b) => a.compare(b)\n        );\n\n        // ordered insert\n        result.splice(idx, 0, prop);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n   * Initialize the recurrence expansion.\n   *\n   * @private\n   * @param {Component} component    The component to initialize from.\n   */\n  _init(component) {\n    this.ruleIterators = [];\n\n    this.last = this.dtstart.clone();\n\n    // to provide api consistency non-recurring\n    // events can also use the iterator though it will\n    // only return a single time.\n    if (!component.hasProperty('rdate') &&\n        !component.hasProperty('rrule') &&\n        !component.hasProperty('recurrence-id')) {\n      this.ruleDate = this.last.clone();\n      this.complete = true;\n      return;\n    }\n\n    if (component.hasProperty('rdate')) {\n      this.ruleDates = this._extractDates(component, 'rdate');\n\n      // special hack for cases where first rdate is prior\n      // to the start date. We only check for the first rdate.\n      // This is mostly for google's crazy recurring date logic\n      // (contacts birthdays).\n      if ((this.ruleDates[0]) &&\n          (this.ruleDates[0].compare(this.dtstart) < 0)) {\n\n        this.ruleDateInc = 0;\n        this.last = this.ruleDates[0].clone();\n      } else {\n        this.ruleDateInc = binsearchInsert(\n          this.ruleDates,\n          this.last,\n          (a, b) => a.compare(b)\n        );\n      }\n\n      this.ruleDate = this.ruleDates[this.ruleDateInc];\n    }\n\n    if (component.hasProperty('rrule')) {\n      let rules = component.getAllProperties('rrule');\n      let i = 0;\n      let len = rules.length;\n\n      let rule;\n      let iter;\n\n      for (; i < len; i++) {\n        rule = rules[i].getFirstValue();\n        iter = rule.iterator(this.dtstart);\n        this.ruleIterators.push(iter);\n\n        // increment to the next occurrence so future\n        // calls to next return times beyond the initial iteration.\n        // XXX: I find this suspicious might be a bug?\n        iter.next();\n      }\n    }\n\n    if (component.hasProperty('exdate')) {\n      this.exDates = this._extractDates(component, 'exdate');\n      // if we have a .last day we increment the index to beyond it.\n      // When DTSTART is in DATE-TIME format, EXDATE is in DATE format and EXDATE is\n      // the date of DTSTART, _compare_special finds this out and compareTime fails.\n      this.exDateInc = binsearchInsert(\n        this.exDates,\n        this.last,\n        this._compare_special\n      );\n\n      this.exDate = this.exDates[this.exDateInc];\n    }\n  }\n\n  /**\n   * Advance to the next exdate\n   * @private\n   */\n  _nextExDay() {\n    this.exDate = this.exDates[++this.exDateInc];\n  }\n\n  /**\n   * Advance to the next rule date\n   * @private\n   */\n  _nextRuleDay() {\n    this.ruleDate = this.ruleDates[++this.ruleDateInc];\n  }\n\n  /**\n   * Find and return the recurrence rule with the most recent event and\n   * return it.\n   *\n   * @private\n   * @return {?RecurIterator}    Found iterator.\n   */\n  _nextRecurrenceIter() {\n    let iters = this.ruleIterators;\n\n    if (iters.length === 0) {\n      return null;\n    }\n\n    let len = iters.length;\n    let iter;\n    let iterTime;\n    let iterIdx = 0;\n    let chosenIter;\n\n    // loop through each iterator\n    for (; iterIdx < len; iterIdx++) {\n      iter = iters[iterIdx];\n      iterTime = iter.last;\n\n      // if iteration is complete\n      // then we must exclude it from\n      // the search and remove it.\n      if (iter.completed) {\n        len--;\n        if (iterIdx !== 0) {\n          iterIdx--;\n        }\n        iters.splice(iterIdx, 1);\n        continue;\n      }\n\n      // find the most recent possible choice\n      if (!chosenIter || chosenIter.last.compare(iterTime) > 0) {\n        // that iterator is saved\n        chosenIter = iter;\n      }\n    }\n\n    // the chosen iterator is returned but not mutated\n    // this iterator contains the most recent event.\n    return chosenIter;\n  }\n}\n\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch */\n\n\n/**\n * This lets typescript resolve our custom types in the\n * generated d.ts files (jsdoc typedefs are converted to typescript types).\n * Ignore prevents the typedefs from being documented more than once.\n * @ignore\n * @typedef {import(\"./types.js\").frequencyValues} frequencyValues\n * Imports the 'frequencyValues' type from the \"types.js\" module\n * @typedef {import(\"./types.js\").occurrenceDetails} occurrenceDetails\n * Imports the 'occurrenceDetails' type from the \"types.js\" module\n */\n\n/**\n * ICAL.js is organized into multiple layers. The bottom layer is a raw jCal\n * object, followed by the component/property layer. The highest level is the\n * event representation, which this class is part of. See the\n * {@tutorial layers} guide for more details.\n *\n * @memberof ICAL\n */\nclass Event {\n  /**\n   * Creates a new ICAL.Event instance.\n   *\n   * @param {Component=} component              The ICAL.Component to base this event on\n   * @param {Object} [options]                  Options for this event\n   * @param {Boolean=} options.strictExceptions  When true, will verify exceptions are related by\n   *                                              their UUID\n   * @param {Array<Component|Event>=} options.exceptions\n   *          Exceptions to this event, either as components or events. If not\n   *            specified exceptions will automatically be set in relation of\n   *            component's parent\n   */\n  constructor(component, options) {\n    if (!(component instanceof Component)) {\n      options = component;\n      component = null;\n    }\n\n    if (component) {\n      this.component = component;\n    } else {\n      this.component = new Component('vevent');\n    }\n\n    this._rangeExceptionCache = Object.create(null);\n    this.exceptions = Object.create(null);\n    this.rangeExceptions = [];\n\n    if (options && options.strictExceptions) {\n      this.strictExceptions = options.strictExceptions;\n    }\n\n    if (options && options.exceptions) {\n      options.exceptions.forEach(this.relateException, this);\n    } else if (this.component.parent && !this.isRecurrenceException()) {\n      this.component.parent.getAllSubcomponents('vevent').forEach(function(event) {\n        if (event.hasProperty('recurrence-id')) {\n          this.relateException(event);\n        }\n      }, this);\n    }\n  }\n\n\n  static THISANDFUTURE = 'THISANDFUTURE';\n\n  /**\n   * List of related event exceptions.\n   *\n   * @type {Event[]}\n   */\n  exceptions = null;\n\n  /**\n   * When true, will verify exceptions are related by their UUID.\n   *\n   * @type {Boolean}\n   */\n  strictExceptions = false;\n\n  /**\n   * Relates a given event exception to this object.  If the given component\n   * does not share the UID of this event it cannot be related and will throw\n   * an exception.\n   *\n   * If this component is an exception it cannot have other exceptions\n   * related to it.\n   *\n   * @param {Component|Event} obj       Component or event\n   */\n  relateException(obj) {\n    if (this.isRecurrenceException()) {\n      throw new Error('cannot relate exception to exceptions');\n    }\n\n    if (obj instanceof Component) {\n      obj = new Event(obj);\n    }\n\n    if (this.strictExceptions && obj.uid !== this.uid) {\n      throw new Error('attempted to relate unrelated exception');\n    }\n\n    let id = obj.recurrenceId.toString();\n\n    // we don't sort or manage exceptions directly\n    // here the recurrence expander handles that.\n    this.exceptions[id] = obj;\n\n    // index RANGE=THISANDFUTURE exceptions so we can\n    // look them up later in getOccurrenceDetails.\n    if (obj.modifiesFuture()) {\n      let item = [\n        obj.recurrenceId.toUnixTime(), id\n      ];\n\n      // we keep them sorted so we can find the nearest\n      // value later on...\n      let idx = binsearchInsert(\n        this.rangeExceptions,\n        item,\n        compareRangeException\n      );\n\n      this.rangeExceptions.splice(idx, 0, item);\n    }\n  }\n\n  /**\n   * Checks if this record is an exception and has the RANGE=THISANDFUTURE\n   * value.\n   *\n   * @return {Boolean}        True, when exception is within range\n   */\n  modifiesFuture() {\n    if (!this.component.hasProperty('recurrence-id')) {\n      return false;\n    }\n\n    let range = this.component.getFirstProperty('recurrence-id').getParameter('range');\n    return range === Event.THISANDFUTURE;\n  }\n\n  /**\n   * Finds the range exception nearest to the given date.\n   *\n   * @param {Time} time   usually an occurrence time of an event\n   * @return {?Event}     the related event/exception or null\n   */\n  findRangeException(time) {\n    if (!this.rangeExceptions.length) {\n      return null;\n    }\n\n    let utc = time.toUnixTime();\n    let idx = binsearchInsert(\n      this.rangeExceptions,\n      [utc],\n      compareRangeException\n    );\n\n    idx -= 1;\n\n    // occurs before\n    if (idx < 0) {\n      return null;\n    }\n\n    let rangeItem = this.rangeExceptions[idx];\n\n    /* c8 ignore next 4 */\n    if (utc < rangeItem[0]) {\n      // sanity check only\n      return null;\n    }\n\n    return rangeItem[1];\n  }\n\n  /**\n   * Returns the occurrence details based on its start time.  If the\n   * occurrence has an exception will return the details for that exception.\n   *\n   * NOTE: this method is intend to be used in conjunction\n   *       with the {@link ICAL.Event#iterator iterator} method.\n   *\n   * @param {Time} occurrence               time occurrence\n   * @return {occurrenceDetails}            Information about the occurrence\n   */\n  getOccurrenceDetails(occurrence) {\n    let id = occurrence.toString();\n    let utcId = occurrence.convertToZone(Timezone.utcTimezone).toString();\n    let item;\n    let result = {\n      //XXX: Clone?\n      recurrenceId: occurrence\n    };\n\n    if (id in this.exceptions) {\n      item = result.item = this.exceptions[id];\n      result.startDate = item.startDate;\n      result.endDate = item.endDate;\n      result.item = item;\n    } else if (utcId in this.exceptions) {\n      item = this.exceptions[utcId];\n      result.startDate = item.startDate;\n      result.endDate = item.endDate;\n      result.item = item;\n    } else {\n      // range exceptions (RANGE=THISANDFUTURE) have a\n      // lower priority then direct exceptions but\n      // must be accounted for first. Their item is\n      // always the first exception with the range prop.\n      let rangeExceptionId = this.findRangeException(\n        occurrence\n      );\n      let end;\n\n      if (rangeExceptionId) {\n        let exception = this.exceptions[rangeExceptionId];\n\n        // range exception must modify standard time\n        // by the difference (if any) in start/end times.\n        result.item = exception;\n\n        let startDiff = this._rangeExceptionCache[rangeExceptionId];\n\n        if (!startDiff) {\n          let original = exception.recurrenceId.clone();\n          let newStart = exception.startDate.clone();\n\n          // zones must be same otherwise subtract may be incorrect.\n          original.zone = newStart.zone;\n          startDiff = newStart.subtractDate(original);\n\n          this._rangeExceptionCache[rangeExceptionId] = startDiff;\n        }\n\n        let start = occurrence.clone();\n        start.zone = exception.startDate.zone;\n        start.addDuration(startDiff);\n\n        end = start.clone();\n        end.addDuration(exception.duration);\n\n        result.startDate = start;\n        result.endDate = end;\n      } else {\n        // no range exception standard expansion\n        end = occurrence.clone();\n        end.addDuration(this.duration);\n\n        result.endDate = end;\n        result.startDate = occurrence;\n        result.item = this;\n      }\n    }\n\n    return result;\n  }\n\n  /**\n   * Builds a recur expansion instance for a specific point in time (defaults\n   * to startDate).\n   *\n   * @param {Time=} startTime     Starting point for expansion\n   * @return {RecurExpansion}    Expansion object\n   */\n  iterator(startTime) {\n    return new RecurExpansion({\n      component: this.component,\n      dtstart: startTime || this.startDate\n    });\n  }\n\n  /**\n   * Checks if the event is recurring\n   *\n   * @return {Boolean}        True, if event is recurring\n   */\n  isRecurring() {\n    let comp = this.component;\n    return comp.hasProperty('rrule') || comp.hasProperty('rdate');\n  }\n\n  /**\n   * Checks if the event describes a recurrence exception. See\n   * {@tutorial terminology} for details.\n   *\n   * @return {Boolean}    True, if the event describes a recurrence exception\n   */\n  isRecurrenceException() {\n    return this.component.hasProperty('recurrence-id');\n  }\n\n  /**\n   * Returns the types of recurrences this event may have.\n   *\n   * Returned as an object with the following possible keys:\n   *\n   *    - YEARLY\n   *    - MONTHLY\n   *    - WEEKLY\n   *    - DAILY\n   *    - MINUTELY\n   *    - SECONDLY\n   *\n   * @return {Object.<frequencyValues, Boolean>}\n   *          Object of recurrence flags\n   */\n  getRecurrenceTypes() {\n    let rules = this.component.getAllProperties('rrule');\n    let i = 0;\n    let len = rules.length;\n    let result = Object.create(null);\n\n    for (; i < len; i++) {\n      let value = rules[i].getFirstValue();\n      result[value.freq] = true;\n    }\n\n    return result;\n  }\n\n  /**\n   * The uid of this event\n   * @type {String}\n   */\n  get uid() {\n    return this._firstProp('uid');\n  }\n\n  set uid(value) {\n    this._setProp('uid', value);\n  }\n\n  /**\n   * The start date\n   * @type {Time}\n   */\n  get startDate() {\n    return this._firstProp('dtstart');\n  }\n\n  set startDate(value) {\n    this._setTime('dtstart', value);\n  }\n\n  /**\n   * The end date. This can be the result directly from the property, or the\n   * end date calculated from start date and duration. Setting the property\n   * will remove any duration properties.\n   * @type {Time}\n   */\n  get endDate() {\n    let endDate = this._firstProp('dtend');\n    if (!endDate) {\n        let duration = this._firstProp('duration');\n        endDate = this.startDate.clone();\n        if (duration) {\n            endDate.addDuration(duration);\n        } else if (endDate.isDate) {\n            endDate.day += 1;\n        }\n    }\n    return endDate;\n  }\n\n  set endDate(value) {\n    if (this.component.hasProperty('duration')) {\n      this.component.removeProperty('duration');\n    }\n    this._setTime('dtend', value);\n  }\n\n  /**\n   * The duration. This can be the result directly from the property, or the\n   * duration calculated from start date and end date. Setting the property\n   * will remove any `dtend` properties.\n   * @type {Duration}\n   */\n  get duration() {\n    let duration = this._firstProp('duration');\n    if (!duration) {\n      return this.endDate.subtractDateTz(this.startDate);\n    }\n    return duration;\n  }\n\n  set duration(value) {\n    if (this.component.hasProperty('dtend')) {\n      this.component.removeProperty('dtend');\n    }\n\n    this._setProp('duration', value);\n  }\n\n  /**\n   * The location of the event.\n   * @type {String}\n   */\n  get location() {\n    return this._firstProp('location');\n  }\n\n  set location(value) {\n    this._setProp('location', value);\n  }\n\n  /**\n   * The attendees in the event\n   * @type {Property[]}\n   */\n  get attendees() {\n    //XXX: This is way lame we should have a better\n    //     data structure for this later.\n    return this.component.getAllProperties('attendee');\n  }\n\n  /**\n   * The event summary\n   * @type {String}\n   */\n  get summary() {\n    return this._firstProp('summary');\n  }\n\n  set summary(value) {\n    this._setProp('summary', value);\n  }\n\n  /**\n   * The event description.\n   * @type {String}\n   */\n  get description() {\n    return this._firstProp('description');\n  }\n\n  set description(value) {\n    this._setProp('description', value);\n  }\n\n  /**\n   * The event color from [rfc7986](https://datatracker.ietf.org/doc/html/rfc7986)\n   * @type {String}\n   */\n  get color() {\n    return this._firstProp('color');\n  }\n\n  set color(value) {\n    this._setProp('color', value);\n  }\n\n  /**\n   * The organizer value as an uri. In most cases this is a mailto: uri, but\n   * it can also be something else, like urn:uuid:...\n   * @type {String}\n   */\n  get organizer() {\n    return this._firstProp('organizer');\n  }\n\n  set organizer(value) {\n    this._setProp('organizer', value);\n  }\n\n  /**\n   * The sequence value for this event. Used for scheduling\n   * see {@tutorial terminology}.\n   * @type {Number}\n   */\n  get sequence() {\n    return this._firstProp('sequence');\n  }\n\n  set sequence(value) {\n    this._setProp('sequence', value);\n  }\n\n  /**\n   * The recurrence id for this event. See {@tutorial terminology} for details.\n   * @type {Time}\n   */\n  get recurrenceId() {\n    return this._firstProp('recurrence-id');\n  }\n\n  set recurrenceId(value) {\n    this._setTime('recurrence-id', value);\n  }\n\n  /**\n   * Set/update a time property's value.\n   * This will also update the TZID of the property.\n   *\n   * TODO: this method handles the case where we are switching\n   * from a known timezone to an implied timezone (one without TZID).\n   * This does _not_ handle the case of moving between a known\n   *  (by TimezoneService) timezone to an unknown timezone...\n   *\n   * We will not add/remove/update the VTIMEZONE subcomponents\n   *  leading to invalid ICAL data...\n   * @private\n   * @param {String} propName     The property name\n   * @param {Time} time           The time to set\n   */\n  _setTime(propName, time) {\n    let prop = this.component.getFirstProperty(propName);\n\n    if (!prop) {\n      prop = new Property(propName);\n      this.component.addProperty(prop);\n    }\n\n    // utc and local don't get a tzid\n    if (\n      time.zone === Timezone.localTimezone ||\n      time.zone === Timezone.utcTimezone\n    ) {\n      // remove the tzid\n      prop.removeParameter('tzid');\n    } else {\n      prop.setParameter('tzid', time.zone.tzid);\n    }\n\n    prop.setValue(time);\n  }\n\n  _setProp(name, value) {\n    this.component.updatePropertyWithValue(name, value);\n  }\n\n  _firstProp(name) {\n    return this.component.getFirstPropertyValue(name);\n  }\n\n  /**\n   * The string representation of this event.\n   * @return {String}\n   */\n  toString() {\n    return this.component.toString();\n  }\n}\n\nfunction compareRangeException(a, b) {\n  if (a[0] > b[0]) return 1;\n  if (b[0] > a[0]) return -1;\n  return 0;\n}\n\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch */\n\n\n/**\n * The ComponentParser is used to process a String or jCal Object,\n * firing callbacks for various found components, as well as completion.\n *\n * @example\n * var options = {\n *   // when false no events will be emitted for type\n *   parseEvent: true,\n *   parseTimezone: true\n * };\n *\n * var parser = new ICAL.ComponentParser(options);\n *\n * parser.onevent(eventComponent) {\n *   //...\n * }\n *\n * // ontimezone, etc...\n *\n * parser.oncomplete = function() {\n *\n * };\n *\n * parser.process(stringOrComponent);\n *\n * @memberof ICAL\n */\nclass ComponentParser {\n  /**\n   * Creates a new ICAL.ComponentParser instance.\n   *\n   * @param {Object=} options                   Component parser options\n   * @param {Boolean} options.parseEvent        Whether events should be parsed\n   * @param {Boolean} options.parseTimezeone    Whether timezones should be parsed\n   */\n  constructor(options) {\n    if (typeof(options) === 'undefined') {\n      options = {};\n    }\n\n    for (let [key, value] of Object.entries(options)) {\n      this[key] = value;\n    }\n  }\n\n  /**\n   * When true, parse events\n   *\n   * @type {Boolean}\n   */\n  parseEvent = true;\n\n  /**\n   * When true, parse timezones\n   *\n   * @type {Boolean}\n   */\n  parseTimezone = true;\n\n\n  /* SAX like events here for reference */\n\n  /**\n   * Fired when parsing is complete\n   * @callback\n   */\n  oncomplete = /* c8 ignore next */ function() {};\n\n  /**\n   * Fired if an error occurs during parsing.\n   *\n   * @callback\n   * @param {Error} err details of error\n   */\n  onerror = /* c8 ignore next */ function(err) {};\n\n  /**\n   * Fired when a top level component (VTIMEZONE) is found\n   *\n   * @callback\n   * @param {Timezone} component     Timezone object\n   */\n  ontimezone = /* c8 ignore next */ function(component) {};\n\n  /**\n   * Fired when a top level component (VEVENT) is found.\n   *\n   * @callback\n   * @param {Event} component    Top level component\n   */\n  onevent = /* c8 ignore next */ function(component) {};\n\n  /**\n   * Process a string or parse ical object.  This function itself will return\n   * nothing but will start the parsing process.\n   *\n   * Events must be registered prior to calling this method.\n   *\n   * @param {Component|String|Object} ical      The component to process,\n   *        either in its final form, as a jCal Object, or string representation\n   */\n  process(ical) {\n    //TODO: this is sync now in the future we will have a incremental parser.\n    if (typeof(ical) === 'string') {\n      ical = parse(ical);\n    }\n\n    if (!(ical instanceof Component)) {\n      ical = new Component(ical);\n    }\n\n    let components = ical.getAllSubcomponents();\n    let i = 0;\n    let len = components.length;\n    let component;\n\n    for (; i < len; i++) {\n      component = components[i];\n\n      switch (component.name) {\n        case 'vtimezone':\n          if (this.parseTimezone) {\n            let tzid = component.getFirstPropertyValue('tzid');\n            if (tzid) {\n              this.ontimezone(new Timezone({\n                tzid: tzid,\n                component: component\n              }));\n            }\n          }\n          break;\n        case 'vevent':\n          if (this.parseEvent) {\n            this.onevent(new Event(component));\n          }\n          break;\n        default:\n          continue;\n      }\n    }\n\n    //XXX: ideally we should do a \"nextTick\" here\n    //     so in all cases this is actually async.\n    this.oncomplete();\n  }\n}\n\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch */\n\n\n/**\n * The main ICAL module. Provides access to everything else.\n *\n * @alias ICAL\n * @namespace ICAL\n * @property {ICAL.design} design\n * @property {ICAL.helpers} helpers\n */\nvar ICALmodule = {\n  /**\n   * The number of characters before iCalendar line folding should occur\n   * @type {Number}\n   * @default 75\n   */\n  foldLength: 75,\n\n  debug: false,\n\n  /**\n   * The character(s) to be used for a newline. The default value is provided by\n   * rfc5545.\n   * @type {String}\n   * @default \"\\r\\n\"\n   */\n  newLineChar: '\\r\\n',\n\n  Binary,\n  Component,\n  ComponentParser,\n  Duration,\n  Event,\n  Period,\n  Property,\n  Recur,\n  RecurExpansion,\n  RecurIterator,\n  Time,\n  Timezone,\n  TimezoneService,\n  UtcOffset,\n  VCardTime,\n\n  parse,\n  stringify,\n\n  design,\n  helpers\n};\n\nexport { ICALmodule as default };\n", "// popup.js\n// Import ical.js for ICS parsing\nimport ICAL from 'ical.js';\n\n// Make ICAL globally available for the functions that use it\nwindow.ICAL = ICAL;\n\n// DOM elements - Move these inside DOMContentLoaded\n// const contentDiv = document.getElementById('content'); \n// const statusDiv = document.getElementById('status');\n\n// Global state\nlet availableModels = [];\nlet selectedModel = null;\n// let pageScreenshot = null; // Managed within generateICS now\nlet baseUrl = 'https://new.justin-c.com/email-to-ics'; // Add default base URL\nlet targetUrl = `${baseUrl}/?display=email`;\nlet modelsEndpointUrl = `${baseUrl}/?get_models=1`;\nlet debugMode = false; // Add debug mode flag\nlet lastSubmitParams = null; // Store last submission details for retry\n\n// --- Initial state ---\n// Remove init() call from global scope\n// init();\n\nasync function init() { // Keep function definition for now, might be removed later\n    try {\n        // Fetch credentials, preferences, and base URL\n        const credentialsPromise = getStoredCredentials();\n        const preferencesPromise = getStoredPreferences();\n        const baseUrlPromise = getStoredBaseUrl();\n\n        // Wait for credentials and settings first\n        const [prefs, storedBaseUrl, credentials] = await Promise.all([\n            preferencesPromise,\n            baseUrlPromise,\n            credentialsPromise\n        ]);\n        \n        baseUrl = storedBaseUrl || 'https://new.justin-c.com/email-to-ics';\n        targetUrl = `${baseUrl}/?display=email`;\n        modelsEndpointUrl = `${baseUrl}/?get_models=1`;\n        debugMode = prefs.debugMode || false;\n        \n        if (!credentials || !storedBaseUrl) {\n            showCredentialsForm(); // Calls showCredentialsForm -> Original logic tried to set contentDiv.innerHTML\n        } else {\n            // Credentials exist, now fetch models\n            const modelsPromise = fetchAvailableModels();\n            try {\n                 const models = await modelsPromise;\n                \n                availableModels = models;\n                \n                selectedModel = prefs.defaultModel || (availableModels.length > 0 ? (availableModels.find(model => model.default) || availableModels[0]).id : null);\n                debugMode = prefs.debugMode || false;\n                \n                showForm(prefs); // Calls showForm -> Original logic tried to set contentDiv.innerHTML\n            } catch (error) {\n                console.error(\"Error initializing models:\", error); \n                availableModels = await modelsPromise.catch(() => []);\n                selectedModel = prefs.defaultModel || null;\n                showForm(prefs); // Still needs to show form on error\n            }\n        }\n    } catch (error) {\n        console.error(\"Init error:\", error);\n        showCredentialsForm(); // Fallback to login on general error\n    }\n}\n\n// --- Model Management Functions ---\nasync function fetchAvailableModels() {\n    try {\n        // Get OpenRouter API key from storage\n        const settings = await new Promise((resolve) => {\n            chrome.storage.sync.get(['openRouterKey'], resolve);\n        });\n        \n        if (!settings.openRouterKey) {\n            console.warn('No OpenRouter API key found, using offline models');\n            return getOfflineAllowedModels();\n        }\n        \n        // Fetch models directly from OpenRouter API\n        const response = await fetch('https://openrouter.ai/api/v1/models', {\n            headers: {\n                'Authorization': `Bearer ${settings.openRouterKey}`,\n                'Content-Type': 'application/json'\n            }\n        });\n        \n        if (!response.ok) {\n            throw new Error(`HTTP ${response.status}`);\n        }\n        \n        const data = await response.json();\n        const allModels = data.data || [];\n        \n        // Filter to allowed models only\n        const filteredModels = filterAllowedModels(allModels);\n        console.log(\"Available models:\", filteredModels);\n        return filteredModels;\n        \n    } catch (error) {\n        console.error(\"Error fetching models:\", error);\n        return getOfflineAllowedModels();\n    }\n}\n\nfunction getOfflineAllowedModels() {\n    // Return allowed models even when offline\n    return [\n        { id: 'google/gemini-2.5-pro', name: 'Gemini 2.5 Pro' },\n        { id: 'anthropic/claude-opus-4', name: 'Claude Opus 4' },\n        { id: 'anthropic/claude-3.7-sonnet:thinking', name: 'Claude 3.7 Sonnet (Thinking)' },\n        { id: 'google/gemini-2.5-flash:thinking', name: 'Gemini 2.5 Flash (Thinking)' },\n        { id: 'google/gemini-2.5-flash', name: 'Gemini 2.5 Flash' },\n        { id: 'openai/o4-mini-high', name: 'GPT-4 Mini High' },\n        { id: 'openai/o3', name: 'GPT-O3' },\n        { id: 'openai/gpt-4.1', name: 'GPT-4.1' },\n        { id: 'openai/o3-pro', name: 'GPT-O3 Pro' }\n    ];\n}\n\nfunction filterAllowedModels(allModels) {\n    // Define allowed models\n    const allowedModelIds = [\n        'anthropic/claude-3.7-sonnet:thinking',\n        'google/gemini-2.5-flash:thinking',\n        'google/gemini-2.5-flash',\n        'openai/o4-mini-high',\n        'openai/o3',\n        'openai/gpt-4.1',\n        'google/gemini-2.5-pro',\n        'anthropic/claude-opus-4',\n        'openai/o3-pro'\n    ];\n\n    // Filter models to only include allowed ones\n    const filteredModels = allModels.filter(model => \n        allowedModelIds.includes(model.id)\n    );\n\n    // Add any missing models with fallback names\n    const foundIds = filteredModels.map(m => m.id);\n    const missingIds = allowedModelIds.filter(id => !foundIds.includes(id));\n    \n    missingIds.forEach(id => {\n        const fallbackModel = getOfflineAllowedModels().find(m => m.id === id);\n        if (fallbackModel) {\n            filteredModels.push(fallbackModel);\n        }\n    });\n\n    // Sort models with preferred order\n    const preferredOrder = [\n        'google/gemini-2.5-pro',\n        'anthropic/claude-opus-4',\n        'anthropic/claude-3.7-sonnet:thinking',\n        'google/gemini-2.5-flash:thinking',\n        'google/gemini-2.5-flash',\n        'openai/o4-mini-high',\n        'openai/o3',\n        'openai/gpt-4.1',\n        'openai/o3-pro'\n    ];\n\n    return filteredModels.sort((a, b) => {\n        const aIndex = preferredOrder.indexOf(a.id);\n        const bIndex = preferredOrder.indexOf(b.id);\n        return (aIndex === -1 ? 999 : aIndex) - (bIndex === -1 ? 999 : bIndex);\n    });\n}\n\n// --- Screenshot Capture ---\n\n// Helper function to be executed in the target tab's context\nfunction getPageDimensions() {\n    return {\n        scrollWidth: document.documentElement.scrollWidth,\n        scrollHeight: document.documentElement.scrollHeight,\n        innerWidth: window.innerWidth,\n        innerHeight: window.innerHeight,\n        originalZoom: document.body.style.zoom,\n        originalTransformOrigin: document.body.style.transformOrigin,\n        originalScrollX: window.scrollX,\n        originalScrollY: window.scrollY\n    };\n}\n\n// Helper function to apply zoom (runs in tab context)\nfunction applyZoomStyle(zoomFactor, originalZoom, originalTransformOrigin) {\n    document.body.style.zoom = zoomFactor;\n    document.body.style.transformOrigin = '0 0';\n    // Return originals in case needed, though we aim to just remove the style\n    return { originalZoom, originalTransformOrigin }; \n}\n\n// Helper function to remove zoom (runs in tab context)\nfunction removeZoomStyle(originalZoom, originalTransformOrigin) {\n    // Attempt to restore originals, or simply remove if they were empty\n    document.body.style.zoom = originalZoom || ''; \n    document.body.style.transformOrigin = originalTransformOrigin || '';\n}\n\n// Helper function to scroll (runs in tab context)\nfunction scrollToPosition(x, y) {\n    window.scrollTo(x, y);\n}\n\n// Updated screenshot logic using zoom and scroll\nasync function captureVisibleTabScreenshot() {\n    // Check if we're in an iframe\n    if (window.self !== window.top) {\n        // We're in an iframe, request screenshot from background\n        return new Promise((resolve) => {\n            chrome.runtime.sendMessage({ action: 'captureScreenshot' }, (response) => {\n                if (response && response.screenshot) {\n                    // Background returns base64 without data URL prefix\n                    resolve('data:image/jpeg;base64,' + response.screenshot);\n                } else {\n                    console.error('Screenshot request failed:', response?.error);\n                    resolve(null);\n                }\n            });\n        });\n    }\n    \n    // Original popup logic for when not in iframe\n    let originalState = {}; // Store original state (zoom, scroll)\n    const tab = await getActiveTab();\n    let dataUrl = null;\n\n    try {\n        // 1. Get dimensions and original state from the page\n        const [initialResult] = await chrome.scripting.executeScript({\n            target: { tabId: tab.id },\n            func: getPageDimensions\n        });\n        const state = initialResult.result;\n        originalState = { \n            zoom: state.originalZoom, \n            transformOrigin: state.originalTransformOrigin,\n            scrollX: state.originalScrollX,\n            scrollY: state.originalScrollY\n        }; \n\n        // 2. Scroll to top-left\n        await chrome.scripting.executeScript({\n            target: { tabId: tab.id },\n            func: scrollToPosition,\n            args: [0, 0]\n        });\n\n        // 3. Calculate zoom factor\n        const zoomX = state.innerWidth / state.scrollWidth;\n        const zoomY = state.innerHeight / state.scrollHeight;\n        const zoomFactor = Math.min(zoomX, zoomY, 1);\n\n        if (zoomFactor < 1) { \n            // 4. Apply zoom\n            await chrome.scripting.executeScript({\n                target: { tabId: tab.id },\n                func: applyZoomStyle,\n                args: [zoomFactor, originalState.zoom, originalState.transformOrigin]\n            });\n\n            // 5. Wait for rendering\n            await new Promise(resolve => setTimeout(resolve, 250)); \n        }\n\n        // 6. Capture screenshot\n        dataUrl = await chrome.tabs.captureVisibleTab(tab.windowId, {\n            format: 'jpeg',\n            quality: 90\n        });\n\n        if (!dataUrl) {\n             throw new Error(\"captureVisibleTab returned empty result after zoom/scroll.\");\n        }\n\n        console.log(\"Zoomed+Scrolled screenshot captured successfully\");\n        return dataUrl;\n\n    } catch (error) {\n        console.error(\"Zoomed+Scrolled screenshot capture error:\", error);\n        return null;\n    } finally {\n        // 7. Cleanup: Always try to restore zoom and scroll\n        if (Object.keys(originalState).length > 0) {\n             try {\n                // Remove zoom first\n                await chrome.scripting.executeScript({\n                    target: { tabId: tab.id }, \n                    func: removeZoomStyle,\n                    args: [originalState.zoom, originalState.transformOrigin]\n                });\n                // Then restore scroll\n                 await chrome.scripting.executeScript({\n                    target: { tabId: tab.id }, \n                    func: scrollToPosition,\n                    args: [originalState.scrollX, originalState.scrollY]\n                });\n            } catch (cleanupError) {\n                console.error(\"Error cleaning up zoom/scroll style:\", cleanupError);\n            }\n        }\n    }\n}\n\n// --- Credential Management Functions ---\nasync function checkCredentials() {\n    try {\n        const credentials = await getStoredCredentials();\n        const storedBaseUrl = await getStoredBaseUrl(); // Check base URL too\n        if (credentials && storedBaseUrl) {\n            showForm();\n        } else {\n            showCredentialsForm();\n        }\n    } catch (error) {\n        console.error(\"Error checking credentials:\", error);\n        showCredentialsForm();\n    }\n}\n\nasync function getStoredCredentials() {\n    return new Promise((resolve) => {\n        chrome.storage.sync.get(['username', 'password'], (result) => {\n            if (result.username && result.password) {\n                const credentials = btoa(`${result.username}:${result.password}`);\n                // Return object with username and encoded creds\n                resolve({ username: result.username, encoded: credentials }); \n            } else {\n                resolve(null);\n            }\n        });\n    });\n}\n\n// New helper to just get the username\nasync function getStoredUsername() {\n     return new Promise((resolve) => {\n        chrome.storage.sync.get(['username'], (result) => {\n            resolve(result.username || null);\n        });\n    });\n}\n\n// MODIFIED showCredentialsForm\nasync function showCredentialsForm(errorMessage = null) {\n    // This function now needs access to authSection and formSection\n    // It should primarily SHOW authSection and HIDE formSection\n    // The actual HTML content is already in popup.html\n    \n    // We might need to pass the DOM elements or get them here if needed,\n    // but the primary logic is handled by checkAuthenticationAndFetchConfig\n    // inside DOMContentLoaded now.\n    // This function might become redundant or simplified.\n    console.warn(\"showCredentialsForm called - logic likely moved to checkAuthenticationAndFetchConfig\");\n    // If called directly, ensure visibility is set correctly\n    const authSection = document.getElementById('auth-section');\n    const formSection = document.getElementById('form-section');\n    if (authSection) authSection.style.display = 'block';\n    if (formSection) formSection.style.display = 'none';\n\n    // Maybe display the error message somewhere?\n    if (errorMessage) {\n        const statusDiv = document.getElementById('status'); // Assuming statusDiv is accessible\n        if (statusDiv) {\n            statusDiv.textContent = errorMessage;\n            statusDiv.className = 'status-error';\n            statusDiv.style.display = 'block';\n        }\n    }\n}\n\nasync function saveCredentials(event) {\n    // ... (existing code, BUT the final call should be to the new init logic)\n    // Instead of init(), call checkAuthenticationAndFetchConfig if it's defined globally\n    // OR rely on the event listener setup within DOMContentLoaded\n}\n\n// --- Preferences Management ---\nasync function getStoredPreferences() {\n    return new Promise((resolve) => {\n        // Include debugMode in retrieval\n        chrome.storage.sync.get(['takeScreenshots', 'defaultModel', 'debugMode'], (result) => {\n            resolve({\n                takeScreenshots: result.takeScreenshots !== false, // Default to true if not set\n                defaultModel: result.defaultModel || null,\n                debugMode: result.debugMode || false // Default to false\n            });\n        });\n    });\n}\n\nfunction savePreferences(takeScreenshots, model, currentDebugMode) {\n    // Include debugMode in saving\n    debugMode = currentDebugMode; // Update global state\n    chrome.storage.sync.set({\n        takeScreenshots: takeScreenshots,\n        defaultModel: model,\n        debugMode: currentDebugMode\n    });\n    \n    // Also notify background script (if needed, though background doesn't use debug mode currently)\n    chrome.runtime.sendMessage({\n        action: 'savePreferences',\n        takeScreenshots: takeScreenshots,\n        defaultModel: model\n    });\n}\n\n// --- Main Form Functions ---\n// MODIFIED showForm\nfunction showForm(preferences = {}) {\n     // This function also becomes simpler. It mainly ensures\n     // formSection is visible and authSection is hidden.\n     // Populating the form fields (like model dropdown) still needs doing.\n    console.warn(\"showForm called - logic likely moved to checkAuthenticationAndFetchConfig\");\n    const authSection = document.getElementById('auth-section');\n    const formSection = document.getElementById('form-section');\n    if (authSection) authSection.style.display = 'none';\n    if (formSection) formSection.style.display = 'block';\n\n    // Populate models etc. should happen within checkAuthenticationAndFetchConfig\n}\n\n// MODIFIED showStatus\nfunction showStatus(type, messageHtml) {\n    // This function needs access to statusDiv\n    // It might be better defined *inside* DOMContentLoaded\n    console.warn(\"Global showStatus called\");\n    const statusDiv = document.getElementById('status');\n    if (!statusDiv) return;\n\n    statusDiv.innerHTML = messageHtml;\n    statusDiv.className = type; \n    // contentDiv.style.display = 'none'; // Cannot access contentDiv\n    const formSection = document.getElementById('form-section');\n    if (formSection) formSection.style.display = 'none';\n\n    // ... (rest of the showStatus logic for retry button etc.)\n}\n\n// --- Helper Functions ---\nasync function getActiveTab() {\n    const tabs = await chrome.tabs.query({ active: true, currentWindow: true });\n    if (tabs && tabs.length > 0) {\n        return tabs[0];\n    } else {\n        throw new Error(\"Could not get active tab.\");\n    }\n}\n\nasync function getPageContent(tabId) {\n    try {\n        const results = await chrome.scripting.executeScript({\n            target: { tabId: tabId },\n            func: () => ({\n                url: window.location.href,\n                html: document.documentElement.outerHTML\n            })\n        });\n        if (results && results[0] && results[0].result) {\n            return results[0].result;\n        } else {\n            console.error(\"Script execution failed or returned no result.\", results);\n            throw new Error(\"Could not get page content.\");\n        }\n    } catch (error) {\n        console.error(\"Error executing script:\", error);\n        if (chrome.runtime.lastError) {\n            console.error(\"Chrome runtime error:\", chrome.runtime.lastError.message);\n            throw new Error(`Failed to get page content: ${chrome.runtime.lastError.message}`);\n        }\n        throw error;\n    }\n}\n\n// --- Event Handlers ---\n\n// MODIFIED handleSubmit - logic moved to generateICS inside DOMContentLoaded\nasync function handleSubmit(event) {\n   console.error(\"Global handleSubmit called - should not happen\");\n}\n\n// MODIFIED executeSubmit - logic moved to generateICS inside DOMContentLoaded\nasync function executeSubmit(params) {\n   console.error(\"Global executeSubmit called - should not happen\");\n}\n\n// MODIFIED handleRetry - logic moved to event listener inside DOMContentLoaded\nasync function handleRetry() {\n    console.error(\"Global handleRetry called - should not happen\");\n}\n\n// MODIFIED getStoredBaseUrl - Keep\nasync function getStoredBaseUrl() {\n    return new Promise((resolve) => {\n        chrome.storage.sync.get(['baseUrl'], (result) => {\n            resolve(result.baseUrl || null);\n        });\n    });\n}\n\n// MODIFIED logout - Keep, but simplify\nasync function logout() {\n    // ... (clear storage) ...\n    // After clearing storage, just call the main init function from DOMContentLoaded\n    // This assumes checkAuthenticationAndFetchConfig handles the UI update\n    console.log(\"Logout called - relying on DOMContentLoaded handler to refresh UI\");\n    // Trigger the main check again\n    if (typeof checkAuthenticationAndFetchConfig === 'function') {\n         checkAuthenticationAndFetchConfig(); \n    } else {\n        // Fallback: reload the popup? Requires permission.\n        // window.location.reload(); \n        console.error(\"Cannot re-trigger auth check after logout.\");\n    }\n}\n\n// --- NEW Consolidated DOMContentLoaded Listener ---\n// The previous block starting with document.addEventListener should be the *only* one.\n// Remove the old code above this point or comment it out entirely.\n\ndocument.addEventListener('DOMContentLoaded', function() {\n    // Check if we're running in an iframe\n    const isInIframe = window.self !== window.top;\n    \n    // Listen for settings updates\n    chrome.runtime.onMessage.addListener((message, sender, sendResponse) => {\n        if (message.action === 'settingsUpdated') {\n            console.log('Settings updated, reloading popup...');\n            // Reload the popup to refresh with new settings\n            window.location.reload();\n        }\n    });\n    \n    // Handle close button click\n    const closePopupButton = document.getElementById('close-popup');\n    if (closePopupButton) {\n        closePopupButton.addEventListener('click', () => {\n            if (isInIframe) {\n                // We're in an iframe, send close message to parent\n                window.parent.postMessage({ type: 'CLOSE_IFRAME' }, '*');\n            } else {\n                // Not in iframe, just close the window\n                window.close();\n            }\n        });\n    }\n    \n    // Listen for messages from the parent window (if in iframe)\n    if (isInIframe) {\n        window.addEventListener('message', (event) => {\n            if (event.data.type === 'INIT_FROM_CONTENT') {\n                // Pre-fill URL from parent page\n                const urlInput = document.getElementById('url');\n                if (urlInput && event.data.data.url) {\n                    urlInput.value = event.data.data.url;\n                }\n            }\n        });\n    }\n    \n    // Add a manual handler for the collapse functionality\n    document.querySelector('[data-bs-toggle=\"collapse\"]').addEventListener('click', function() {\n        // Toggle the collapse\n        const targetId = this.getAttribute('data-bs-target');\n        const targetElement = document.querySelector(targetId);\n        \n        // Toggle the aria-expanded attribute\n        const isCurrentlyExpanded = this.getAttribute('aria-expanded') === 'true';\n        this.setAttribute('aria-expanded', !isCurrentlyExpanded);\n        \n        // Toggle the collapse element\n        if (targetElement) {\n            targetElement.classList.toggle('show');\n        }\n    });\n    \n    // Define ALL DOM element constants here\n    const statusDiv = document.getElementById('status');\n    const reviewStatusDiv = document.getElementById('review-status');\n    const urlInput = document.getElementById('url');\n    const convertButton = document.getElementById('convert-button');\n    // const screenshotButton = document.getElementById('screenshot-button'); // Removed\n    const instructionsInput = document.getElementById('instructions');\n    const modelSelect = document.getElementById('model-select');\n    // const modelDescriptionText = document.getElementById('model-description-text'); // Removed\n    const refreshModelsButton = document.getElementById('refresh-models');\n    const authSection = document.getElementById('auth-section');\n    const formSection = document.getElementById('form-section');\n    const openServerPageButton = document.getElementById('open-server-page');\n    const tentativeToggle = document.getElementById('tentative-toggle');\n    const multidayToggle = document.getElementById('multiday-toggle');\n    const reviewRadioGroup = document.querySelectorAll('input[name=\"review-option\"]');\n    const reviewSection = document.getElementById('review-section');\n    const reviewContent = document.getElementById('review-content');\n    const reviewRecipient = document.getElementById('review-recipient');\n    const reviewSubject = document.getElementById('review-subject'); // Get the new subject element\n    const sendButton = document.getElementById('send-button');\n    const rejectButton = document.getElementById('reject-button');\n\n    // --- NEW elements for processing view ---\n    const processingView = document.getElementById('processingView');\n    const requestData = document.getElementById('requestData');\n    const statusMessage = document.getElementById('statusMessage');\n    const responseData = document.getElementById('responseData');\n    const backToFormButton = document.getElementById('backToFormButton');\n    // --------------------------------------\n\n    // Define global state needed within this scope\n    let reviewData = null;\n    let serverUrl = ''; \n    let isAuthenticated = false;\n    let localAvailableModels = []; // Use a name different from global scope if needed\n    let serverDefaultModelId = null;\n    let currentTabId = null;\n\n    // Tab State Manager\n    class TabStateManager {\n        constructor() {\n            this.tabId = null;\n            this.stateKey = null;\n        }\n        \n        async initialize() {\n            try {\n                const [tab] = await chrome.tabs.query({active: true, currentWindow: true});\n                this.tabId = tab.id;\n                this.stateKey = `tab_${this.tabId}_state`;\n                currentTabId = this.tabId;\n                \n                // Restore state for current tab\n                await this.restoreState();\n                \n                // Save state when popup closes\n                window.addEventListener('beforeunload', () => this.saveState());\n            } catch (error) {\n                console.error('Error initializing tab state manager:', error);\n            }\n        }\n        \n        async saveState() {\n            if (!this.tabId) return;\n            \n            const state = {\n                formData: {\n                    url: urlInput?.value || '',\n                    instructions: instructionsInput?.value || '',\n                    model: modelSelect?.value || '',\n                    tentative: tentativeToggle?.checked || false,\n                    multiday: multidayToggle?.checked || false,\n                    reviewOption: document.querySelector('input[name=\"review-option\"]:checked')?.value || 'direct'\n                },\n                processingState: {\n                    isProcessing: processingView?.style.display === 'block',\n                    hasResults: responseData?.textContent || ''\n                },\n                timestamp: Date.now()\n            };\n            \n            try {\n                await chrome.storage.local.set({[this.stateKey]: state});\n                console.log('Saved state for tab', this.tabId);\n            } catch (error) {\n                console.error('Error saving tab state:', error);\n            }\n        }\n        \n        async restoreState() {\n            if (!this.tabId) return;\n            \n            try {\n                const result = await chrome.storage.local.get([this.stateKey]);\n                const state = result[this.stateKey];\n                \n                if (state && (Date.now() - state.timestamp) < 3600000) { // 1 hour\n                    const form = state.formData;\n                    if (form.url && urlInput) urlInput.value = form.url;\n                    if (form.instructions && instructionsInput) instructionsInput.value = form.instructions;\n                    if (form.model && modelSelect) modelSelect.value = form.model;\n                    if (tentativeToggle) tentativeToggle.checked = form.tentative;\n                    if (multidayToggle) multidayToggle.checked = form.multiday;\n                    if (form.reviewOption) {\n                        const radio = document.querySelector(`input[name=\"review-option\"][value=\"${form.reviewOption}\"]`);\n                        if (radio) radio.checked = true;\n                    }\n                    \n                    console.log('Restored state for tab', this.tabId);\n                }\n            } catch (error) {\n                console.error('Error restoring tab state:', error);\n            }\n        }\n        \n        async cleanup() {\n            try {\n                const allItems = await chrome.storage.local.get(null);\n                const now = Date.now();\n                const keysToRemove = [];\n                \n                for (const key in allItems) {\n                    if (key.startsWith('tab_') && key.endsWith('_state')) {\n                        const state = allItems[key];\n                        if (state && now - state.timestamp > 86400000) { // 24 hours\n                            keysToRemove.push(key);\n                        }\n                    }\n                }\n                \n                if (keysToRemove.length > 0) {\n                    await chrome.storage.local.remove(keysToRemove);\n                    console.log('Cleaned up', keysToRemove.length, 'old tab states');\n                }\n            } catch (error) {\n                console.error('Error cleaning up tab states:', error);\n            }\n        }\n    }\n    \n    // Initialize tab state manager\n    const tabStateManager = new TabStateManager();\n\n    // --- Utility Functions defined within this scope ---\n    // Screenshot helpers\n    function getPageDimensions() {\n        return {\n            scrollWidth: document.documentElement.scrollWidth,\n            scrollHeight: document.documentElement.scrollHeight,\n            innerWidth: window.innerWidth,\n            innerHeight: window.innerHeight,\n            originalZoom: document.body.style.zoom,\n            originalTransformOrigin: document.body.style.transformOrigin,\n            originalScrollX: window.scrollX,\n            originalScrollY: window.scrollY\n        };\n    }\n    function applyZoomStyle(zoomFactor, originalZoom, originalTransformOrigin) {\n        document.body.style.zoom = zoomFactor;\n        document.body.style.transformOrigin = '0 0';\n        return { originalZoom, originalTransformOrigin }; \n    }\n    function removeZoomStyle(originalZoom, originalTransformOrigin) {\n        document.body.style.zoom = originalZoom || ''; \n        document.body.style.transformOrigin = originalTransformOrigin || '';\n    }\n    function scrollToPosition(x, y) {\n        window.scrollTo(x, y);\n    }\n    // Main screenshot function\n    async function captureVisibleTabScreenshot() {\n        // Check if we're in an iframe\n        if (window.self !== window.top) {\n            // We're in an iframe, request screenshot from background\n            return new Promise((resolve) => {\n                chrome.runtime.sendMessage({ action: 'captureScreenshot' }, (response) => {\n                    if (chrome.runtime.lastError) {\n                        console.error('Screenshot message error:', chrome.runtime.lastError.message);\n                        resolve(null);\n                        return;\n                    }\n                    \n                    if (response && response.success && response.screenshot) {\n                        // Background returns base64 without data URL prefix\n                        resolve('data:image/jpeg;base64,' + response.screenshot);\n                    } else {\n                        console.error('Screenshot request failed:', response?.error || 'Unknown error');\n                        resolve(null);\n                    }\n                });\n            });\n        }\n        \n        // Original popup logic for when not in iframe\n        let originalState = {}; \n        const tab = await getActiveTab(); // Needs getActiveTab defined in scope too\n        let dataUrl = null;\n\n        try {\n            const [initialResult] = await chrome.scripting.executeScript({\n                target: { tabId: tab.id },\n                func: getPageDimensions\n            });\n            const state = initialResult.result;\n            originalState = { \n                zoom: state.originalZoom, \n                transformOrigin: state.originalTransformOrigin,\n                scrollX: state.originalScrollX,\n                scrollY: state.originalScrollY\n            }; \n\n            await chrome.scripting.executeScript({\n                target: { tabId: tab.id },\n                func: scrollToPosition,\n                args: [0, 0]\n            });\n\n            const zoomX = state.innerWidth / state.scrollWidth;\n            const zoomY = state.innerHeight / state.scrollHeight;\n            const zoomFactor = Math.min(zoomX, zoomY, 1);\n\n            if (zoomFactor < 1) { \n                await chrome.scripting.executeScript({\n                    target: { tabId: tab.id },\n                    func: applyZoomStyle,\n                    args: [zoomFactor, originalState.zoom, originalState.transformOrigin]\n                });\n                await new Promise(resolve => setTimeout(resolve, 250)); \n            }\n\n            dataUrl = await chrome.tabs.captureVisibleTab(tab.windowId, {\n                format: 'jpeg',\n                quality: 90\n            });\n\n            if (!dataUrl) {\n                 throw new Error(\"captureVisibleTab returned empty result after zoom/scroll.\");\n            }\n            console.log(\"Zoomed+Scrolled screenshot captured successfully\");\n            return dataUrl;\n\n        } catch (error) {\n            console.error(\"Zoomed+Scrolled screenshot capture error:\", error);\n            return null;\n        } finally {\n            if (Object.keys(originalState).length > 0) {\n                 try {\n                    await chrome.scripting.executeScript({\n                        target: { tabId: tab.id }, \n                        func: removeZoomStyle,\n                        args: [originalState.zoom, originalState.transformOrigin]\n                    });\n                     await chrome.scripting.executeScript({\n                        target: { tabId: tab.id }, \n                        func: scrollToPosition,\n                        args: [originalState.scrollX, originalState.scrollY]\n                    });\n                } catch (cleanupError) {\n                    console.error(\"Error cleaning up zoom/scroll style:\", cleanupError);\n                }\n            }\n        }\n    }\n\n    // Helper function to get active tab (needed by screenshot)\n    async function getActiveTab() {\n        const tabs = await chrome.tabs.query({ active: true, currentWindow: true });\n        if (tabs && tabs.length > 0) {\n            return tabs[0];\n        } else {\n            throw new Error(\"Could not get active tab.\");\n        }\n    }\n\n    // Status and UI helpers\n    function showStatus(message, type = 'loading', isError = false) { // Added isError flag\n        if (!statusDiv) return;\n        statusDiv.textContent = message;\n        statusDiv.className = `status-${type}`;\n        statusDiv.style.display = 'block';\n        // Adjust body class for errors if needed\n        if (isError) { \n             document.body.classList.add('error-state');\n        } else {\n             document.body.classList.remove('error-state');\n        }\n    }\n\n    function showReviewStatus(message, type = 'loading') {\n         if (!reviewStatusDiv) return;\n        reviewStatusDiv.textContent = message;\n        reviewStatusDiv.className = `status-${type}`;\n        reviewStatusDiv.style.display = 'block';\n    }\n    \n    // Define hideStatus, hideReviewStatus, disableForm, disableReviewButtons\n    function hideStatus() {\n        if (!statusDiv) return;\n        statusDiv.style.display = 'none';\n        statusDiv.textContent = '';\n        document.body.classList.remove('error-state'); // Also remove error state class\n    }\n\n    function hideReviewStatus() {\n        if (!reviewStatusDiv) return;\n        reviewStatusDiv.style.display = 'none';\n        reviewStatusDiv.textContent = '';\n    }\n\n    function disableForm(disable = true) {\n        urlInput.disabled = disable;\n        instructionsInput.disabled = disable;\n        convertButton.disabled = disable;\n        modelSelect.disabled = disable;\n        refreshModelsButton.disabled = disable;\n        tentativeToggle.disabled = disable;\n        reviewRadioGroup.forEach(radio => radio.disabled = disable);\n    }\n\n    function disableReviewButtons(disable = true) {\n        sendButton.disabled = disable;\n        rejectButton.disabled = disable;\n    }\n\n    // --- Core Logic defined within this scope ---\n    // Move checkAuthenticationAndFetchConfig, loadModels, populateModelDropdown here\n    // Ensure they use localAvailableModels, serverUrl, etc.\n\n    // Definition for loadModels\n    async function loadModels(forceRefresh = false) {\n        if (!isAuthenticated) {\n            console.log(\"loadModels: Not authenticated, skipping.\");\n        return;\n    }\n\n        // Basic caching check (adjust if more sophisticated caching needed)\n        if (!forceRefresh && localAvailableModels.length > 0) {\n             console.log('loadModels: Using cached models.');\n             populateModelDropdown(); // Use local populate\n             return;\n         }\n\n        console.log(\"loadModels: Fetching models from server...\");\n        showStatus('Loading AI models...'); // Use local showStatus\n        if(modelSelect) modelSelect.disabled = true;\n        if(refreshModelsButton) refreshModelsButton.disabled = true;\n\n        try {\n            // Use the same fetchAvailableModels function we fixed above\n            const models = await fetchAvailableModels();\n            console.log(\"loadModels: Received models:\", models);\n\n            // Get saved model preference from settings\n            const settings = await new Promise((resolve) => {\n                chrome.storage.sync.get(['aiModel'], resolve);\n            });\n            const savedModel = settings.aiModel || 'google/gemini-2.5-pro';\n            \n            // Convert models to expected format if needed\n            localAvailableModels = models.map(model => ({\n                id: model.id,\n                name: model.name || model.id,\n                vision_capable: model.vision_capable || false,\n                default: model.id === savedModel // Set default from settings\n            }));\n\n            // Find the default model ID\n            serverDefaultModelId = localAvailableModels.find(m => m.default)?.id || (localAvailableModels.length > 0 ? localAvailableModels[0].id : null);\n            console.log(\"loadModels: Default model ID:\", serverDefaultModelId);\n\n            populateModelDropdown(); // Use local populate\n            hideStatus(); // Use local hideStatus\n\n        } catch (error) {\n            console.error('loadModels: Error loading models:', error);\n            showStatus(`Error loading models: ${error.message}`, 'error', true); // Use local showStatus\n            if(modelSelect) modelSelect.innerHTML = '<option value=\"\">Error loading</option>';\n        } finally {\n            if(modelSelect) modelSelect.disabled = false;\n            if(refreshModelsButton) refreshModelsButton.disabled = false;\n            console.log(\"loadModels: Finished.\");\n        }\n    }\n\n    // Definition for populateModelDropdown\n    function populateModelDropdown() {\n        if (!modelSelect) return;\n        modelSelect.innerHTML = ''; // Clear existing options\n        console.log(\"populateModelDropdown: Populating with models:\", localAvailableModels);\n\n        if (localAvailableModels.length === 0) {\n            modelSelect.innerHTML = '<option value=\"\">No models available</option>';\n            // if(modelDescriptionText) modelDescriptionText.textContent = 'Could not load models from the server.'; // Removed\n            return;\n        }\n\n        localAvailableModels.forEach(model => {\n            const option = document.createElement('option');\n            option.value = model.id;\n            option.textContent = model.name + (model.vision_capable ? ' (Vision)' : '');\n            // Select based on the serverDefaultModelId determined in loadModels\n            option.selected = (model.id === serverDefaultModelId);\n            modelSelect.appendChild(option);\n        });\n\n        // Trigger change event AFTER options are added\n        // modelSelect.dispatchEvent(new Event('change')); // No longer needed as description is gone\n         console.log(\"populateModelDropdown: Finished.\");\n    }\n\n    async function testBackgroundConnection() {\n        return new Promise((resolve) => {\n            console.log('Testing background script connectivity...');\n            \n            // Add timeout for the ping\n            const timeout = setTimeout(() => {\n                console.error('Background ping timeout');\n                resolve(false);\n            }, 5000);\n            \n            chrome.runtime.sendMessage({ action: 'ping' }, (response) => {\n                clearTimeout(timeout);\n                \n                if (chrome.runtime.lastError) {\n                    console.error('Background connectivity test failed:', chrome.runtime.lastError.message);\n                    resolve(false);\n                } else if (response && response.success) {\n                    console.log('Background script is responsive');\n                    resolve(true);\n                } else {\n                    console.warn('Background script returned unexpected response:', response);\n                    resolve(false);\n                }\n            });\n        });\n    }\n\n    async function wakeUpServiceWorker() {\n        console.log('Attempting to wake up service worker...');\n        \n        // Try multiple wake-up attempts\n        for (let attempt = 1; attempt <= 3; attempt++) {\n            console.log(`Wake-up attempt ${attempt}/3`);\n            \n            const isAwake = await testBackgroundConnection();\n            if (isAwake) {\n                console.log('Service worker is awake and responsive');\n                return true;\n            }\n            \n            // Wait before next attempt\n            if (attempt < 3) {\n                console.log('Waiting before next attempt...');\n                await new Promise(resolve => setTimeout(resolve, 1000));\n            }\n        }\n        \n        console.error('Failed to wake up service worker after 3 attempts');\n        return false;\n    }\n\n    async function checkAuthenticationAndFetchConfig() {\n        console.log(\"checkAuthenticationAndFetchConfig: Starting\"); \n        try {\n            // Wake up service worker and test connectivity\n            const bgConnected = await wakeUpServiceWorker();\n            if (!bgConnected) {\n                console.warn('Background script not responding - some features may not work');\n                // Show warning to user\n                if (statusDiv) {\n                    statusDiv.innerHTML = `\n                        <div style=\"background: #fff3cd; color: #856404; padding: 8px; border-radius: 4px; margin-bottom: 10px; font-size: 12px;\">\n                            \u26A0\uFE0F Background service worker not responding. Some features may not work properly.\n                        </div>\n                    `;\n                }\n            }\n            \n            // Check if we have the required API keys configured\n            const settings = await new Promise((resolve) => {\n                chrome.storage.sync.get(['openRouterKey', 'postmarkApiKey', 'fromEmail'], resolve);\n            });\n            \n            if (!settings.openRouterKey || !settings.postmarkApiKey || !settings.fromEmail) {\n                // Not configured - show auth section with link to settings\n                console.log(\"checkAuthenticationAndFetchConfig: Missing API keys - showing auth section.\");\n                isAuthenticated = false;\n                if (authSection) {\n                    authSection.style.display = 'block';\n                    authSection.innerHTML = `\n                        <div style=\"text-align: center; padding: 20px;\">\n                            <h3>Setup Required</h3>\n                            <p>Please configure your API keys and email settings.</p>\n                            <button id=\"openSettingsBtn\" class=\"btn btn-primary\">Open Settings</button>\n                        </div>\n                    `;\n                    \n                    // Add click handler for settings button\n                    document.getElementById('openSettingsBtn').addEventListener('click', () => {\n                        chrome.tabs.create({ url: chrome.runtime.getURL('settings.html') });\n                    });\n                }\n                if (formSection) formSection.style.display = 'none';\n                hideStatus(); \n                return;\n            }\n            \n            // Configuration found - proceed with normal flow\n            console.log(\"checkAuthenticationAndFetchConfig: API keys found - authorized\");\n            isAuthenticated = true;\n            if (authSection) authSection.style.display = 'none';\n            if (formSection) formSection.style.display = 'block';\n            hideStatus(); \n            \n            console.log(\"checkAuthenticationAndFetchConfig: Loading models...\");\n            await loadModels(); \n            \n            // Populate URL field with the current tab's URL\n            chrome.tabs.query({ active: true, currentWindow: true }, function(tabs) {\n                if (tabs[0] && tabs[0].url && (tabs[0].url.startsWith('http:') || tabs[0].url.startsWith('https:'))) {\n                    if (urlInput) urlInput.value = tabs[0].url;\n                    console.log(\"checkAuthenticationAndFetchConfig: Populated URL field.\");\n                }\n            });\n\n        } catch (error) {\n            console.error('checkAuthenticationAndFetchConfig: Error:', error);\n            showStatus(`Error: ${error.message}`, 'error', true); \n            // Ensure both sections are hidden on error\n            if (authSection) authSection.style.display = 'none';\n            if (formSection) formSection.style.display = 'none';\n            console.log(\"checkAuthenticationAndFetchConfig: Hiding sections due to error.\");\n        }\n    }\n\n    // --- NEW: Function to check and apply context menu instructions ---\n    async function applyContextMenuInstructions() {\n        try {\n            const data = await new Promise((resolve) => {\n                chrome.storage.local.get(['contextMenuInstructions'], resolve);\n            });\n\n            if (data && data.contextMenuInstructions) {\n                console.log(\"Applying context menu instructions:\", data.contextMenuInstructions);\n                if (instructionsInput) {\n                    instructionsInput.value = data.contextMenuInstructions;\n                }\n                // Clear the stored value so it's not reused\n                chrome.storage.local.remove('contextMenuInstructions', () => {\n                    if (chrome.runtime.lastError) {\n                        console.error(\"Error removing context menu instructions:\", chrome.runtime.lastError);\n                    }\n                });\n            }\n        } catch (error) {\n            console.error(\"Error applying context menu instructions:\", error);\n        }\n    }\n    // ----------------------------------------------------------------\n\n    // --- NEW: Refactored/Modified generateICS ---\n    async function generateICS() {\n        if (!isAuthenticated) {\n            showStatus('Not authenticated.', 'error', true); // Still use showStatus for initial auth error\n            return;\n        }\n\n        let showingReview = false; // <--- DECLARE showingReview here\n\n        const urlValue = urlInput.value.trim();\n        const instructionsValue = instructionsInput.value.trim();\n        const selectedModelValue = modelSelect.value;\n        const isTentativeValue = tentativeToggle.checked;\n        const isMultidayValue = multidayToggle.checked;\n        const reviewOptionValue = document.querySelector('input[name=\\\"review-option\\\"]:checked')?.value || 'direct';\n\n        // Prepare request details text\n        let requestDetailsText = `URL: ${urlValue || '(Using current tab)'}\\n`;\n        requestDetailsText += `Instructions: ${instructionsValue || '(None)'}\\n`;\n        requestDetailsText += `Model: ${selectedModelValue || '(Default)'}\\n`;\n        requestDetailsText += `Tentative: ${isTentativeValue}\\n`;\n        requestDetailsText += `Multi-day: ${isMultidayValue}\\n`;\n        requestDetailsText += `Review Option: ${reviewOptionValue}\\n`;\n        requestData.textContent = requestDetailsText;\n\n        // Switch view - hide form during processing but keep back button enabled\n        hideStatus(); // Hide main status div if it was shown\n        hideReviewStatus();\n        reviewSection.style.display = 'none';\n        formSection.style.display = 'none'; // Hide the form during processing\n        processingView.style.display = 'block';\n        statusMessage.textContent = 'Processing...';\n        statusMessage.className = 'status-loading';\n        responseData.textContent = '';\n        // Hide the Close button during processing\n        const closeButton = document.getElementById('closeButton');\n        if (closeButton) {\n            closeButton.style.display = 'none';\n        }\n        // Don't disable the back button - user should be able to cancel\n\n        // Prepare data for background script - let background handle all Chrome API calls\n        statusMessage.textContent = 'Preparing request...';\n        \n        const params = {\n            url: urlValue, // Background script will get current tab URL if not provided\n            html: '', // Background script will get HTML content from current tab\n            instructions: instructionsValue,\n            takeScreenshot: true, // Background script will handle screenshot capture\n            tentative: isTentativeValue,\n            multiday: isMultidayValue,\n            reviewMode: reviewOptionValue,\n            aiModel: selectedModelValue\n        };\n        \n        try {\n            // 4. Wake up service worker and send to background script for processing\n            console.log('Waking up service worker for content processing...');\n            const bgReady = await wakeUpServiceWorker();\n            if (!bgReady) {\n                throw new Error('Background service worker is not responding. Please try reloading the extension.');\n            }\n            \n            let resultJson = null;\n            const response = await chrome.runtime.sendMessage({\n                action: 'processContent',\n                params: params\n            });\n            \n            // Handle Chrome runtime errors first\n            if (chrome.runtime.lastError) {\n                throw new Error(`Runtime error: ${chrome.runtime.lastError.message}`);\n            }\n            \n            // Handle background script response\n            if (!response) {\n                throw new Error('No response from background script. Please check extension status and try again.');\n            }\n            \n            console.log('Received response from background script:', response);\n            \n            if (!response.success) {\n                throw new Error(response.error || 'Processing failed');\n            }\n            \n            resultJson = response.result;\n            const responseText = JSON.stringify(resultJson); // For debugging\n\n            console.log(\"BACKGROUND SCRIPT RESPONSE:\", resultJson);\n            console.log(\"needsReview:\", resultJson.needsReview);\n            console.log(\"confirmationToken:\", resultJson.confirmationToken);\n            console.log(\"icsContent length:\", resultJson.icsContent ? resultJson.icsContent.length : 'missing');\n \n            if (resultJson.needsReview) {\n                // Review is needed according to the server\n                if (resultJson.confirmationToken && resultJson.icsContent) {\n                    console.log(\"SHOWING REVIEW SECTION - conditions met\");\n                    // All required data for review is present\n                    showReviewSection(resultJson);\n                    showingReview = true;\n                } else {\n                    console.log(\"NOT SHOWING REVIEW - missing required data\");\n                    console.log(\"confirmationToken present:\", !!resultJson.confirmationToken);\n                    console.log(\"icsContent present:\", !!resultJson.icsContent);\n                    // Review needed, but data is missing! Show error in processing view.\n                    console.error(\"Review needed, but missing confirmationToken or icsContent from server:\", resultJson);\n                    statusMessage.textContent = 'Error: Review data missing from server.';\n                }\n            } else {\n                // Show PROCESSING view - Success (Sent Directly)\n                statusMessage.textContent = 'Success (Sent Directly)';\n                statusMessage.className = 'status-success';\n                \n                // Create a cleaner success response structure\n                let responseHTML = '';\n                \n                // Add the success message\n                if (resultJson.message) {\n                    responseHTML += `<div class=\"success-message\">${resultJson.message}</div>`;\n                }\n                \n                // Add the event details directly, not in another card\n                if (resultJson.icsContent) {\n                    // Extract just the essential details \n                    responseHTML += parseAndDisplayIcs(resultJson.icsContent);\n                } else {\n                    // Fallback for no ICS content\n                    responseHTML += `<pre class=\"plain-text\">${responseText}</pre>`;\n                }\n                \n                // Set the HTML\n                responseData.innerHTML = responseHTML;\n                \n                // Show the green Close button in the main button group\n                const closeButton = document.getElementById('closeButton');\n                if (closeButton) {\n                    closeButton.style.display = 'block';\n                    closeButton.addEventListener('click', () => {\n                        // Close the iframe if we're in one, otherwise hide the processing view\n                        if (window.self !== window.top) {\n                            // We're in an iframe, send close message to parent\n                            window.parent.postMessage({ type: 'CLOSE_IFRAME' }, '*');\n                        } else {\n                            // Regular popup, go back to form\n                            hideProcessingView();\n                            showFormSection();\n                        }\n                    });\n                }\n                \n                console.log(\"Success (Sent Directly), displayed details\");\n                \n                // Leave showingReview as false\n            }\n\n        } catch (error) {\n            // JS/Fetch error - Show PROCESSING view - Error\n            console.error('generateICS Error:', error);\n            statusMessage.textContent = `Error: ${error.message || 'Unknown error'}`;\n            statusMessage.className = 'status-error';\n            \n            // Show detailed error information\n            let errorDetails = `<div class=\"error-details\">`;\n            errorDetails += `<h4>Error Details:</h4>`;\n            errorDetails += `<p><strong>Message:</strong> ${error.message || 'Unknown error'}</p>`;\n            errorDetails += `<p><strong>Type:</strong> ${error.name || 'Unknown'}</p>`;\n            \n            if (error.stack) {\n                errorDetails += `<p><strong>Stack Trace:</strong></p>`;\n                errorDetails += `<pre style=\"background: #f5f5f5; padding: 10px; border-radius: 4px; font-size: 11px; max-height: 200px; overflow-y: auto;\">${error.stack}</pre>`;\n            }\n            \n            // Add troubleshooting suggestions\n            errorDetails += `<div style=\"margin-top: 15px; padding: 10px; background: #fff3cd; border-radius: 4px;\">`;\n            errorDetails += `<h5>Troubleshooting:</h5>`;\n            errorDetails += `<ul style=\"margin: 5px 0; padding-left: 20px; font-size: 12px;\">`;\n            errorDetails += `<li>Try reloading the extension</li>`;\n            errorDetails += `<li>Check your internet connection</li>`;\n            errorDetails += `<li>Verify API keys in settings</li>`;\n            errorDetails += `<li>Try with a different webpage</li>`;\n            errorDetails += `</ul>`;\n            errorDetails += `</div>`;\n            errorDetails += `</div>`;\n            \n            responseData.innerHTML = errorDetails;\n            // Leave showingReview as false\n        } finally {\n            // Back button should already be enabled (we don't disable it during processing)\n            // Do NOT re-enable the main form here - let the back button handler do that\n        }\n    }\n    // --------------------------------------------\n\n    async function sendReviewedICS() {\n        if (!reviewData || !reviewData.confirmationToken) {\n            showReviewStatus('Error: Missing confirmation data.', 'error');\n            return;\n        }\n\n        showReviewStatus('Sending confirmation...', 'loading');\n        disableReviewButtons();\n\n        try {\n            const response = await chrome.runtime.sendMessage({\n                action: 'confirmEvent',\n                confirmationToken: reviewData.confirmationToken\n            });\n            \n            if (!response) {\n                throw new Error('No response from background script. Please check extension status and try again.');\n            }\n            \n            if (!response.success) {\n                throw new Error(response.error || 'Confirmation failed');\n            }\n\n            // Success!\n            showReviewStatus('Email sent successfully!', 'success');\n            // Optionally hide review section after a delay or show a 'Done' button\n            setTimeout(() => {\n                hideReviewSection();\n            }, 2500); // Hide after 2.5 seconds\n\n        } catch (error) {\n            console.error('Error sending confirmation:', error);\n            showReviewStatus(`Error sending: ${error.message}`, 'error');\n            disableReviewButtons(false); // Re-enable buttons on error\n        }\n    }\n\n    // --- Event Listeners defined within this scope ---\n    convertButton?.addEventListener('click', generateICS);\n    refreshModelsButton?.addEventListener('click', () => loadModels(true));\n    openServerPageButton?.addEventListener('click', () => {\n        if (serverUrl) chrome.tabs.create({ url: serverUrl });\n    });\n    sendButton?.addEventListener('click', sendReviewedICS);\n    rejectButton?.addEventListener('click', hideReviewSection);\n    \n    // Add state saving listeners for form changes\n    urlInput?.addEventListener('input', () => tabStateManager.saveState());\n    instructionsInput?.addEventListener('input', () => tabStateManager.saveState());\n    modelSelect?.addEventListener('change', () => tabStateManager.saveState());\n    tentativeToggle?.addEventListener('change', () => tabStateManager.saveState());\n    multidayToggle?.addEventListener('change', () => tabStateManager.saveState());\n    reviewRadioGroup?.forEach(radio => {\n        radio.addEventListener('change', () => tabStateManager.saveState());\n    });\n\n    // Helper functions for view management\n    function hideProcessingView() {\n        if (processingView) {\n            processingView.style.display = 'none';\n        }\n    }\n    \n    function showFormSection() {\n        if (formSection) {\n            formSection.style.display = 'block';\n        }\n        disableForm(false); // Re-enable the main form controls\n    }\n\n    // --- NEW Back Button Listener ---\n    backToFormButton?.addEventListener('click', () => {\n        hideProcessingView();\n        showFormSection();\n    });\n    // -------------------------------\n    \n    // --- NEW Keyboard Shortcut Listener ---\n    document.addEventListener('keydown', function(event) {\n        // Check if the active element is NOT a textarea or input to avoid interfering with typing\n        const activeElement = document.activeElement;\n        const isTypingArea = activeElement && (activeElement.tagName === 'TEXTAREA' || activeElement.tagName === 'INPUT');\n\n        if (event.key === 'Enter' && (event.ctrlKey || event.metaKey) && !isTypingArea) {\n            // Only trigger if form is visible and not currently processing\n            if (formSection.style.display !== 'none' && processingView.style.display === 'none') {\n                event.preventDefault();\n                convertButton?.click(); \n            }\n        }\n    });\n    // -----------------------------------\n\n    // --- Initialization ---\n    Promise.all([\n        checkAuthenticationAndFetchConfig(),\n        tabStateManager.initialize()\n    ]).then(() => {\n        // After auth check and basic UI setup, check for context menu instructions\n        applyContextMenuInstructions();\n        \n        // Start periodic cleanup\n        setInterval(() => tabStateManager.cleanup(), 3600000); // Every hour\n    });\n\n    function hideReviewSection() {\n        reviewSection.style.display = 'none';\n        formSection.style.display = 'block'; // Show the main form again\n        reviewData = null;\n        hideReviewStatus();\n        disableForm(false); // Re-enable main form controls\n    }\n\n    // --- Updated iCal Parser Helper (using ical.js) ---\n    function parseAndDisplayIcs(icsString) {\n        console.log(\"parseAndDisplayIcs (using ical.js) called - icsString length:\", icsString ? icsString.length : 'none');\n        if (!icsString) return '<p>No ICS data available.</p>';\n\n        try {\n            const jcalData = ICAL.parse(icsString);\n            const vcalendar = new ICAL.Component(jcalData);\n            const vevent = vcalendar.getFirstSubcomponent('vevent');\n\n            if (!vevent) {\n                throw new Error('Could not find VEVENT component in ICS data.');\n            }\n\n            const event = new ICAL.Event(vevent);\n\n            let html = '<dl class=\"ics-details\">';\n\n            // Helper to add property if it exists\n            const addProperty = (label, value) => {\n                if (value) {\n                    // Unescape common characters and handle escaped newlines for display\n                    const displayValue = String(value)\n                        .replace(/\\\\,/g, ',')\n                        .replace(/\\\\;/g, ';')\n                        .replace(/\\\\\\\\/g, '\\\\')\n                        .replace(/\\\\n/g, '<br>'); // Convert escaped newlines to HTML breaks\n                    html += `<dt>${label}:</dt><dd>${displayValue}</dd>`;\n                }\n            };\n\n            addProperty('Event', event.summary);\n            addProperty('Location', event.location);\n\n            // Format dates using toJSDate().toLocaleString() for better readability\n            const startDate = event.startDate;\n            const endDate = event.endDate;\n            if (startDate) {\n                try {\n                    addProperty('Start', startDate.toJSDate().toLocaleString());\n                } catch(dateError) {\n                    console.warn(\"Could not format start date:\", dateError);\n                    addProperty('Start', startDate.toString()); // Fallback to basic string\n                }\n            }\n            if (endDate) {\n                 try {\n                    addProperty('End', endDate.toJSDate().toLocaleString());\n                 } catch(dateError) {\n                    console.warn(\"Could not format end date:\", dateError);\n                    addProperty('End', endDate.toString()); // Fallback to basic string\n                }\n            }\n\n            addProperty('Description', event.description);\n\n            html += '</dl>';\n\n            // Add the raw ICS for debugging (collapsible)\n            html += '<details><summary>Raw ICS Data</summary><pre>';\n            // Escape HTML characters in the raw ICS string for safe display within <pre>\n            html += icsString.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\n            html += '</pre></details>';\n\n            return html;\n\n        } catch (error) {\n            console.error(\"Error parsing/displaying ICS with ical.js:\", error);\n            // Fallback: still provide at least the raw data, escaping HTML chars\n            return `<p class=\"error\">Error displaying ICS: ${error.message}</p>\n                    <pre>${icsString.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;')}</pre>`;\n        }\n    }\n\n    // --- Updated showReviewSection ---\n    function showReviewSection(data) { // Expects parsed JSON data\n        console.log(\"showReviewSection called with data:\", data);\n        // Store necessary data for sending confirmation\n        reviewData = {\n            confirmationToken: data.confirmationToken,\n            recipientEmail: data.recipientEmail, // Keep for display\n            emailSubject: data.emailSubject,     // Keep for display\n            icsContent: data.icsContent           // Keep for display/debugging\n        };\n        console.log(\"reviewData set:\", reviewData);\n\n        reviewRecipient.textContent = data.recipientEmail || 'Unknown';\n        reviewSubject.textContent = data.emailSubject || 'No Subject'; // Populate subject\n        console.log(\"Review recipient/subject populated\");\n\n        // Parse and display the ICS content using the helper\n        console.log(\"About to parse ICS content using ical.js\");\n        reviewContent.innerHTML = parseAndDisplayIcs(data.icsContent || '');\n        console.log(\"ICS content parsed and set to innerHTML\");\n\n        formSection.style.display = 'none';\n        processingView.style.display = 'none'; // Hide processing view too\n        reviewSection.style.display = 'block';\n        console.log(\"Display set: formSection=none, processingView=none, reviewSection=block\");\n        hideStatus();\n        hideReviewStatus();\n        disableReviewButtons(false);\n        console.log(\"Review section display complete\");\n    }\n});\n// ... rest of the file ..."],
  "mappings": "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",
  "names": ["day", "daysInYear", "multiValue", "zones", "urlInput", "checkAuthenticationAndFetchConfig", "closeButton"]
}
